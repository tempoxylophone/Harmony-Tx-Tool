{
    "version": 1,
    "interactions": [
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getCode\", \"params\": [\"0xEa589E93Ff18b1a1F1e9BaC7EF3E86Ab62addc79\", \"latest\"], \"id\": 168}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "122"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Transfer-Encoding": [
                        "chunked"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:51 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00e4|\u00e9\u008e\u00ec\u00bcq\u00f6\u00ff\u00ef2\u00ceo\u00e3C-\u00ac\"\u00e9\u00bb\u00e1\n$\b\u0092\u00c0N\u0080\u0000A\u00ee=(\u0092\u00ea\u0096\u00ba\u00a7O\u00af3o\u00e0w\u00ecc\u00b7(\u0089K\u00ed\u00f5\u0014\u00a9\u00ff\u00fe\u00f5\u00cf\u007f\u00ff\u00b7\u007f\u00fd\u00db\u00bf\u0097_\u007f\u00fdE\u00ff\u001f~\u00fd\u00e5\u00d7?\u00d5_\u007fE\r\u007f\u00f9\u00f5\u00b7\u00f6\u00f7\u00ff\u00fc\u0097\u00ff\u00f8\u00f5\u00d7_\u00f0_\n\u0001\u0014\u001c\b\u00b1\u000b\u0080\u00a2\b\u0080 ^\u0001 @\u00af\u0092\u0005\u0014\u00c0\u00b1\"(\u0002\u00d3\u00ba\u00c7\u00a2\u00d0\u0000K\u0000e\u00dfJ\u00cb\r\u0000Q\u00110y\u00f1\u00d6Z8\bs\u00d1\u00d1\n\u00ad\u00cd\u00d6\u00a6\u0099zvi\u00b6\u00c6\u00f5l\u00a7^\u001b\u0087<[=^\u00b4:EH\u00d9\u00ad\u00d6 9\u00b8\u00e4fk\u00dbz\u00a8\\\u00c9\u00e7\u00b0Z\u00bb\u00f85[\u0095|\u0018w\u00dcw\u00b2f\u00e3\u0013\u0093\u00abe\u00b5\u00d6\u00d5\u0017\"\u00f9VW_\"\u0097}\u0095\u008e\u0085Q\u00d7\u001aJX\u00eb\u00ddZ\u00ed\u00ad\u0018\u00d7zkUj\u0095\u00dbl\u00adke\u00cd\u0015\u00e9\u00dd\u00e9\u001c\u0001\u00ca\u00d5\b\u001b\u00ed\u00c6[$\u001bEKMB0[\u001d\u00ad\u00d6$\u00c5\u00e7\u0088k\\\u00bd\u00ec+q\u00f2\u00cdw\u009e\u00dc\u0011\u0098o\u00a5\b\u0012K\u009e\u0014GJ\u0017\u00ad\u00d6W\b:[\u00b3\u00cb\u00d2\u0092\u00f8\u00d9\u009a\u00fbj\u008d\u0018Pq\u008e\u001b:\u00dd\u001cw\u00dc\u00c75\u00db\u00e4\u00c4\u0017\u00aa\u00ab\u00af\u008d\u000fIc\u00ed.\u00cbl\u00f5\u00ed\u00b2\u00af\u00d0\u0082\u0097\u0086\u0093\u00e2\u0018\u0016\u0015O\u00ad\u00f6\u0096\u00efk\r\u0091%DZR\u0013`\u008d\u001b\u00a5\u0086\u0098\u00dd\u009a-\u00a4\u00cb\u0011N2<\u00fa\ne\u008d\u0010\u0013\u0005\u00f5S>\u00fc\u00b6\u00f2P\u0093\u0094,y\u008d{\u00b5r\u0007\u00ec\u00b4\u00b88fK\u009a\u00e7[R0\u00a6(e\u00b6\u00e2\u0092f\u000f\t\u00021\u00ce\u0095mZrj\u001d#\u00e0\u00920\u008f\u0002\u0018\u00d2\u0094\n\u00efV\u00bf>P\u00d5\u00de\u00d6\u00b3\u00c2\u0097\u00b39\u008dk\u00f75.\u00da\u00a9\u00f6B\u00ec\u00e7\u001a\u00b4\u00ac\u00d9h/\u00bdw'\u00ab\u00f5J.]\u0086\u00d6\u0080&\u001fh\u00e3\u00de\u00a9\u00d5\u00de\u0092\u00b2\u00a8$\u00c1\u0097\u00dapJ\u00ben|\u0090\u00e4\u00b4\u00f2\u00e2\u00b4\u00ca\u0015\u00a7O\u00b4\u001b}\u00b9%\u0081\u000e\nB\u00c7\u00d5\u00aa\u00bcZ\u0083T_\u00e3\u00b4\u0004\u0012\u00affK\u009c\u0083\u00a7Z\u00e7l\u00cb\u00d2n\u0016!\u00ef\u00daZ\u00c3f\u00adN\u00ad\u00d6\u0097\u00eb\u00db\u00b3Q \u00b2L\u00da\n\u00ac\u00f5r\u00c2\u0094\u001a\u00cf5\b_\u00ad\u00e14\u00ee\u00e8k\u009b-\u0005\u00aa\u00dck\u009f\u00adi\u00ad\u008c\u0091K\u0013\u009d\u00fa\u00e0\u00ea\u0095\u00dd2\u001d\u0083\u00ba\u00ad\u00a1/\u00f98\u00b5\u008e\u00b7`\u00b5\u0012PF\u00afS\u0086\u001d\u0085\u00adUA\u00b3_\u00ad\u0092/G\u0000\u00ed\u00b56\u0098z\u00ca\u009b\u00ad\u0081(-\u00f9\u00bcZ\u00d3\u00e2\u001e\u0094LA\u001a\u00cdV\u00b3\u00b2\u0092\u00cf\u009eb\u00bc_\u00cd\u00a2uo\u00bd\u009b_\t \u00a8@\u0010 \u0090P`\u00c1\u0080\u0081\u0001\u00e7\u00ef\u0088\u0091\u0002G\u008a`m\u0011\u0083\u0000F{\u0096\u0003[\u00bf\u0092\u0003\u0007\u00c4\u00e9\u0097X\u008dW\u0018\u00ec\u0012\u0003\u0007\u00b2^\u00aco0\u00da\u00b0\u00eb6\u00a6\u00c0\u00fcO\u001c\u00ff\u00ec\u00d9\b\n\u00d8Q\u0097w\u00e38d=\u0010\u00f0\u009c\u001b\u00a0\u008dE\u0000\u00e6\u00e2\u0010\u0000\u00120F\u00d4p\u00ea=\u009a\u00d5\u00ccb\u0086x\u00f4=\u00fc%\u0006\u0088\u00d6\u001bt\u009e+\u00afF\t\u0017\u0080\u00d5\u00fe\u00eb\u00e0<\u00ef\u001c\u008e\u00fe\u00d4s\u007f\u00f0/ \u000b\u00aa\u00ad\u00c0\u00e6\u00c1\u00d6[NyO\u00db\u0088((F[1\u00caa\u00b4u\u00ccYo3sP\u00f63\u00a3\u00f3\u00cc\u009cI\u00f4~fs\u0084\u0012m\u0004\u00a3\u00be=\u0083\u00aa\b\u0005\u00f18\u00ea\u00efGD\u00bd5\u00e2\u00d0\u0096\u00c3\u0088\u008fSc\u00cdd\u00ca\u00d66\u00b3\u00bafv\u00c5\u0001\u00dd\u008d\u00ea\u00e3;\u001c\b\u0088\u001a\u00a7\u0014\u00a3q!\u0082\u0099\u00f68\u00e4`q\u00a5\u00b2l\u00b3:R{'\u0007.\u0097\u000f\u00caA\u00ad\u00ba\u008d\u00d8\u00bc\"B\u00c4\u00a3\u00ce\u00f5\u001e!\u0012\u00ea]N\u00d9\u00bb\u00e9k\u001a\u00eef/\u0098?7{\u000bz\u00f6\\D\u00e8\u00f9k\u00fa\u00eddG\u00a4\\K\u00eb\u00bcy\u0087\u00f2\u00f2\u001e\u00ff/\u00e6\u008e.\u00de\u009fk\u00a6\u00f7\u00e4\u001c\u0089qG\u00a1\u001b\u00a3\u00b4+\u00fd}r\u0014\u00f3\u00a1s\u0014\u00b5\u0088\u00fe\u00cbQ\u0014\u00c3\u00bb\u00a3\u0004\u00da\u00cb\u00e6\u00e3o?(\u00c17\u00e6\u00ed\u00dd\u00bb\u00f3N\u00f5.\u00a7\u00d5\"\u0088\u00f7F\u00a9r\u00d0\u0005n\u00b4\u00f1\u00a4\u00f7[\u00a3\u00b6w\u00e5\u008b[8\u00d8\u000b\u00fe\b\u00cd=\u00bdi\u00df\u00d1\u0001\u00ech\u008ehq\u00cc\u0097z\u00b0\u00d3o\u00af\u009f\u00d4oq\u00ee\u00ae\u00e6\u00f9\u00f4.\u00fd\u0003\u00b4\u00fb\u00a3\u00d4w\u00f5;\u0010\u00ec\u00f4\u001b1\u00b8p\u0090\u00b5\u00a0\u00f1\u00e2\u00bao\u009e\u00c0\"9\u00b4\\\u00ec\u009e\u0006\u0004z\u00d7>\u0084^\u00ef\u00fa\u009f \u009f\u00f4?\u0089\u00caA\u00caR\u00ba\u0011E\u00ecg\u0010?\u00e8\u00bf1\u00c7|\u0097\u00ff\u00e1m\u00fe\u00e7\u00d4\u00bf^\u00d7n\u0094\b\u00ef\u00f2\u00af\u00b8\u00fb\u00de;r\u00fe\u00c2{\u0017\u0085\u00af\u00df,\u00bb7\u00e5#\u00f1\u00f3\u0016\u00bbM\u009en\u00bf\u00cd\u00c2\u00aae\u0003\u00a7'\u00c3\u00een\u00da\u00b8U\u00d2Qoz\u00f3\u00f7W\u009c\u00df\u00f5?\u00bd\u00df\u0088\u0001vR\u0019\u009b\u00ffLl;)\u00a0H\u00d0\u00c2\u00dd\u0088*\u0011}N\u0017\b\u00e9\u0010\r\u0012A?^\u00e3\u00e6!St\u00b7f\u00a4\u0017\u00f2\u0015\u009e\u00a4\u00f7nF\u00bc\u00e7\u0002\u0011\u00c7\u009b\u009e\u0092Q\u0003\u00cf<qf\u00b0\u0096\u001b\bm9\u0092\u00f9\u00ce\u00872\u00b1T\u00d2{\u00b2B\u00a4z\u00a0\u0099C\u00ba\u00b8^\u00fe~\u00e4\u00bdn\u009f\u009b[~\u00ac\u0000\u00e4\u001f\u001d\u00f0\u00e6\u00df\u00cc\u00a0GN\u001dPQ\u0080l\u00f5\u00d1\u00f8\u00ed\"D\u0007.rp\u0080#\u00aap\u0001\u0081L\u00f3f\u0096\u001eI(\u00d0\u00cc\u00ba\u0015\"[\u008bQ\u00d3\u00e8\u001a\u00ec\u00ce\u00a4TN\u0013\u00c1\u00b2\u009c\u001e\u00ec\u00daO\u00c4\u0013a\u00e0\u0006\u00e2\u00c0\u0001\u0019O6\u00a9\u008e\u00b8\u00deR\u00c96Z\u001c\u0088\u0000\u00c0\u00e4\u009a\u00fd\"\u0088 9\u00a08\u001b}\u00dc]\u00b8\u0081\u00bdo\u00bd\u000e\u00f4%\u0007'~\u00f2t!\n\u00a3\u00b73\u00e6\u00b0\u00a1\u000e\u008b\u00cecv\u00b9\u008f\u00ff\r\u00c6\u0001\u001a\u00be4\u00b8\u00e0\u00ec\u008ai\u00e2\u00156\u009a\u00e4H\u0003e\u0018\u00ef\u00f2\u00c0>,\u00f6\u00b29\u0082\u00da<\u00ec\u0097\u0083h\u00bf\u009cY-\u00d4`\u00fd\u0017\u0013\u0014\u0001f\u001b\u00a5\u00e5\u00b3\u0087\u007fFz\u00d0\r9)p\u00f0o\n\u0003\u00fb\u009ek!q\u00bbu\u0001Dq\u008e\u0097\u00ec\u0016\u00ca6\u0087\u00b5\u00e2\ne=\u0097\u00e63\u00f6\u0084\u0082=\u00f1\u008c\u008d\u0018\u00f6\u00eeL\u0083zE\u0083\u00d3HO\u00f4J\u0017\u00bd\u00b6s\u00af\u0001W\u00af\u00c5\u00e4\u00c3q\u0004E\u00b2\u00bc\u00f1\u00b9\u0011\u00dc\u00dd\u0011\u0006]\"E6I\u0019\u00b2YJ\u00b0\u00ff\u007fa4\u00b9G\u00a5a\u008d&W|\u0004\u0093\u00dd\u00f1\u00db\u00e2z\u00b3\u00bb\u00d2\u0007O\u00c7Z\u00d5\u0002D\u0093\u00c3%\u00cb\u00d9\u00e80\u00e5\u00d1\u00f7PR\u008d\u00a2\u00c1\u00e7\u0014\u00a8Pi\u0002\u00cd\u00bb\u00ee\u00b3\u0017\u00a7N\u009a \u00fa\u00c2Ir+\u0001\u0005\u000bx\u00d2jn;\u0006HA5\u00e0N'\u00aa#\u00d3\u0081\u00a1\u0005\u00da\u00b6X\u00bb\u0096\u0012\u0006W];\u00eb\u00cah\u00f7A6\u00c4M\u0087\u00b6\u00ccz\u0095]Q\b;\f\u0090\u00a9\u001a\u00bdCD\u008eOP1]P\u0011\u008f<\u009b4\u008b\u00f1<\u00abgtk\u009b\u00df\u00b0q\u00cb;L\u00dchZ\u001eq\u00c3\u001e!y\u00e6\u00b9\u00e2\u00a3e\u0088|\u00e2\u00c8\u00a2Gm\u00af\u00cd\u00c4\u00de\u00ed\u00e5U\u000b\u00a1\bm\u00d4e\u00b6\u001c\u00beC(\u00ecc\u0082W\u00ff6\u00ca\f\u008fH\u00d3'\u008c\u00167\u0091]\u00df]\u00f7^\u009b\u00a2\u0092\u0016\u0015N\u0004\u00ca\u008aZ\u00ec\u00ca\u0013\u0081F\u00cf\u0004\u00da\u00b4{G\u00e0\u009d\u0006\u0015\u0002\u009do\u00897:\u00af\u00be\"\u00ecsYu\u00c3'\u00d7\u00a7m\u0007B\u0007\u00f8N\u001a\u00d8\u0095\u00f9\u00e2\u001d\rD\u00c81\u0013\u00c3X\u007f\u00d1\u00ae\u00acy\u00ac\u00b6\u009f\u00d7\u00ec\u00d3Xo'PT\u00a7\u00ce\u0093\u008ag\u00cff\u00ab\u00ef\u00d1`\u00ac*\u0006:\u00e7\u00de\u0001\u0011\u0087e\u00ef\u00de\u00ff\u00dfX\u00ad\u00a2V\u00ed^\u00b4\u0019\u00a7\u00b5{]\u0012@C\u001eP\u009b\u00b2\u00ca\u00a3\u00ab\u00b5h\u0082!\u00f0\u00d9\u00fe\u00bc\u00e1C\u00be\u00f2L=\u0093Y[\u00d3\u00ea\u00a7\u00fb\u00e7;\u00fd\u008b\u0002\u00849J\u0093\u00e3(\u00e3\u008eL\u00ef\u00fc\u00c6\u0088\u00edrE\u00d3\u00cf[ 9\u00e2\u0083\u00cf\u00f6.\u00e7\u00c8zF\u007f\u00f1)\u0084\u00d0<nD\u00df\u0095\u00a4\u00b7\u001a\u0083\u0097\u009aj\n\u00ea\u00b8[\u00c8\u009b\u0003\u0087\u00d4 \u0017\u001fjL\u00e8B\u00c2\u00d0Zs\u00ada\u00f4\u00b1w\u00e8\u00dc\u00a5:\u00f2\u00f1\n\u00ebJt\u00b2\u00ba\u0000\u00b2E]\u00a7(\u00c8\u001f\"\u00a2\u0015\u00e9!\u00a4\u00ba\u008f\u00f4\u00ce\u00fek\u00da{{\"\u00bfd\u00bfmv\u0013\u0095[\u00d54\u001e\u00be\u0001\"/Z\u00a2\u00c9\u00fdFi\u00b2\u00eb2\u00bd\u008f\u00c5\u00d5[4p!+k\u0005\u008f\u00c7\u009b\u0088\u009c\u00b7x\u0013\u0091\u00f8\u009dx\u0013\u00d1\u00b9\u008bx\u00d3\u00afx\u00d3\u00cc\u000f\u00be\u00ea\u00e5\u0010\u00b5\u00bf\u00ee\u00e5\u0010;\u00fe\u00a3y\u00b9\u00b1\u00aalVO\u0091\u0082<I\u0097\u0091\u00ff\u001cu\u00b8_\u00c7\u00cdHT\u0007nlV5\u0086x\u00aa\u00c5N~\u0012\u00bf\u0018?\u00d9\u00bb\u0096\u00df\u00bd\u00ccO\u00aa\u00f1\u001f\u008d\u009f\u00cf\u00e5Q\u00cc\u00e8\u0086\u00fd\u00a6~\u00c8\u00ef\u009e\u00e2\u00c2o\u00ecC\u0000q\u00ef\"\u0007f\u001e#\u009c\u00b2\u00cdaO\u008bY\u0017\u0096!Q[d\u00f2F&\u00f6En\u00f4\u008a\u007f\u009ev\u00f8\u00966,\u007f\u00b9\u00bc\u00c4\u00cb\u0014\u00feb\u00aeK\u008f\u00b8v\u00e6\u00a1\u00c7Y\u00d3\u00d2\u00b1I\u00b38\u00d0\u008b\u00f1\u001bO\u0019\u00cc\u00b9\u00cf\u0093-\u00dfa[\u00f3\u00f9WgI\u00b0\u00c9\u00fe\u00d5,\u001d\u00c3\u00cb\u00da\u00ee,\u00ff{Y\u00db]\u00fd\u00d6\u00f8\u00fc\u000f\u00b1\u00de+\u00faps\u00b7\u00ca\u00c4\f\u00d0\u00f8\u0000O\u00c4a&\u0093\u00be\u0087\u00dc\u0000|,\u00c2\u00a8\u0012\u00d1!;W*\u00f6\n\u00c9u\n\u000e\u00a3\u008b\u00beGO\u0094\u00b8\u00a6\u00d4\u001bg\u0087A\u00bbfu\u00e2\u009b\u00f1\u009e#$\u008b\u0017\u00e4wz\u00ff(}WDu\u00d2{\u00c7\u0081\u00d0\u00e2\f\u0089+\u00d7\u00fc\u001c\u0017\u00c1\r,oC\u00f5( \u00f0\u008c\u00a7\u0098\u00ce(\u0082E9\u008cT\u00ad5\"\u00c7\u0099\u00abOl\u00eeb\u00df\u00cfs\u0096\u00f8\u00c2\u0087\"^EY{\u00cd\u001c4\u00a8\u00ab\u00aa\u00b9F\u001f6\u00f1=+86\u00e2\u00edl\u0082\u00f9v\u0093\u00d8\u00ed\u00f9\u00f7\u0011\u00e0\u00a0\u00a6%\u00a8A\u00b6\u00c83\u00e2\u00b4\u0089a`\u0081\u00a8\u00c6\u00d9O\u00af\u00e0\u00fdy/|\u001a\u000f\\`[\u0083i<-Lx\u00d8\u00b8o\u00e4D\u00e0\u0000\u0093f[\u00cc~\u009c\u00cf\u00ca\u00c4\u0086\u00e9\u00f8J2\u00ac\u00ed\u0003<4{\u0094\u00c3\u0091\u0016\u0087\u00ab\u0089\u000f\u00a0_U\u000b\u00b2\u00d8\u0012x\u00ff\u00c4@\u00f7\u00cds{V\u00d3\u00a8Y\u00c1y\n\u0003\u00f6\u00cf\u00c9n\u0080\u00a0K\u00ee`r\u00cel\u00a9y)\u00c1\u0095/\u00cd\u001a\u00c3\u00c4E\u00d9\u00b4l\u00ea\u00ff\u00b8\u00c3\u0083\u00bb\u00b8\u00c7\u00e9\"\u0004\u00bfb'\u009fF%\u00d6,\u0084`t\u001b\u00cd#\u009f\u00b0\u00ff\u00b1\u009bR\u008e4\u00f3\u001b\u009dr\u0011\u001f\u00d0\u009e\u001eT\u00dbxe9\u00db\u00c4\u00f7\u00f2\u00e4#\u00fa\u0089i?E'y\u008eN&\u00e77d{H\u00d3\u00be\u0012\u00a1\u0080t;\u0096x/~\u00b8\u00c6\u0019\u00e2>\u00db~\u00d1\u00c7\u009dk\u000f{\u00cc\u0019\u0083\u008f\u00e7]\u008c\u0087*\u008d\u00fb\u00f3V\u00c3.\u00f2\u00fe]\u00d4i\u009aa\u001cy\u00ce\u00be\u00cdqV>\u0018\u0099GU\u00e3y\u0004\u00ecK\u0084\u00edR\u009e\u0017\u00f6\u00b1\u00d0.\u0093\u00a6\u00a5\u00b3x\u00c0\u00acb\u00cc/`V\u00bf\u00a9\u0013m\u0098\u00d5\u0005\u00ed\u00da\u00e7h\u00b7\u00cd\u00dc\u00b2\u00b5o\u001b\u00e5\u00b4\u0082\u0080\u00bf\u00a3\u00b2E{\u0083\u00c6\u008b\u00ba#\u00db\u0097\u0099\u0087L\u00ec\u0011\u0013\u00f9=v\u00bc\u00ab\u00e9\u00ecq\u00b1\u00b4\u00cf\u00ff\u00f7\u00b8\u00d8\u008d\u00ba\u008e\u001c\u00ea:<\u00dbf<vB\u00d2\u0092E\u00da?\u0082\u00a4\u00d5+$\u00edP\u00b3\u00b9\u00adG\u001b\"\u008c\u0019\u00cb\u00b7#\u00e9\u00ee7H:\u000f\u008c|\u00cbBD\u00db\u0086\u00ad\u00df\u001a\u00e1\u00a1\u00bc\u00c4\u00b8\u0090\u008d\n\u00e7}\u00d93>\u00c2l#_W\u00140\u00bbq\u009a\n\u00b3;\u00dc\u001f\u0095F\u00cb\u001c\u00b3\u0000\u0003\u00f3\u001e\u009b\u007f\u0084\u00ba\u009a\u0016\u0012\u00bej\u00a8_\u00bd\u00f3\u001b\u000b\u00d2\u00a6\u001ft\u009b\u00b4\u0087\u00d9k\u0094c\u00af\u0013_\u0097k\u00d47\u00a7\u00eb\u00fa\u00fe\u00f3\u0095\u0005\u00bc\u009d!,\u0094\u00ed2C\u00c8\u00db\u00de\u009f\u00b1\u0007\u00eb\u00cdJ\u00c3\u00cf\u00e4\u0006\u00a8\u00c1\u00ed#\u00dc-\u00f6\u0090|Q\u00e9\u00dc\u00e1L_\u00a0\u0018p\u00c6/\u009e@\u00afKL'\u00f4\u00ba\f\u00ab\u00f5:z]\u0012_\u00a0\u00d7\u00f1\u009c\u00c7\u00be_1\u00b7\u0011*\u009f\u00cf\u00d2\u008c\u001dE+w\u00a5\u00b1\u0096f\u0092Y\u00f8b\u00d7\u00ff<i\u0003h\u00b2\u001b\u00c5\u00ac\u00e9\u00b8:\u00d97=\u00ecS\u00e2\u00b9\u00df\r,\n9\u00ed]\u009a\u00f1\u00b2\u00b3\u001c7\u00ce\u00d3v\u00a4\u0090`F\u001eko\u00d3x\u00c3\u00f2\u00ae\u00e6\u0002\u009b\u0089\u00f0\u00b9W\u00e0*\u00d2\\\u00cc\u00e2<25\u008e\u00a5\u00f7\u001a\u008b\u0019\u00d4T}\u008e\u00d5\u0015a\u00f0\u001a\u00d1\u0091T\u0094T\u00fb\u00d8\u00e9\u00e7\u0086\u00cdz\\r\u00b3In[\u00ef\u00adh\u00c7f\u0097\u0006:\u00836\u00b3\u00b9\u00a6\u00d9\u0012h\u00acH\u000e+B@7\u009f\u00e1\u00d3\u009ad\u00ae\t\u00e38\u0007\u00f4\u00f2\u009f\u00f5\u00ad\u00a3\u00b79\u008e\u00d2\u0018\u0087\u00b6\u00d9Y\u00f4fwg\u00cb8\u0013\u0005A/g\u0097h<c&g\u00f0$b\u00f0\u001b\u0097\u00e6\u00be\u00a5\u00b8\u00eb\u00b3\u00d0\u00c8\u00bc!\u00a8\u00d0\u0086R-J!`#{w<I0\u009f\u00dchE4\u00af\u00a3]G\u0016\u008c\u0014u\u00ecM\u0019\u00bbT,\u00ee\u001c\u0019\u00d2x\u00d6\u00d1\u0092\u0015~\u00d7\u001a\u00b4)\u0087\u00b4y\u0096\u00b9v\u00e3\u0081\u00a4\u009ePf|\u008bM\u00b2x\u00aeS\u00cf\u00b8\u00cd_s\u0087\u00dc\u0086\u00c7\u00bc?\u0093\u0091\u00d3\u008d\u009c\u00e7Ik\u008d\u00d8\u00c6\u00e9\u00cf\u009f\u00c2\u00a9\u00f0\u0002\u00a7b\u00b3v\u008c\u001f\u00c5\u00a9.\u00bd\u0010]\u00a3\u00fd#\u00a3\u0099Y\n\u008a\u0084q*\u0013O{\u0005~\u0082\u0012T/\u0011;\u00e9\u00d6z\u009f\u0012\u00c1;Z\u00b1H\u00df\u00b0\u00e2?\u0084w\u0014\u00cac\u00bc\u001b3M\u0001C>\u00a0\u00fek\u0097\u00d6y\u00ef\u00e1>.\u0099\u00f9\u00ee\u00f9T\u0015\u00f6\u00fer\u00fd\u008d\u0000\u00df\u00a8\u00bf\u0011\u00c4?q\u00fd\u00edg*g\u00a6\u008f\u00e87\u001c\u00fd\u0089L\b\u00af2]\u00bc\u0019)\u00bb\u00993mQ\u00c2\u0019\u00afy<\u00fe\"\u0094S\u00fcE\u00e8\u00de\u008a\u00bf\b\u00f52\u00fe\u00ca\u00c32\u0015\u00cb\u00a0\u00ed~\u00ee?\u00a8\u00ddp\u00a9\u00ddb\u00da\r\u008fh7a\u0089\u00df[\u009b'\u00ec\u00f9\u00b26?)5\u00f6\u00da\u0087\u00ab]Ded9p~n!}oG{\u00a7\n\u00e5!\u00d7\u0000\u0088\u0014\u00f8$q\u008e\u00e0\u0084\u00bf\u00ae\u008c{\u00f3:3J\u00d8gB\u00dbY\u00dcu\u00c2\u0010\u0089\u00f4\u00e5\u00fd\u0091d6\u00f9uK\u00c7\u00f0g\u00de\u001f9\u00e2!b\u009f~0\n\u00d0\u00cb(\u00a05k}@\u00ebv5\u00d5\u00a7\u00b4\u00cd\u00a1F:c\u00d3\u009f\u00aa\u00aaN\r\u00de\u00d5U\u009f<!\u00bb\u00be\\p\u0013\u00b3~\u0094\u00e2[\u007f\u00d3\u00ca\u009f}\u00ca\u00b4\u00aeW\u0088\u00faBJ,-\u00d8\u00a3\u00eb{\u001c\u00e6\u00d9\u009d\u0010\u00c3\u009e!\u00b9\u009f\u00ac\u00ff\u0092\u00bb\u008c\u00ab\u00cdz\u0093\u00fbh\\=\u00b8D\u0002?\u00a9\u001f\u0097um\u001a\u0018\u00e1g\u00eb\u00da\u00b0U6OH\u00f2\u00d71\u0084\u000b~T\u00dc\u009cPt3\u0092\b\u00d3\u00b6\u008bI\u00d9@\u001d\u0006\u00ea\u001b\u00d1h\u0013\u008a\u00e4\u0086MZn\u00c5W\u00c9\u0015]\u00f7\u00e8\u00c8Wl\u00c1u\u00ae\u0015\u0018]\u0081\u00ee\u00b3-\u00a8I&\u0080TB\u00f1\u0085s$\u0099\u00d5\u00bfs^\u0099\u00f8\u0018#\u009b\u00c7\u009dy\u0000\u008do\u001b}36\u00db\u00f6v[\u00ccJ\u00ab\u008a\u00ab\u008af\u0095\u00cdr{\u00f6\u00a2\u00e4\u009d'Ee\u00ef4j\u00d7v\u00de\u00eb\u00ac\u00aa\u00c5,7<\u0084\u00cdZ\u00fe\u000e\u001cw\u00ab\u001d\u00a7=\u00fa\u00ee\u009c\u00ce\u00aa\u0018\u008f\u00ca-\u0005\n\u00ce$G-\u00dd+\u00e2{\u0093\f\u00e3\u00bb:\u0003W\u00fc9\u0089\u00bd\u00ca\u0092r\u00b5\u00d6\u0087,\u00fa@\u00bep\u00ac\u00a1\u00f2\u00b7s4\u00dd\u00e3\u00a8:\u008d^\u00cd\u0007\u009fxI>\u009e\u00f7\u00ea\u00efG\u00b8\u00cf\u00d1\u0080\u0081'\u007f\u00ea\u0089?\u0097gCH[\u000f\u001c&z^\u00f8\u00c9l\u00e0\u00ac\u00c9_\u00c6\u0092\u00ab\u00de\u0014\u00e4\u00b2\u00d2G\u009eZ\u00a4\u0099KX,v\u00b5\u0003\u00f4,\u0085\u0016Z\u00b9\u00a5u\u00be\u0096\u009f\u0092+\u00a3\u00dc\u00b0/\u0087/\u00fa\u00ec\u0011\u00d5[\u00df\u001c\"?\u00ea\u00ab7\u00be9D\u00fe\u00b0\u00ca\u009b\u00df\u001c\"_\u00da\u0087\u00bf9T\u00b7Q/\u00f5|D\u008a\u00a7\u00f9\u009f\u00b5\u00f7\u001b5!\u00df\u00d5\u0084q&E\u00e3\u00ef\u00ad\u00da\u00a3\u009a\u00f0\u00b4\u00cf\r\u00f5\u00fb\u00ed\u00fb\u00efN\u00b1T\u008d\u00f3\u00dc\u00ca'\u00cf\u00ecPh\u00d3\u00ebNmo\u00b0;\u00a9iw;_eu$O\u009c)\u00beD\u0006\u00aew{\u009a\u0096\u0093\u00be{\u00ce%\u00e0\u00b9\u00ff\u00cb\u0088!Bt\"\u0003\u001f\u009f\u0091\u00c1D\u00a79b$\u00dfk\u00ed$\u0094*\u00e6F%\u00c4\u00ac\u00b1P\u0006\r\u00bd\u00b0\u000f5\u00a5(\u0094\u0093\u00ef\u00a8\\\u00c6\u00e7&)t\u0091\u00e4j\u0017\u00e2\u00cc\u00ad\u00df\u0088\u0010F\u00b5\u00f2\u00a9\u0013~\u00fc\\\u00a6\u00b8a\u00db\u0014\u008bl\u00fe8\u0098Q\u00cc\u00d3V\u00d0s\u00fb\u00e3\u0018u\u00bc\u0097by\u00f6\u00bd\u00c7\u00ab\u008d\u00f6\u0094\u008d\u0081}\u00ab7R\u00f2\u00cf\u009e\u00be}r\u009f\u00d2\u0007\u00ea\u008d\u00fe\u00b7\u00f5F\u00d8b!J!\u0005\u009a'bg\u00de2\u00ab\u00d8\u0094b\bz:\u00ab\u00da\u00e6\u00d7\u00806\u00e4\u00f59]z\u0089\u00b7\u00f4\n\u008f\u00e6\u00f9\u0095\u00b1\u00ae\u00ec\u009eDA\u00fe\u0080\u00fd\u00a2\u008f\u00f2(KY<Z\u00b6f\u00ed4\u00e8\u00b5[Lr\u00e4\u00d1g\u0011\u00b4\u00d3\u00f7\u00de\u0090rl\u00c1\u00bdt\u001eA\u00b6\u00ca\u00ca)O\u00ba\u008a\u00ae~\u008f\u0007?\u00ea\u009fPC\f:\u00e5\u00c12\u00f8\u0088\"\u00c3\u008f\u00b8(\u0002\u00163\u008e\u00bb\u00e4;#\u00bb\u0016\u00125\u00ad\u00d1[\f\u0097|\u0013\u0007\u0088-\u00c9\u00fc\u00b6&F\u00adU:\u00e4\u00e4\u00aak=J\u0000n\u00a1q/$\u00beG\u00b3\u009aF\u00f5Byd\u0010\u00d7\u0091\u00df\u00a0\u0092{\u00fa<\u00c4B\u0001J\u00c2\u001f\u00cc=\u00e4\u0012\u0005`\u007f\u00deu\u00f4Q\u0014\u00a0B\u00fd\u00c1u\u00f1%J\u0016\u008a\u00b5>\u0084MW\f\u00a7\u008cb\u008b1\u0090\u00aaZ\u00aexk\u00ef\u0096\u001e\u00cf\u00e4\u00b3n\u0098\u00dc\u0013t\u00d2\u00bbgM\u000e;\u00b0\u009e\u00d2w\u00b9\u00dd\u00f7\u00d4\u00c3mgP\u001c\u0019QX\u00d5\u000e[wl/\u00c7;W8\u00c9>\u00e2\u00d9\u00b0\u0090S\u00cc\u0003\u00a7\u0098g|Ifh\u00ad\u009fZ\u00fb~\u00dc\u00b3\u00ff2\u00cd\u0001\u0017Aj\b'~\u00fbg1\u00f4\u00a5\u00b5\u00db7\u00e0\u00fc\u00a0Ys\u0093b\u008d\u00d3\u0005F\u00b8h\u00b8\u00e5\u0083\u00f4\u00ad\u00e8\u00f9\u00f0f\u00f1\u00eb(\u00dd\u00b1\u00a2\u0007\u000f*\u00ea6\u0014\u00dd\u00db\u00bb\u00e2\u0083\u00b2\u008a\u00b5\u00db\u00bf\u00e3\b\u008f\u00ee\u0090\u00a3V\u00d1\u00f1-m\u00e1~\u00d0\u0016L\u00dd\u00da\u0086n\"C\u00ac'Ogkr\u00c7=\u00f8+\u008e\u00b4\u0095<\u00f7u\u0095\u009f\u008f\u00c4\u00e2\u00d7\u00a7B\u0006\n7P\u0003t+\u00fe\u00ed\u00a9>\u0015#\u00fd!k\u00f9:b\u0019\u00bbq\u00c4\u00f8\u00e6t\u00bf+k\u00ee\u00c1\u001a\u00d6x\u007fZ\u00c1]\u00eeB\r\u00c3\u00d6<\u00ff\u00e5\u0092\u00cd\u008e\u008c\u000f\u00aa\u0093\u00f5B\u0010\u00f28\rAB\u00e7\u00b6(\u0082A-\u009e\u00b1{\u00afSb\u00d3\u0080\u0089\u00f9\u00a0\u000f^$\u00d2\u00c45\u00a2\u008e\u009dFr\u008eY\u00e7^v\u00b3\u00a93\u00c2\u0089\u0014\u00c2\u00ac\u00e4\u00ad:\u00c3\u00e8#\u001e\u00bf\u0004\u00e0\u00f6\u00dfM\tn\u00ec\u0093\u00c2\u00a7j5aY\u00cbV(\u00a7R+u\u0090,\u00b16v5\u00c5,\u00c4\u00b5\u00f7\u0090\u009b\u00a3&\u008dC\u000b\u0018J\u00a0^3\u00e4\u00d4\u00bcw\u001c|\u00f2d\u00b3=\u00dbJ\u00ba\u00dek\u0011\u00d0\u00f4\u00fdduF\u00ed\u0099\u00f1\u00f3\u00fe}_\u0007\f\u00eb\u00eb\u00d9\u00c3\u009a\u00b9\u00d3\u00b7\u00b4a~K\u00db\u00ec\u00d2\u00cai\u00d7\u009e\u00b6=\u00ba\u0015\u00f8\u0019\\\u00cb2\u00ed\u00fdi\u0090\u00bd<o\u00df\u00b2\u0001\u00d8\u00ce\u00d1\u0010\u009c\u00ec\u00a1\u00f6\u00e6\u00fc\t\u00e5i\u00db\u0017:\u00c4\u008d\u00aa\u0097h\u00e3\u00c4I\u00bd\u008aw\u0002\u009e4j\u00f7$\u00aa\u00dd;\u0015\u00cf\u00c3\nou\u00cbhO\r<U\u00c6]\u009a\u0088\u008aY\u00e4\u0007\u00c60U,*\u00ea\u0007\u001e%\u008e|\u0014\u00d6\u00a8~\u008c\u0011\u00b5y\u001d5\u00d3\u00a8n\u008e9{9b8\u000b\u0097o\u009eu}y\u00e41,\u00e7\u00fe\u00fc\u00a4{o\u00eb\u001fsc\u00ebMY\u00b3\u0007\u00ed\u00135\u001a\u00b3\u00a4\u00dd\u0097P\u009a\u0017\u00adJ\u00ab\u00c2\u00bb\u00f3P\u009e\t\u0098y~\u0015%z\u00e7\u00f9\u008b\u00fapS\u00f1~_\u0003\u00de\u00aa\u00c4wWr\u00c4\u00b4\u0086\u00bf\u00b4\u00e7lu\u000fS\u00e3\u000eM/\u00be\u00f2r\u00b1\u00b6\u00e3\u00b7^\u00ae06\u001c\u0094A-n\u00e1m\u00f6\u001e\u0081\u001aue\u00f2~\u00f1\u00cd\u008c_\u00fb\u00fa\u001dgrP\u008dz\u00efJ\u00d6@\u00fd\u0007\u00f5\u00bd\u00f3\u00d6\u008b\u00cc\u0015y\u00a3\u00b7\u00cd\u00c8}\u0089\u0094V/Z\u00bc\u00d3\u00e8a\u00c8$\u008f{7P\u00d37\u00e99w\n\u0098$l4\u00fd\u00b06]\u00d3\u00e0\u00ee\u008c\u00d5\u00e4F\u00eb\u00bb\u00f2\u00f8r?\u00b6>^\u0012\u00c3K\u0082\u00ae\u00e84dQf\u00db\u00b9\u00e7D:\u00f9\u00a6\u009e%\u0010\u00a1\u00ad\u00c7At\u0099\u0003\u0085\u008c\u00c9\u00b2l\u00a2\u00a6\u00cee\u00a2\u00aela:iG\u0089\u001c\u00a8P\u00ad\u0019=\u00b4$\u00c9\u0005iN\u00a1\u0094n\u009c\u00d2\u00aeE\u00d9\u00f1\b9\u000b\u0000\u00f3\u00af\u00ff\u00f9\u007f\u00ff\u001b\u0000\u0000\u00ff\u00ff\u0010\u0084\n\u0005\u00ddg\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getCode\", \"params\": [\"0xEa589E93Ff18b1a1F1e9BaC7EF3E86Ab62addc79\", \"latest\"], \"id\": 169}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "122"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Transfer-Encoding": [
                        "chunked"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:51 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00e4|\u00e9\u008e\u00ec\u00bcq\u00f6\u00ff\u00ef2\u00ceo\u00e3C-\u00ac\"\u00e9\u00bb\u00e1\n$\b\u0092\u00c0N\u0080\u0000A\u00ee=(\u0092\u00ea\u0096\u00ba\u00a7O\u00af3o\u00e0w\u00ecc\u00b7(\u0089K\u00ed\u00f5\u0014\u00a9\u00ff\u00fe\u00f5\u00cf\u007f\u00ff\u00b7\u007f\u00fd\u00db\u00bf\u0097_\u007f\u00fdE\u00ff\u001f~\u00fd\u00e5\u00d7?\u00d5_\u007fE\u008d\u007f\u00f9\u00f5\u00b7\u00f6\u00f7\u00ff\u00fc\u0097\u00ff\u00f8\u00f5\u00d7_\u00f0_\n\u0001\u0014\u001c\b\u00b1\u000b\u0080\u00a2\b\u0080 ^\u0001 @\u00af\u0092\u0005\u0014\u00c0\u00b1\"(\u0002\u00d3\u00ba\u00c7\u00a2\u00d0\u0000K\u0000e\u00dfJ\u00cb\r\u0000Q\u00110y\u00f1\u00d6Z8\bs\u00d1\u00d1\n\u00ad\u00cd\u00d6\u00a6\u0099zvi\u00b6\u00c6\u00f5l\u00a7^\u001b\u0087<[=^\u00b4:EH\u00d9\u00ad\u00d6 9\u00b8\u00e4fk\u00dbz\u00a8\\\u00c9\u00e7\u00b0Z\u00bb\u00f85[\u0095|\u0018w\u00dcw\u00b2f\u00e3\u0013\u0093\u00abe\u00b5\u00d6\u00d5\u0017\"\u00f9VW_\"\u0097}\u0095\u008e\u0085Q\u00d7\u001aJX\u00eb\u00ddZ\u00ed\u00ad\u0018\u00d7zkUj\u0095\u00dbl\u00adke\u00cd\u0015\u00e9\u00dd\u00e9\u001c\u0001\u00ca\u00d5\b\u001b\u00ed\u00c6[$\u001bEKMB0[\u001d\u00ad\u00d6$\u00c5\u00e7\u0088k\\\u00bd\u00ec+q\u00f2\u00cdw\u009e\u00dc\u0011\u0098o\u00a5\b\u0012K\u009e\u0014GJ\u0017\u00ad\u00d6W\b:[\u00b3\u00cb\u00d2\u0092\u00f8\u00d9\u009a\u00fbj\u008d\u0018Pq\u008e\u001b:\u00dd\u001cw\u00dc\u00c75\u00db\u00e4\u00c4\u0017\u00aa\u00ab\u00af\u008d\u000fIc\u00ed.\u00cbl\u00f5\u00ed\u00b2\u00af\u00d0\u0082\u0097\u0086\u0093\u00e2\u0018\u0016\u0015O\u00ad\u00f6\u0096\u00efk\r\u0091%DZR\u0013`\u008d\u001b\u00a5\u0086\u0098\u00dd\u009a-\u00a4\u00cb\u0011N2<\u00fa\ne\u008d\u0010\u0013\u0005\u00f5S>\u00fc\u00b6\u00f2P\u0093\u0094,y\u008d{\u00b5r\u0007\u00ec\u00b4\u00b88fK\u009a\u00e7[R0\u00a6(e\u00b6\u00e2\u0092f\u000f\t\u00021\u00ce\u0095mZrj\u001d#\u00e0\u00920\u008f\u0002\u0018\u00d2\u0094\n\u00efV\u00bf>P\u00d5\u00de\u00d6\u00b3\u00c2\u0097\u00b39\u008dk\u00f75.\u00da\u00a9\u00f6B\u00ec\u00e7\u001a\u00b4\u00ac\u00d9h/\u00bdw'\u00ab\u00f5J.]\u0086\u00d6\u0080&\u001fh\u00e3\u00de\u00a9\u00d5\u00de\u0092\u00b2\u00a8$\u00c1\u0097\u00dapJ\u00ben|\u0090\u00e4\u00b4\u00f2\u00e2\u00b4\u00ca\u0015\u00a7O\u00b4\u001b}\u00b9%\u0081\u000e\nB\u00c7\u00d5\u00aa\u00bcZ\u0083T_\u00e3\u00b4\u0004\u0012\u00affK\u009c\u0083\u00a7Z\u00e7l\u00cb\u00d2n\u0016!\u00ef\u00daZ\u00c3f\u00adN\u00ad\u00d6\u0097\u00eb\u00db\u00b3Q \u00b2L\u00da\n\u00ac\u00f5r\u00c2\u0094\u001a\u00cf5\b_\u00ad\u00e14\u00ee\u00e8k\u009b-\u0005\u00aa\u00dck\u009f\u00adi\u00ad\u008c\u0091K\u0013\u009d\u00fa\u00e0\u00ea\u0095\u00dd2\u001d\u0083\u00ba\u00ad\u00a1/\u00f98\u00b5\u008e\u00b7`\u00b5\u0012PF\u00afS\u0086\u001d\u0085\u00adUA\u00b3_\u00ad\u0092/G\u0000\u00ed\u00b56\u0098z\u00ca\u009b\u00ad\u0081(-\u00f9\u00bcZ\u00d3\u00e2\u001e\u0094LA\u001a\u00cdV\u00b3\u00b2\u0092\u00cf\u009eb\u00bc_\u00cd\u00a2uo\u00bd\u009b_\t \u00a8@\u0010 \u0090P`\u00c1\u0080\u0081\u0001\u00e7\u00ef\u0088\u0091\u0002G\u008a`m\u0011\u0083\u0000F{\u0096\u0003[\u00bf\u0092\u0003\u0007\u00c4\u00e9\u0097X\u008dW\u0018\u00ec\u0012\u0003\u0007\u00b2^\u00aco0\u00da\u00b0\u00eb6\u00a6\u00c0\u00fcO\u001c\u00ff\u00ec\u00d9\b\n\u00d8Q\u0097w\u00e38d=\u0010\u00f0\u009c\u001b\u00a0\u008dE\u0000\u00e6\u00e2\u0010\u0000\u00120F\u00d4p\u00ea=\u009a\u00d5\u00ccb\u0086x\u00f4=\u00fc%\u0006\u0088\u00d6\u001bt\u009e+\u00afF\t\u0017\u0080\u00d5\u00fe\u00eb\u00e0<\u00ef\u001c\u008e\u00fe\u00d4s\u007f\u00f0/ \u000b\u00aa\u00ad\u00c0\u00e6\u00c1\u00d6[NyO\u00db\u0088((F[1\u00caa\u00b4u\u00ccYo3sP\u00f63\u00a3\u00f3\u00cc\u009cI\u00f4~fs\u0084\u0012m\u0004\u00a3\u00be=\u0083\u00aa\b\u0005\u00f18\u00ea\u00efGD\u00bd5\u00e2\u00d0\u0096\u00c3\u0088\u008fSc\u00cdd\u00ca\u00d66\u00b3\u00bafv\u00c5\u0001\u00dd\u008d\u00ea\u00e3;\u001c\b\u0088\u001a\u00a7\u0014\u00a3q!\u0082\u0099\u00f68\u00e4`q\u00a5\u00b2l\u00b3:R{'\u0007.\u0097\u000f\u00caA\u00ad\u00ba\u008d\u00d8\u00bc\"B\u00c4\u00a3\u00ce\u00f5\u001e!\u0012\u00ea]N\u00d9\u00bb\u00e9k\u001a\u00eef/\u0098?7{\u000bz\u00f6\\D\u00e8\u00f9k\u00fa\u00eddG\u00a4\\K\u00eb\u00bcy\u0087\u00f2\u00f2\u001e\u00ff/\u00e6\u008e.\u00de\u009fk\u00a6\u00f7\u00e4\u001c\u0089qG\u00a1\u001b\u00a3\u00b4+\u00fd}r\u0014\u00f3\u00a1s\u0014\u00b5\u0088\u00fe\u00cbQ\u0014\u00c3\u00bb\u00a3\u0004\u00da\u00cb\u00e6\u00e3o?(\u00c17\u00e6\u00ed\u00dd\u00bb\u00f3N\u00f5.\u00a7\u00d5\"\u0088\u00f7F\u00a9r\u00d0\u0005n\u00b4\u00f1\u00a4\u00f7[\u00a3\u00b6w\u00e5\u008b[8\u00d8\u000b\u00fe\b\u00cd=\u00bdi\u00df\u00d1\u0001\u00ech\u008ehq\u00cc\u0097z\u00b0\u00d3o\u00af\u009f\u00d4oq\u00ee\u00ae\u00e6\u00f9\u00f4.\u00fd\u0003\u00b4\u00fb\u00a3\u00d4w\u00f5;\u0010\u00ec\u00f4\u001b1\u00b8p\u0090\u00b5\u00a0\u00f1\u00e2\u00bao\u009e\u00c0\"9\u00b4\\\u00ec\u009e\u0006\u0004z\u00d7>\u0084^\u00ef\u00fa\u009f \u009f\u00f4?\u0089\u00caA\u00caR\u00ba\u0011E\u00ecg\u0010?\u00e8\u00bf1\u00c7|\u0097\u00ff\u00e1m\u00fe\u00e7\u00d4\u00bf^\u00d7n\u0094\b\u00ef\u00f2\u00af\u00b8\u00fb\u00de;r\u00fe\u00c2{\u0017\u0085\u00af\u00df,\u00bb7\u00e5#\u00f1\u00f3\u0016\u00bbM\u009en\u00bf\u00cd\u00c2\u00aae\u0003\u00a7'\u00c3\u00een\u00da\u00b8U\u00d2Qoz\u00f3\u00f7W\u009c\u00df\u00f5?\u00bd\u00df\u0088\u0001vR\u0019\u009b\u00ffLl;)\u00a0H\u00d0\u00c2\u00dd\u0088*\u0011}N\u0017\b\u00e9\u0010\r\u0012A?^\u00e3\u00e6!St\u00b7f\u00a4\u0017\u00f2\u0015\u009e\u00a4\u00f7nF\u00bc\u00e7\u0002\u0011\u00c7\u009b\u009e\u0092Q\u0003\u00cf<qf\u00b0\u0096\u001b\bm9\u0092\u00f9\u00ce\u00872\u00b1T\u00d2{\u00b2B\u00a4z\u00a0\u0099C\u00ba\u00b8^\u00fe~\u00e4\u00bdn\u009f\u009b[~\u00ac\u0000\u00e4\u001f\u001d\u00f0\u00e6\u00df\u00cc\u00a0GN\u001dPQ\u0080l\u00f5\u00d1\u00f8\u00ed\"D\u0007.rp\u0080#\u00aap\u0001\u0081L\u00f3f\u0096\u001eI(\u00d0\u00cc\u00ba\u0015\"[\u008bQ\u00d3\u00e8\u001a\u00ec\u00ce\u00a4TN\u0013\u00c1\u00b2\u009c\u001e\u00ec\u00daO\u00c4\u0013a\u00e0\u0006\u00e2\u00c0\u0001\u0019O6\u00a9\u008e\u00b8\u00deR\u00c96Z\u001c\u0088\u0000\u00c0\u00e4\u009a\u00fd\"\u0088 9\u00a08\u001b}\u00dc]\u00b8\u0081\u00bdo\u00bd\u000e\u00f4%\u0007'~\u00f2t!\n\u00a3\u00b73\u00e6\u00b0\u00a1\u000e\u008b\u00cecv\u00b9\u008f\u00ff\r\u00c6\u0001\u001a\u00be4\u00b8\u00e0\u00ec\u008ai\u00e2\u00156\u009a\u00e4H\u0003e\u0018\u00ef\u00f2\u00c0>,\u00f6\u00b29\u0082\u00da<\u00ec\u0097\u0083h\u00bf\u009cY-\u00d4`\u00fd\u0017\u0013\u0014\u0001f\u001b\u00a5\u00e5\u00b3\u0087\u007fFz\u00d0\r9)p\u00f0o\n\u0003\u00fb\u009ek!q\u00bbu\u0001Dq\u008e\u0097\u00ec\u0016\u00ca6\u0087\u00b5\u00e2\ne=\u0097\u00e63\u00f6\u0084\u0082=\u00f1\u008c\u008d\u0018\u00f6\u00eeL\u0083zE\u0083\u00d3HO\u00f4J\u0017\u00bd\u00b6s\u00af\u0001W\u00af\u00c5\u00e4\u00c3q\u0004E\u00b2\u00bc\u00f1\u00b9\u0011\u00dc\u00dd\u0011\u0006]\"E6I\u0019\u00b2YJ\u00b0\u00ff\u007fa4\u00b9G\u00a5a\u008d&W|\u0004\u0093\u00dd\u00f1\u00db\u00e2z\u00b3\u00bb\u00d2\u0007O\u00c7Z\u00d5\u0002D\u0093\u00c3%\u00cb\u00d9\u00e80\u00e5\u00d1\u00f7PR\u008d\u00a2\u00c1\u00e7\u0014\u00a8Pi\u0002\u00cd\u00bb\u00ee\u00b3\u0017\u00a7N\u009a \u00fa\u00c2Ir+\u0001\u0005\u000bx\u00d2jn;\u0006HA5\u00e0N'\u00aa#\u00d3\u0081\u00a1\u0005\u00da\u00b6X\u00bb\u0096\u0012\u0006W];\u00eb\u00cah\u00f7A6\u00c4M\u0087\u00b6\u00ccz\u0095]Q\b;\f\u0090\u00a9\u001a\u00bdCD\u008eOP1]P\u0011\u008f<\u009b4\u008b\u00f1<\u00abgtk\u009b\u00df\u00b0q\u00cb;L\u00dchZ\u001eq\u00c3\u001e!y\u00e6\u00b9\u00e2\u00a3e\u0088|\u00e2\u00c8\u00a2Gm\u00af\u00cd\u00c4\u00de\u00ed\u00e5U\u000b\u00a1\bm\u00d4e\u00b6\u001c\u00beC(\u00ecc\u0082W\u00ff6\u00ca\f\u008fH\u00d3'\u008c\u00167\u0091]\u00df]\u00f7^\u009b\u00a2\u0092\u0016\u0015N\u0004\u00ca\u008aZ\u00ec\u00ca\u0013\u0081F\u00cf\u0004\u00da\u00b4{G\u00e0\u009d\u0006\u0015\u0002\u009do\u00897:\u00af\u00be\"\u00ecsYu\u00c3'\u00d7\u00a7m\u0007B\u0007\u00f8N\u001a\u00d8\u0095\u00f9\u00e2\u001d\rD\u00c81\u0013\u00c3X\u007f\u00d1\u00ae\u00acy\u00ac\u00b6\u009f\u00d7\u00ec\u00d3Xo'PT\u00a7\u00ce\u0093\u008ag\u00cff\u00ab\u00ef\u00d1`\u00ac*\u0006:\u00e7\u00de\u0001\u0011\u0087e\u00ef\u00de\u00ff\u00dfX\u00ad\u00a2V\u00ed^\u00b4\u0019\u00a7\u00b5{]\u0012@C\u001eP\u009b\u00b2\u00ca\u00a3\u00ab\u00b5h\u0082!\u00f0\u00d9\u00fe\u00bc\u00e1C\u00be\u00f2L=\u0093Y[\u00d3\u00ea\u00a7\u00fb\u00e7;\u00fd\u008b\u0002\u00849J\u0093\u00e3(\u00e3\u008eL\u00ef\u00fc\u00c6\u0088\u00edrE\u00d3\u00cf[ 9\u00e2\u0083\u00cf\u00f6.\u00e7\u00c8zF\u007f\u00f1)\u0084\u00d0<nD\u00df\u0095\u00a4\u00b7\u001a\u0083\u0097\u009aj\n\u00ea\u00b8[\u00c8\u009b\u0003\u0087\u00d4 \u0017\u001fjL\u00e8B\u00c2\u00d0Zs\u00ada\u00f4\u00b1w\u00e8\u00dc\u00a5:\u00f2\u00f1\n\u00ebJt\u00b2\u00ba\u0000\u00b2E]\u00a7(\u00c8\u001f\"\u00a2\u0015\u00e9!\u00a4\u00ba\u008f\u00f4\u00ce\u00fek\u00da{{\"\u00bfd\u00bfmv\u0013\u0095[\u00d54\u001e\u00be\u0001\"/Z\u00a2\u00c9\u00fdFi\u00b2\u00eb2\u00bd\u008f\u00c5\u00d5[4p!+k\u0005\u008f\u00c7\u009b\u0088\u009c\u00b7x\u0013\u0091\u00f8\u009dx\u0013\u00d1\u00b9\u008bx\u00d3\u00afx\u00d3\u00cc\u000f\u00be\u00ea\u00e5\u0010\u00b5\u00bf\u00ee\u00e5\u0010;\u00fe\u00a3y\u00b9\u00b1\u00aalVO\u0091\u0082<I\u0097\u0091\u00ff\u001cu\u00b8_\u00c7\u00cdHT\u0007nlV5\u0086x\u00aa\u00c5N~\u0012\u00bf\u0018?\u00d9\u00bb\u0096\u00df\u00bd\u00ccO\u00aa\u00f1\u001f\u008d\u009f\u00cf\u00e5Q\u00cc\u00e8\u0086\u00fd\u00a6~\u00c8\u00ef\u009e\u00e2\u00c2o\u00ecC\u0000q\u00ef\"\u0007f\u001e#\u009c\u00b2\u00cdaO\u008bY\u0017\u0096!Q[d\u00f2F&\u00f6En\u00f4\u008a\u007f\u009ev\u00f8\u00966,\u007f\u00b9\u00bc\u00c4\u00cb\u0014\u00feb\u00aeK\u008f\u00b8v\u00e6\u00a1\u00c7Y\u00d3\u00d2\u00b1I\u00b38\u00d0\u008b\u00f1\u001bO\u0019\u00cc\u00b9\u00cf\u0093-\u00dfa[\u00f3\u00f9WgI\u00b0\u00c9\u00fe\u00d5,\u001d\u00c3\u00cb\u00da\u00ee,\u00ff{Y\u00db]\u00fd\u00d6\u00f8\u00fc\u000f\u00b1\u00de+\u00faps\u00b7\u00ca\u00c4\f\u00d0\u00f8\u0000O\u00c4a&\u0093\u00be\u0087\u00dc\u0000|,\u00c2\u00a8\u0012\u00d1!;W*\u00f6\n\u00c9u\n\u000e\u00a3\u008b\u00beGO\u0094\u00b8\u00a6\u00d4\u001bg\u0087A\u00bbfu\u00e2\u009b\u00f1\u009e#$\u008b\u0017\u00e4wz\u00ff(}WDu\u00d2{\u00c7\u0081\u00d0\u00e2\f\u0089+\u00d7\u00fc\u001c\u0017\u00c1\r,oC\u00f5( \u00f0\u008c\u00a7\u0098\u00ce(\u0082E9\u008cT\u00ad5\"\u00c7\u0099\u00abOl\u00eeb\u00df\u00cfs\u0096\u00f8\u00c2\u0087\"^EY{\u00cd\u001c4\u00a8\u00ab\u00aa\u00b9F\u001f6\u00f1=+86\u00e2\u00edl\u0082\u00f9v\u0093\u00d8\u00ed\u00f9\u00f7\u0011\u00e0\u00a0\u00a6%\u00a8A\u00b6\u00c83\u00e2\u00b4\u0089a`\u0081\u00a8\u00c6\u00d9O\u00af\u00e0\u00fdy/|\u001a\u000f\\`[\u0083i<-Lx\u00d8\u00b8o\u00e4D\u00e0\u0000\u0093f[\u00cc~\u009c\u00cf\u00ca\u00c4\u0086\u00e9\u00f8J2\u00ac\u00ed\u0003<4{\u0094\u00c3\u0091\u0016\u0087\u00ab\u0089\u000f\u00a0_U\u000b\u00b2\u00d8\u0012x\u00ff\u00c4@\u00f7\u00cds{V\u00d3\u00a8Y\u00c1y\n\u0003\u00f6\u00cf\u00c9n\u0080\u00a0K\u00ee`r\u00cel\u00a9y)\u00c1\u0095/\u00cd\u001a\u00c3\u00c4E\u00d9\u00b4l\u00ea\u00ff\u00b8\u00c3\u0083\u00bb\u00b8\u00c7\u00e9\"\u0004\u00bfb'\u009fF%\u00d6,\u0084`t\u001b\u00cd#\u009f\u00b0\u00ff\u00b1\u009bR\u008e4\u00f3\u001b\u009dr\u0011\u001f\u00d0\u009e\u001eT\u00dbxe9\u00db\u00c4\u00f7\u00f2\u00e4#\u00fa\u0089i?E'y\u008eN&\u00e77d{H\u00d3\u00be\u0012\u00a1\u0080t;\u0096x/~\u00b8\u00c6\u0019\u00e2>\u00db~\u00d1\u00c7\u009dk\u000f{\u00cc\u0019\u0083\u008f\u00e7]\u008c\u0087*\u008d\u00fb\u00f3V\u00c3.\u00f2\u00fe]\u00d4i\u009aa\u001cy\u00ce\u00be\u00cdqV>\u0018\u0099GU\u00e3y\u0004\u00ecK\u0084\u00edR\u009e\u0017\u00f6\u00b1\u00d0.\u0093\u00a6\u00a5\u00b3x\u00c0\u00acb\u00cc/`V\u00bf\u00a9\u0013m\u0098\u00d5\u0005\u00ed\u00da\u00e7h\u00b7\u00cd\u00dc\u00b2\u00b5o\u001b\u00e5\u00b4\u0082\u0080\u00bf\u00a3\u00b2E{\u0083\u00c6\u008b\u00ba#\u00db\u0097\u0099\u0087L\u00ec\u0011\u0013\u00f9=v\u00bc\u00ab\u00e9\u00ecq\u00b1\u00b4\u00cf\u00ff\u00f7\u00b8\u00d8\u008d\u00ba\u008e\u001c\u00ea:<\u00dbf<vB\u00d2\u0092E\u00da?\u0082\u00a4\u00d5+$\u00edP\u00b3\u00b9\u00adG\u001b\"\u008c\u0019\u00cb\u00b7#\u00e9\u00ee7H:\u000f\u008c|\u00cbBD\u00db\u0086\u00ad\u00df\u001a\u00e1\u00a1\u00bc\u00c4\u00b8\u0090\u008d\n\u00e7}\u00d93>\u00c2l#_W\u00140\u00bbq\u009a\n\u00b3;\u00dc\u001f\u0095F\u00cb\u001c\u00b3\u0000\u0003\u00f3\u001e\u009b\u007f\u0084\u00ba\u009a\u0016\u0012\u00bej\u00a8_\u00bd\u00f3\u001b\u000b\u00d2\u00a6\u001ft\u009b\u00b4\u0087\u00d9k\u0094c\u00af\u0013_\u0097k\u00d47\u00a7\u00eb\u00fa\u00fe\u00f3\u0095\u0005\u00bc\u009d!,\u0094\u00ed2C\u00c8\u00db\u00de\u009f\u00b1\u0007\u00eb\u00cdJ\u00c3\u00cf\u00e4\u0006\u00a8\u00c1\u00ed#\u00dc-\u00f6\u0090|Q\u00e9\u00dc\u00e1L_\u00a0\u0018p\u00c6/\u009e@\u00afKL'\u00f4\u00ba\f\u00ab\u00f5:z]\u0012_\u00a0\u00d7\u00f1\u009c\u00c7\u00be_1\u00b7\u0011*\u009f\u00cf\u00d2\u008c\u001dE+w\u00a5\u00b1\u0096f\u0092Y\u00f8b\u00d7\u00ff<i\u0003h\u00b2\u001b\u00c5\u00ac\u00e9\u00b8:\u00d97=\u00ecS\u00e2\u00b9\u00df\r,\n9\u00ed]\u009a\u00f1\u00b2\u00b3\u001c7\u00ce\u00d3v\u00a4\u0090`F\u001eko\u00d3x\u00c3\u00f2\u00ae\u00e6\u0002\u009b\u0089\u00f0\u00b9W\u00e0*\u00d2\\\u00cc\u00e2<25\u008e\u00a5\u00f7\u001a\u008b\u0019\u00d4T}\u008e\u00d5\u0015a\u00f0\u001a\u00d1\u0091T\u0094T\u00fb\u00d8\u00e9\u00e7\u0086\u00cdz\\r\u00b3In[\u00ef\u00adh\u00c7f\u0097\u0006:\u00836\u00b3\u00b9\u00a6\u00d9\u0012h\u00acH\u000e+B@7\u009f\u00e1\u00d3\u009ad\u00ae\t\u00e38\u0007\u00f4\u00f2\u009f\u00f5\u00ad\u00a3\u00b79\u008e\u00d2\u0018\u0087\u00b6\u00d9Y\u00f4fwg\u00cb8\u0013\u0005A/g\u0097h<c&g\u00f0$b\u00f0\u001b\u0097\u00e6\u00be\u00a5\u00b8\u00eb\u00b3\u00d0\u00c8\u00bc!\u00a8\u00d0\u0086R-J!`#{w<I0\u009f\u00dchE4\u00af\u00a3]G\u0016\u008c\u0014u\u00ecM\u0019\u00bbT,\u00ee\u001c\u0019\u00d2x\u00d6\u00d1\u0092\u0015~\u00d7\u001a\u00b4)\u0087\u00b4y\u0096\u00b9v\u00e3\u0081\u00a4\u009ePf|\u008bM\u00b2x\u00aeS\u00cf\u00b8\u00cd_s\u0087\u00dc\u0086\u00c7\u00bc?\u0093\u0091\u00d3\u008d\u009c\u00e7Ik\u008d\u00d8\u00c6\u00e9\u00cf\u009f\u00c2\u00a9\u00f0\u0002\u00a7b\u00b3v\u008c\u001f\u00c5\u00a9.\u00bd\u0010]\u00a3\u00fd#\u00a3\u0099Y\n\u008a\u0084q*\u0013O{\u0005~\u0082\u0012T/\u0011;\u00e9\u00d6z\u009f\u0012\u00c1;Z\u00b1H\u00df\u00b0\u00e2?\u0084w\u0014\u00cac\u00bc\u001b3M\u0001C>\u00a0\u00fek\u0097\u00d6y\u00ef\u00e1>.\u0099\u00f9\u00ee\u00f9T\u0015\u00f6\u00fer\u00fd\u008d\u0000\u00df\u00a8\u00bf\u0011\u00c4?q\u00fd\u00edg*g\u00a6\u008f\u00e87\u001c\u00fd\u0089L\b\u00af2]\u00bc\u0019)\u00bb\u00993mQ\u00c2\u0019\u00afy<\u00fe\"\u0094S\u00fcE\u00e8\u00de\u008a\u00bf\b\u00f52\u00fe\u00ca\u00c32\u0015\u00cb\u00a0\u00ed~\u00ee?\u00a8\u00ddp\u00a9\u00ddb\u00da\r\u008fh7a\u0089\u00df[\u009b'\u00ec\u00f9\u00b26?)5\u00f6\u00da\u0087\u00ab]Ded9p~n!}oG{\u00a7\n\u00e5!\u00d7\u0000\u0088\u0014\u00f8$q\u008e\u00e0\u0084\u00bf\u00ae\u008c{\u00f3:3J\u00d8gB\u00dbY\u00dcu\u00c2\u0010\u0089\u00f4\u00e5\u00fd\u0091d6\u00f9uK\u00c7\u00f0g\u00de\u001f9\u00e2!b\u009f~0\n\u00d0\u00cb(\u00a05k}@\u00ebv5\u00d5\u00a7\u00b4\u00cd\u00a1F:c\u00d3\u009f\u00aa\u00aaN\r\u00de\u00d5U\u009f<!\u00bb\u00be\\p\u0013\u00b3~\u0094\u00e2[\u007f\u00d3\u00ca\u009f}\u00ca\u00b4\u00aeW\u0088\u00faBJ,-\u00d8\u00a3\u00eb{\u001c\u00e6\u00d9\u009d\u0010\u00c3\u009e!\u00b9\u009f\u00ac\u00ff\u0092\u00bb\u008c\u00ab\u00cdz\u0093\u00fbh\\=\u00b8D\u0002?\u00a9\u001f\u0097um\u001a\u0018\u00e1g\u00eb\u00da\u00b0U6OH\u00f2\u00d71\u0084\u000b~T\u00dc\u009cPt3\u0092\b\u00d3\u00b6\u008bI\u00d9@\u001d\u0006\u00ea\u001b\u00d1h\u0013\u008a\u00e4\u0086MZn\u00c5W\u00c9\u0015]\u00f7\u00e8\u00c8Wl\u00c1u\u00ae\u0015\u0018]\u0081\u00ee\u00b3-\u00a8I&\u0080TB\u00f1\u0085s$\u0099\u00d5\u00bfs^\u0099\u00f8\u0018#\u009b\u00c7\u009dy\u0000\u008do\u001b}36\u00db\u00f6v[\u00ccJ\u00ab\u008a\u00ab\u008af\u0095\u00cdr{\u00f6\u00a2\u00e4\u009d'Ee\u00ef4j\u00d7v\u00de\u00eb\u00ac\u00aa\u00c5,7<\u0084\u00cdZ\u00fe\u000e\u001cw\u00ab\u001d\u00a7=\u00fa\u00ee\u009c\u00ce\u00aa\u0018\u008f\u00ca-\u0005\n\u00ce$G-\u00dd+\u00e2{\u0093\f\u00e3\u00bb:\u0003W\u00fc9\u0089\u00bd\u00ca\u0092r\u00b5\u00d6\u0087,\u00fa@\u00bep\u00ac\u00a1\u00f2\u00b7s4\u00dd\u00e3\u00a8:\u008d^\u00cd\u0007\u009fxI>\u009e\u00f7\u00ea\u00efG\u00b8\u00cf\u00d1\u0080\u0081'\u007f\u00ea\u0089?\u0097gCH[\u000f\u001c&z^\u00f8\u00c9l\u00e0\u00ac\u00c9_\u00c6\u0092\u00ab\u00de\u0014\u00e4\u00b2\u00d2G\u009eZ\u00a4\u0099KX,v\u00b5\u0003\u00f4,\u0085\u0016Z\u00b9\u00a5u\u00be\u0096\u009f\u0092+\u00a3\u00dc\u00b0/\u0087/\u00fa\u00ec\u0011\u00d5[\u00df\u001c\"?\u00ea\u00ab7\u00be9D\u00fe\u00b0\u00ca\u009b\u00df\u001c\"_\u00da\u0087\u00bf9T\u00b7Q/\u00f5|D\u008a\u00a7\u00f9\u009f\u00b5\u00f7\u001b5!\u00df\u00d5\u0084q&E\u00e3\u00ef\u00ad\u00da\u00a3\u009a\u00f0\u00b4\u00cf\r\u00f5\u00fb\u00ed\u00fb\u00efN\u00b1T\u008d\u00f3\u00dc\u00ca'\u00cf\u00ecPh\u00d3\u00ebNmo\u00b0;\u00a9iw;_eu$O\u009c)\u00beD\u0006\u00aew{\u009a\u0096\u0093\u00be{\u00ce%\u00e0\u00b9\u00ff\u00cb\u0088!Bt\"\u0003\u001f\u009f\u0091\u00c1D\u00a79b$\u00dfk\u00ed$\u0094*\u00e6F%\u00c4\u00ac\u00b1P\u0006\r\u00bd\u00b0\u000f5\u00a5(\u0094\u0093\u00ef\u00a8\\\u00c6\u00e7&)t\u0091\u00e4j\u0017\u00e2\u00cc\u00ad\u00df\u0088\u0010F\u00b5\u00f2\u00a9\u0013~\u00fc\\\u00a6\u00b8a\u00db\u0014\u008bl\u00fe8\u0098Q\u00cc\u00d3V\u00d0s\u00fb\u00e3\u0018u\u00bc\u0097by\u00f6\u00bd\u00c7\u00ab\u008d\u00f6\u0094\u008d\u0081}\u00ab7R\u00f2\u00cf\u009e\u00be}r\u009f\u00d2\u0007\u00ea\u008d\u00fe\u00b7\u00f5F\u00d8b!J!\u0005\u009a'bg\u00de2\u00ab\u00d8\u0094b\bz:\u00ab\u00da\u00e6\u00d7\u00806\u00e4\u00f59]z\u0089\u00b7\u00f4\n\u008f\u00e6\u00f9\u0095\u00b1\u00ae\u00ec\u009eDA\u00fe\u0080\u00fd\u00a2\u008f\u00f2(KY<Z\u00b6f\u00ed4\u00e8\u00b5[Lr\u00e4\u00d1g\u0011\u00b4\u00d3\u00f7\u00de\u0090rl\u00c1\u00bdt\u001eA\u00b6\u00ca\u00ca)O\u00ba\u008a\u00ae~\u008f\u0007?\u00ea\u009fPC\f:\u00e5\u00c12\u00f8\u0088\"\u00c3\u008f\u00b8(\u0002\u00163\u008e\u00bb\u00e4;#\u00bb\u0016\u00125\u00ad\u00d1[\f\u0097|\u0013\u0007\u0088-\u00c9\u00fc\u00b6&F\u00adU:\u00e4\u00e4\u00aak=J\u0000n\u00a1q/$\u00beG\u00b3\u009aF\u00f5Byd\u0010\u00d7\u0091\u00df\u00a0\u0092{\u00fa<\u00c4B\u0001J\u00c2\u001f\u00cc=\u00e4\u0012\u0005`\u007f\u00deu\u00f4Q\u0014\u00a0B\u00fd\u00c1u\u00f1%J\u0016\u008a\u00b5>\u0084MW\f\u00a7\u008cb\u008b1\u0090\u00aaZ\u00aexk\u00ef\u0096\u001e\u00cf\u00e4\u00b3n\u0098\u00dc\u0013t\u00d2\u00bbgM\u000e;\u00b0\u009e\u00d2w\u00b9\u00dd\u00f7\u00d4\u00c3mgP\u001c\u0019QX\u00d5\u000e[wl/\u00c7;W8\u00c9>\u00e2\u00d9\u00b0\u0090S\u00cc\u0003\u00a7\u0098g|Ifh\u00ad\u009fZ\u00fb~\u00dc\u00b3\u00ff2\u00cd\u0001\u0017Aj\b'~\u00fbg1\u00f4\u00a5\u00b5\u00db7\u00e0\u00fc\u00a0Ys\u0093b\u008d\u00d3\u0005F\u00b8h\u00b8\u00e5\u0083\u00f4\u00ad\u00e8\u00f9\u00f0f\u00f1\u00eb(\u00dd\u00b1\u00a2\u0007\u000f*\u00ea6\u0014\u00dd\u00db\u00bb\u00e2\u0083\u00b2\u008a\u00b5\u00db\u00bf\u00e3\b\u008f\u00ee\u0090\u00a3V\u00d1\u00f1-m\u00e1~\u00d0\u0016L\u00dd\u00da\u0086n\"C\u00ac'Ogkr\u00c7=\u00f8+\u008e\u00b4\u0095<\u00f7u\u0095\u009f\u008f\u00c4\u00e2\u00d7\u00a7B\u0006\n7P\u0003t+\u00fe\u00ed\u00a9>\u0015#\u00fd!k\u00f9:b\u0019\u00bbq\u00c4\u00f8\u00e6t\u00bf+k\u00ee\u00c1\u001a\u00d6x\u007fZ\u00c1]\u00eeB\r\u00c3\u00d6<\u00ff\u00e5\u0092\u00cd\u008e\u008c\u000f\u00aa\u0093\u00f5B\u0010\u00f28\rAB\u00e7\u00b6(\u0082A-\u009e\u00b1{\u00afSb\u00d3\u0080\u0089\u00f9\u00a0\u000f^$\u00d2\u00c45\u00a2\u008e\u009dFr\u008eY\u00e7^v\u00b3\u00a93\u00c2\u0089\u0014\u00c2\u00ac\u00e4\u00ad:\u00c3\u00e8#\u001e\u00bf\u0004\u00e0\u00f6\u00dfM\tn\u00ec\u0093\u00c2\u00a7j5aY\u00cbV(\u00a7R+u\u0090,\u00b16v5\u00c5,\u00c4\u00b5\u00f7\u0090\u009b\u00a3&\u008dC\u000b\u0018J\u00a0^3\u00e4\u00d4\u00bcw\u001c|\u00f2d\u00b3=\u00dbJ\u00ba\u00dek\u0011\u00d0\u00f4\u00fdduF\u00ed\u0099\u00f1\u00f3\u00fe}_\u0007\f\u00eb\u00eb\u00d9\u00c3\u009a\u00b9\u00d3\u00b7\u00b4a~K\u00db\u00ec\u00d2\u00cai\u00d7\u009e\u00b6=\u00ba\u0015\u00f8\u0019\\\u00cb2\u00ed\u00fdi\u0090\u00bd<o\u00df\u00b2\u0001\u00d8\u00ce\u00d1\u0010\u009c\u00ec\u00a1\u00f6\u00e6\u00fc\t\u00e5i\u00db\u0017:\u00c4\u008d\u00aa\u0097h\u00e3\u00c4I\u00bd\u008aw\u0002\u009e4j\u00f7$\u00aa\u00dd;\u0015\u00cf\u00c3\nou\u00cbhO\r<U\u00c6]\u009a\u0088\u008aY\u00e4\u0007\u00c60U,*\u00ea\u0007\u001e%\u008e|\u0014\u00d6\u00a8~\u008c\u0011\u00b5y\u001d5\u00d3\u00a8n\u008e9{9b8\u000b\u0097o\u009eu}y\u00e41,\u00e7\u00fe\u00fc\u00a4{o\u00eb\u001fsc\u00ebMY\u00b3\u0007\u00ed\u00135\u001a\u00b3\u00a4\u00dd\u0097P\u009a\u0017\u00adJ\u00ab\u00c2\u00bb\u00f3P\u009e\t\u0098y~\u0015%z\u00e7\u00f9\u008b\u00fapS\u00f1~_\u0003\u00de\u00aa\u00c4wWr\u00c4\u00b4\u0086\u00bf\u00b4\u00e7lu\u000fS\u00e3\u000eM/\u00be\u00f2r\u00b1\u00b6\u00e3\u00b7^\u00ae06\u001c\u0094A-n\u00e1m\u00f6\u001e\u0081\u001aue\u00f2~\u00f1\u00cd\u008c_\u00fb\u00fa\u001dgrP\u008dz\u00efJ\u00d6@\u00fd\u0007\u00f5\u00bd\u00f3\u00d6\u008b\u00cc\u0015y\u00a3\u00b7\u00cd\u00c8}\u0089\u0094V/Z\u00bc\u00d3\u00e8a\u00c8$\u008f{7P\u00d37\u00e99w\n\u0098$l4\u00fd\u00b06]\u00d3\u00e0\u00ee\u008c\u00d5\u00e4F\u00eb\u00bb\u00f2\u00f8r?\u00b6>^\u0012\u00c3K\u0082\u00ae\u00e84dQf\u00db\u00b9\u00e7D:\u00f9\u00a6\u009e%\u0010\u00a1\u00ad\u00c7At\u0099\u0003\u0085\u008c\u00c9\u00b2l\u00a2\u00a6\u00cee\u00a2\u00aela:iG\u0089\u001c\u00a8P\u00ad\u0019=\u00b4$\u00c9\u0005iN\u00a1\u0094n\u009c\u00d2\u00aeE\u00d9\u00f1\b9\u000b\u0000\u00f3\u00af\u00ff\u00f9\u007f\u00ff\u001b\u0000\u0000\u00ff\u00ff\u00b8\u00b9\u0080\u00e9\u00ddg\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_chainId\", \"params\": [], \"id\": 170}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "68"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "73"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:52 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b2247\u00d0Q*J-.\u00cd)Q\u00b2R2\u00a803653I61P\u00aa\u00e5\u0002\u0004\u0000\u0000\u00ff\u00ff\u00c8d\u0000l1\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_call\", \"params\": [{\"to\": \"0xEa589E93Ff18b1a1F1e9BaC7EF3E86Ab62addc79\", \"data\": \"0x95d89b41\"}, \"latest\"], \"id\": 171}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "149"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "86"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:52 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b2247\u00d4Q*J-.\u00cd)Q\u00b2R2\u00a80\u00a0\b\u0018Q\u00a6\u00dd\u00c0\u00c0\u00d4\u00d4\u00cc\u00c4\u00d2\u00d4\u00c0\u00c4\u00d4\u0094L\u00a3\u0094j\u00b9\u0000\u0001\u0000\u0000\u00ff\u00ff\u008f]\u00fc\u00e4\u00e9\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_chainId\", \"params\": [], \"id\": 172}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "68"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "73"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:52 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b2247\u00d2Q*J-.\u00cd)Q\u00b2R2\u00a803653I61P\u00aa\u00e5\u0002\u0004\u0000\u0000\u00ff\u00ff\u0095Bf\u00fc1\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_call\", \"params\": [{\"to\": \"0xEa589E93Ff18b1a1F1e9BaC7EF3E86Ab62addc79\", \"data\": \"0x313ce567\"}, \"latest\"], \"id\": 173}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "149"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "70"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:52 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b2247\u00d6Q*J-.\u00cd)Q\u00b2R2\u00a80\u00a0\b\u0018\u001a)\u00d5r\u0001\u0002\u0000\u0000\u00ff\u00ff\u00a2UChi\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_chainId\", \"params\": [], \"id\": 174}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "68"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "73"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:52 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b2247\u00d1Q*J-.\u00cd)Q\u00b2R2\u00a803653I61P\u00aa\u00e5\u0002\u0004\u0000\u0000\u00ff\u00ff3.\u00bd\u00971\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_call\", \"params\": [{\"to\": \"0xEa589E93Ff18b1a1F1e9BaC7EF3E86Ab62addc79\", \"data\": \"0x06fdde03\"}, \"latest\"], \"id\": 175}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "149"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "86"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:52 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b2247\u00d5Q*J-.\u00cd)Q\u00b2R2\u00a80\u00a0\b\u0018Q\u00a6\u00dd\u00c0\u00c0\u00d4\u00d4\u00cc\u00cc\u00d2\u00dc\u00c0\u00cc\u00d4\u009cL\u00a3\u0094j\u00b9\u0000\u0001\u0000\u0000\u00ff\u00ff\u00d4i\u00f2\u0098\u00e9\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://graph.viper.exchange/subgraphs/name/venomprotocol/venomswap-v2",
                "body": "{\"operationName\": \"coininfo\", \"variables\": {\"token_address\": \"0xea589e93ff18b1a1f1e9bac7ef3e86ab62addc79\"}, \"query\": \"\\n        query coininfo($token_address: ID!)  {\\n            pair(id: $token_address) {\\n                id\\n                __typename\\n                token0 {\\n                  id\\n                  __typename\\n                  symbol\\n                  name\\n                  decimals\\n                  totalSupply\\n                  tradeVolumeUSD\\n                  txCount\\n                  totalLiquidity\\n                  derivedETH\\n                }\\n                token1 {\\n                  id\\n                  __typename\\n                  symbol\\n                  name\\n                  decimals\\n                  totalSupply\\n                  tradeVolumeUSD\\n                  txCount\\n                  totalLiquidity\\n                  derivedETH\\n                }\\n            }\\n            token(id: $token_address) {\\n                id\\n                __typename\\n                symbol\\n                name\\n                decimals\\n                totalSupply\\n                tradeVolumeUSD\\n                txCount\\n                totalLiquidity\\n                derivedETH\\n            }\\n        }\\n        \"}",
                "headers": {
                    "user-agent": [
                        "Mozilla/5.0 (Macintosh; Intel Mac OS X 12_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.81 Safari/537.38"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "authority": [
                        "graph.viper.exchange"
                    ],
                    "pragma": [
                        "no-cache"
                    ],
                    "cache-control": [
                        "no-cache"
                    ],
                    "sec-ch-ua": [
                        "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"99\", \"Google Chrome\";v=\"99\""
                    ],
                    "dnt": [
                        "1"
                    ],
                    "sec-ch-ua-mobile": [
                        "?0"
                    ],
                    "sec-ch-ua-platform": [
                        "\"macOS\""
                    ],
                    "origin": [
                        "https://info.viper.exchange"
                    ],
                    "sec-fetch-site": [
                        "same-site"
                    ],
                    "sec-fetch-mode": [
                        "cors"
                    ],
                    "sec-fetch-dest": [
                        "empty"
                    ],
                    "referer": [
                        "https://info.viper.exchange"
                    ],
                    "accept-language": [
                        "en-US,en;q=0.9"
                    ],
                    "Content-Length": [
                        "1276"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Strict-Transport-Security": [
                        "max-age=63072000; includeSubdomains; preload"
                    ],
                    "X-Content-Type-Options": [
                        "nosniff"
                    ],
                    "Content-Length": [
                        "347"
                    ],
                    "access-control-allow-methods": [
                        "GET, OPTIONS, POST"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "graph-attestable": [
                        "true"
                    ],
                    "Content-Security-Policy": [
                        "upgrade-insecure-requests"
                    ],
                    "access-control-allow-headers": [
                        "Content-Type, User-Agent"
                    ],
                    "Server": [
                        "nginx/1.21.4"
                    ],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:52 GMT"
                    ],
                    "X-Frame-Options": [
                        "DENY"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "access-control-allow-origin": [
                        "*"
                    ],
                    "Set-Cookie": []
                },
                "body": {
                    "string": "{\"data\":{\"pair\":null,\"token\":{\"__typename\":\"Token\",\"decimals\":\"18\",\"derivedETH\":\"0.09759852512706292794088379621309339\",\"id\":\"0xea589e93ff18b1a1f1e9bac7ef3e86ab62addc79\",\"name\":\"Viper\",\"symbol\":\"VIPER\",\"totalLiquidity\":\"45930183.557555947004041722\",\"totalSupply\":\"8504\",\"tradeVolumeUSD\":\"366251514.1115404060900163543230229\",\"txCount\":\"3907555\"}}}"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getCode\", \"params\": [\"0x60b206dFD4af82FaFdbA5Af3C619D0c48129b3a1\", \"latest\"], \"id\": 176}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "122"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "65"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:53 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b2247\u00d3Q*J-.\u00cd)Q\u00b2R2\u00a8P\u00aa\u00e5\u0002\u0004\u0000\u0000\u00ff\u00ff\u008a\u00b2p\u00ab)\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getTransactionByHash\", \"params\": [\"0x7fd33525c96258963fcfb0bba74ada0f2b52b40d01a746e9d184dda66df6b52f\"], \"id\": 177}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "149"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "455"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:53 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00fft\u0090An\u001b1\fE\u00f7=\u0086\u00d6\u0083B\u00a4$\u008a\u00f2\t\u00daM\u00d1+\u0090\u0014\u00d9\u00b8\u008d\u00ed`l\u0017\u0001\u0082\u00dc\u00bd\u0018O\u00d0]\u00b8\"?\u00f0?\u00f8\u00df[\u00fa}\u00bd\u009c\u00d7\u0017K\u0087\u0084_sZ\u00d2q\u00a6\u0003\u00f4\u00be\u00a4\u00d5\u00af\u00f7\u00e7[:\u00bc%}\u00be\u00d8\u009for}J\u0087\u0094_;xhgm\u0099\u00b85@\u00c8\u00d8\u00a3d\u00ee\u009cc(c\u0080\u00835c\u00f4J\u00da[\u00cd\u00a3C\f\t\u00eeF\u00b3\u0015J\u00cb\u001e\u00f8\u00e3~R_\u001f\u0091`\u0099\u00ac@ZR\u00ac\u0097\u00d3C\u00a2\u00ac\u0098i\u00c6\u00ac\u0012\u008c!1U\u009aD1\u00821\u00b3U\u0006\u001cZd\u00f3\u00fc\u0092\u00eb\u009eR\u00c8m\u00bf\u007f\u00aeG\u00f3]\u00ec\u0095;9\u00e7\u00ad\u00db\u00d3\u00ff\u000e1Ki\u00d8l\u00106\u001eT\u00c2B\u00b3\u00aa\u00f4*Sr\u00a06\u00d4\u009ag\u0006\u00e9\u0095|L\u00e0:\u00a7\u0010\u00cd m\u0018\u001b\u00a7\u00f3\u00cb\u00fd\u00f6\b\u0093\u0091\u00db0\u00d5\u00fc\u00c9p\u00f3:e\u0002\u001b\u00f2$\u00af(R\u00c8\u001d\u0011p`&\u0098\u00bd\u00b5Q >\u00f3\u007f6\u00b5Q\u0019\u00c0Xk\u00d4\u00edNK:_\u00ce\u001f\u00bd\u0099\u00d3\u0092\u00d6\u000f\u0094=@\u009dy\u0002\"\u00b3J\u00074\u00b30\u008d\u00d2fu\u008a\u00c9\u00c52\u000f\u009f\u0005\u00baI1-#\u008f\u00ec\u0003\u00a7\u001b\u00f4\u00b4\u00a4\u001dp\t7h\u00a6\u0083\u0095j\u0003\f\u001e\u00b9s\u001b\u00c2\u00dc\u00cd\u00a1v\u00adQzU\u009f\u00c5\n\u0016\u00cd\u0004M\u009d \u00e7`m\u00b4}t;\u009e\u00fcz\u0093\u00d3\u00cb\u00fe\u0019z\u0005\u00a6\r\u00e7\u00ed\u00f2P\\\u001a\u000f\u001f%\u0002XA \u00c0\u0087\u008au\u008f\u00e2L\u00a2\u00842\u00a7\u00f5\u00b19V9_\u00c5n\u00c7\u00cb\u00f9\u00fby\u00fa\u00eb\u009e\u0098\u0096\u00f4\u00f7\u00b1\u0019\u0089\r\u0096\u00b2\t\u00f2|\u00df\u00a9\u00e4\u00f4\u00fe\u00fe\u00e5_\u0000\u0000\u0000\u00ff\u00ff\u0086\n\u00dd\u00a4\u00f4\u0002\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getBlockByNumber\", \"params\": [\"0x1c06c31\", false], \"id\": 178}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "95"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "1159"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:53 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u0094\u0094\u00bd\u008e$\u00b9\r\u00c7s?F\u00c5\r\u0083\u00e2\u0097\u00c8\r\r\u0007\u000e\u001c\u0018\u0006.:\\@Q\u00d4m\u001b;\u00d3\u008b\u00e9^c\u00ec\u00c3\u00bd\u00bbQ]=s\u00b3\u009bYhT\u00ab(\u00e9\u00cf\u001f)\u00b2~\u00db\u00feu\u00bd<\u00bf|\u00cd\u00ed\u00d3\u0086\u007f\u0086\u00ed\u00b4\u009d\u00e7\u00f6\u00a9u;m/u\u00fd\u00f6\u00e5\u00b6}\u00fam{\u00fe\u00f64\u00eae\u00fb\u00b4\u00c1kK\u00d0\u00a4\u00b6\u009d\u00b6\u00cfq\u00fd|7\u00f5Vkt\u001b\u0002j\"\r\u001b`_\u0004\u00d6\r\u0096\u000f\u00c3\u00d5\u00aa\u00a5\u00a4a\u00b1\u008e.\f\u00de\u00db\u00f2X\u00d6S\u00a7\u0090n\u00a7\u00edk\u00bc\u00d4\u00f3\u00edoo\u008a\u00ac1\u0007\u00b6\u00b0\u00d4.\u001a\u001e=\u00c2c\u00f6t\u009a\u00b8\u00a6b4\u00cd\u00e1$\u008d\u0094\u00ba\u00f5\u00c5\u0093\u0000f\u00ae\u00b0\f\u009a\u00b4\u009d\u00b6\u00e7\u00cbs\u00d6]\f~\u0018\u00dbi{:\u00bf\u00be\u00fb\u00faq\u00f9\u00ff\u001d\u00dbi\u00bb~\u000e\u00fa\u00e99\u00bf\u00d4\u00f5H\u00d1\u00cc\u00e4Y6+\u00bb\u00cc\u001e1L\u0086h\u001f\u009a9\u00b9\u00c5\u00a4\u0086,m8[tn\u00b4 \u001a\u00e3\u009a\f\u0093\u009d\u00b8o\u00a7\u00ed\u00cb\u00e5\u00d7\u00eb_\u00be\\.O\u000fD\u0004\u0000\u00fb\u00e85\u0014\u00a0\u00c5>C\u00e0\u00bb\u00a5\u00f1c\u00a9=\u00fe\f\u0080\u001fsF84\u00ee\"\f`\u0006z\u00d8\u00da\u00dd\f\u0004\u00f0\u00d8r\u001c\u00b1\u00fdg\u0080\u00bb\u00a9\u00bd\u000b\u00f1n\u00db\u009f\u0000~l\u0080\u00b6k\u001b0\u00f0wx\b\u00ed\u00dd;\u0000\u00de\u00d9q\u00d0\u0003\r\u001f\u00a0\u00b8\u00a3\u00e0\u00db\u00a6\u00f7\u00c7\u001b\u0088\u00ee\u0001\u001a\u00d9=\u001a<\u0096\u0012\u00daGG\u00f4\u00f1\u0005\u008f\u00f8l\u0087\u0083\u0003\u00c8\u00f4\u0083j\u0083\u00f74\u00ee\u00d3\u00dd\u00fbc\u00c5\u00ee\u00f1\u001e\u00c0\r[{;\u00fe&\u0089\u00ba\u0013|w\u0003\u00ef/\u00fc\u0096\u00ad\u00f6\u0087\u0017\u008b\u00b7\u008c\u00ec\u00d7co\u00cc\u00f6~\u00ca\u007f\u00bcP\u00fc\u00c0&\u00ef\u00ee\u008f\u00b1\u0097\u00d8-n\u00f5\u00cf\u00cb\u00e5\u00f6\u00e88\u00ef\u0090\u009a\u00cd\u0013\u00ac\u00ab6GPT\u001c\u00d6jH\u00b6E\u0086\u0012\u00d1\u00a8\u0098D\u00ba\u0015\u00c9J\u00884\u00c7N\u00b4\u00ea\u00de\u0002\u00cf\u008f\u008e\u00ae\u001e\u008c0}4\u0083\u008a5\u00c0g\b!g\u00ad\\\u00ac\u00d3\u00c4\u0091\u000bm;m\u00f3\u00bc\u00d69\u00bf}\u00b9\u00fd\u00e7\u00a8\u00cb\u00ed\u00b4\u00d5\u00eb\u00ed%\u00fe\u001a\u00b7\u00b8[v\u00d2\u00f3\u007f\u008f\u00bek\u0014\u00bc\u009d\u00b6_\u00e3\u00fa\u00f7\u00f3\u00d3\u00f9\u0000\u00e7\u00e4\u00c1\u00f7\u0080~\u008d\u00ebO\u00d7\u009aG8 \u00e5\u00fb\u00de\u007f\u00bf\u00ac\u00e3\u00e8p\u00a6\u00da{\u00a4\u00d4;\u0012\u00cd\u00cc\u000e,]sZaGV\u00c3\u0010\u00d1\u00a6\u00a6T>\u00a6Isp\u0003\u001e\u00cd\u0095\u000e\u00a9\u007f\u00bc\\.\u0087\u00de\u00d8;\u008bs$sgs\u009ekAO\u0017Y\u0088\u0015\u000b\u0001\u00bc\u00a3\u00a6\u008f\u00a55u\u00ad\u0092>F\u00a1\u00d0\u00e2\u00195\u00bazJp\u00d9\u00f0*\u0094\u00a5\u00a3\u0090\u00ba\u00af\u00bd(\u00dd\u00b55H\u001e\u00b8f\u0001\u0016\u00d9l\"\u00d5&\u0097\u00afr\u00a4\u00b1\u001aBZ\u00b7\u00c8\u00905\u00d8\u008azG\u00998\u00c8\u0011\u00bai_Z\u00ca\u00cb8\u00c3=c.X\u00a3\u00ad\u00d1g)Yb&\u00ec\u00f1\u00dc\u00ceOu\u00bd\u00c5\u00d3\u00d7{@\u008a\u00c5\u00cdt\u00ed\u000b/\u00f1|\u008d\u00bc\u009d/\u00cf\u00d7\u00f7\u0002)\u0091\u009a\u00d2\u0010\u0095Pf\u0080cO\u00ccY&\u0089\u00c9Cl\u00b9K\u0098+\u00d3\u00da\u00fdW\u00821!\u00d2H\u0011\u00c7\u00fd\u0013\u00f4RY\u00e7\u00af\u00b7?4\u0093\u00ba\u00ac!,Y\u00b4&Z\u00c1 \u0084fLdBs\u008f\u00ae|r\t\u0013\u008d*5\u00cf\u00d2\u00d1\u00cd\u00fb\u001c\u008d\u0087l\u00a7\u00ed\u00db\u00e3#\u00f9\u00f3/\u00dfso\u009f~\u00de\u00e0\u0015\t\u00a5\u0000\u0090\u00b21G\f\u00cf\u00a6-l\u00b96\u00c6$I\u00a1\u00a6\u00938\u0087:,6\u00b3\u00bd\u00f0\u00c99\u0099\u0099fl\u00a7\r^\u0097\u0085\u00c7\u008a\u00b9_\u009d\u00c3\u00a4\u00e8I\u009c!\u00ce\u00c5\u0004I\u008as6@\u009d\u0085\u00a6][Ge\u0011\u00a8\u00bd;\u008a\u00c1\u00ee\"M\u00cc\u00179\b\u00a3\u00f1\u00c0\u0086\u001c\u0093\u00c8;\u00a0J\u00a6x\u00ef\u0010\u0091\u00ab\u00f5ED\u00a6!\u00d3Q\u00a1\u00ccf\u00a6\r\u001a\u0007I_\u00b8\u00a6X\u009b}\u0018\u00ef\u00ccS\u009c\u00bc\u000f\u009c\u00ad\u0083\u00e1p4\n\u00f2.\u00aa\u0093ip\u00c3\u00b1\u0098\u0084`\u00f8P9DHi\u00c2\u0090\u0090\u00d2N\u0086\u009d\u009b\u00a3\u0086\u0096/\u0090\u0085\u00b5&\u000f\u00d5\u00d8\u008bx.\u00f1\u00d5|:\u0092z[2\u00ba+\u001f9!\u001f\u00dc\u00a5\u0010jj\u00d9\u00a0N$\u0090`\u00cb\u00c1\u009a\u008c\u009a!8\u0080mJ\u00a3\u0085\u0085>`\u00cc\u00b1\u001c\u009c\u00a3\u0002\u000f\u0092\u00be&\u0091\u00a0\u00a4+\u008a\u00b9\u00d2\u00ca5`\u008c\u00e8\u001c3`\u00e1\u0010\u001c\f\u0013Zt\u00d6\u00f2\u00d9\u008c\u00e7\f\u00d5\u00b9t\b\u00ae\u00bb\b\u0007\u008f\u00b9\u00b7h\u008ch\u0091\u00aa\u00d2k\r\u00c90\"\u0088\u00ce\u009c\u0096&\u00a5\u0093\u00d0\u00ba\u00ca\u00a4XmoY\u009es\u00ac\u00c8\u00d8~\u00f9\u00fd\u00f7?\u00fd/\u0000\u0000\u00ff\u00ff/\u00dcg\"\u00b3\b\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getCode\", \"params\": [\"0xEa589E93Ff18b1a1F1e9BaC7EF3E86Ab62addc79\", \"latest\"], \"id\": 179}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "122"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Transfer-Encoding": [
                        "chunked"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:53 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00e4|\u00e9\u008e\u00ec\u00bcq\u00f6\u00ff\u00ef2\u00ceo\u00e3C-\u00ac\"\u00e9\u00bb\u00e1\n$\b\u0092\u00c0N\u0080\u0000A\u00ee=(\u0092\u00ea\u0096\u00ba\u00a7O\u00af3o\u00e0w\u00ecc\u00b7(\u0089K\u00ed\u00f5\u0014\u00a9\u00ff\u00fe\u00f5\u00cf\u007f\u00ff\u00b7\u007f\u00fd\u00db\u00bf\u0097_\u007f\u00fdE\u00ff\u001f~\u00fd\u00e5\u00d7?\u00d5_\u007fE\u001f\u00ff\u00f2\u00ebo\u00ed\u00ef\u00ff\u00f9/\u00ff\u00f1\u00eb\u00af\u00bf\u00e0\u00bf\u0014\u0002(8\u0010b\u0017\u0000E\u0011\u0000A\u00bc\u0002@\u0080^%\u000b(\u0080cEP\u0004\u00a6u\u008fE\u00a1\u0001\u0096\u0000\u00ca\u00be\u0095\u0096\u001b\u0000\u00a2\"`\u00f2\u00e2\u00ad\u00b5p\u0010\u00e6\u00a2\u00a3\u0015Z\u009b\u00adM3\u00f5\u00ec\u00d2l\u008d\u00eb\u00d9N\u00bd6\u000ey\u00b6z\u00bchu\u008a\u0090\u00b2[\u00adArp\u00c9\u00cd\u00d6\u00b6\u00f5P\u00b9\u0092\u00cfa\u00b5v\u00f1k\u00b6*\u00f90\u00ee\u00b8\u00efd\u00cd\u00c6'&W\u00cbj\u00ad\u00ab/D\u00f2\u00ad\u00ae\u00beD.\u00fb*\u001d\u000b\u00a3\u00ae5\u0094\u00b0\u00d6\u00bb\u00b5\u00da[1\u00ae\u00f5\u00d6\u00aa\u00d4*\u00b7\u00d9Z\u00d7\u00ca\u009a+\u00d2\u00bb\u00d39\u0002\u0094\u00ab\u00116\u00da\u008d\u00b7H6\u008a\u0096\u009a\u0084`\u00b6:Z\u00adI\u008a\u00cf\u0011\u00d7\u00b8z\u00d9W\u00e2\u00e4\u009b\u00ef<\u00b9#0\u00dfJ\u0011$\u0096<)\u008e\u0094.Z\u00ad\u00af\u0010t\u00b6f\u0097\u00a5%\u00f1\u00b35\u00f7\u00d5\u001a1\u00a0\u00e2\u001c7t\u00ba9\u00ee\u00b8\u008fk\u00b6\u00c9\u0089/TW_\u001b\u001f\u0092\u00c6\u00da]\u0096\u00d9\u00ea\u00dbe_\u00a1\u0005/\r'\u00c51,*\u009eZ\u00ed-\u00df\u00d7\u001a\"K\u0088\u00b4\u00a4&\u00c0\u001a7J\r1\u00bb5[H\u0097#\u009cdx\u00f4\u0015\u00ca\u001a!&\n\u00ea\u00a7|\u00f8m\u00e5\u00a1&)Y\u00f2\u001a\u00f7j\u00e5\u000e\u00d8iqq\u00cc\u00964\u00cf\u00b7\u00a4`LQ\u00cal\u00c5%\u00cd\u001e\u0012\u0004b\u009c+\u00db\u00b4\u00e4\u00d4:F\u00c0%a\u001e\u00050\u00a4)\u0015\u00de\u00ad~}\u00a0\u00aa\u00bd\u00adg\u0085/gs\u001a\u00d7\u00eek\\\u00b4S\u00ed\u0085\u00d8\u00cf5hY\u00b3\u00d1^z\u00efNV\u00eb\u0095\\\u00ba\f\u00ad\u0001M>\u00d0\u00c6\u00bdS\u00ab\u00bd%eQI\u0082/\u00b5\u00e1\u0094|\u00dd\u00f8 \u00c9i\u00e5\u00c5i\u0095+N\u009fh7\u00farK\u0002\u001d\u0014\u0084\u008e\u00abUy\u00b5\u0006\u00a9\u00be\u00c6i\t$^\u00cd\u00968\u0007O\u00b5\u00ce\u00d9\u0096\u00a5\u00dd,B\u00de\u00b5\u00b5\u0086\u00cdZ\u009dZ\u00ad/\u00d7\u00b7g\u00a3@d\u0099\u00b4\u0015X\u00eb\u00e5\u0084)5\u009ek\u0010\u00beZ\u00c3i\u00dc\u00d1\u00d76[\nT\u00b9\u00d7>[\u00d3Z\u0019#\u0097&:\u00f5\u00c1\u00d5+\u00bbe:\u0006u[C_\u00f2qj\u001do\u00c1j%\u00a0\u008c^\u00a7\f;\n[\u00ab\u0082f\u00bfZ%_\u008e\u0000\u00dakm0\u00f5\u00947[\u0003QZ\u00f2y\u00b5\u00a6\u00c5=(\u0099\u00824\u009a\u00adfe%\u009f=\u00c5x\u00bf\u009aE\u00eb\u00dez7\u00bf\u0012@P\u0081 @ \u00a1\u00c0\u0082\u0001\u0003\u0003\u00ce\u00df\u0011#\u0005\u008e\u0014\u00c1\u00da\"\u0006\u0001\u008c\u00f6,\u0007\u00b6~%\u0007\u000e\u0088\u00d3/\u00b1\u001a\u00af0\u00d8%\u0006\u000ed\u00bdX\u00df`\u00b4a\u00d7mL\u0081\u00f9\u009f8\u00fe\u00d9\u00b3\u0011\u0014\u00b0\u00a3.\u00ef\u00c6q\u00c8z \u00e097@\u001b\u008b\u0000\u00cc\u00c5!\u0000$`\u008c\u00a8\u00e1\u00d4{4\u00ab\u0099\u00c5\f\u00f1\u00e8{\u00f8K\f\u0010\u00ad7\u00e8<W^\u008d\u0012.\u0000\u00ab\u00fd\u00d7\u00c1y\u00de9\u001c\u00fd\u00a9\u00e7\u00fe\u00e0_@\u0016T[\u0081\u00cd\u0083\u00ad\u00b7\u009c\u00f2\u009e\u00b6\u0011QP\u008c\u00b6b\u0094\u00c3h\u00eb\u0098\u00b3\u00def\u00e6\u00a0\u00ecgF\u00e7\u00999\u0093\u00e8\u00fd\u00cc\u00e6\b%\u00da\bF}{\u0006U\u0011\n\u00e2q\u00d4\u00df\u008f\u0088zk\u00c4\u00a1-\u0087\u0011\u001f\u00a7\u00c6\u009a\u00c9\u0094\u00admfu\u00cd\u00ec\u008a\u0003\u00ba\u001b\u00d5\u00c7w8\u0010\u00105N)F\u00e3B\u00043\u00edq\u00c8\u00c1\u00e2Je\u00d9fu\u00a4\u00f6N\u000e\\.\u001f\u0094\u0083Zu\u001b\u00b1yE\u0084\u0088G\u009d\u00eb=B$\u00d4\u00bb\u009c\u00b2w\u00d3\u00d74\u00dc\u00cd^0\u007fn\u00f6\u0016\u00f4\u00ec\u00b9\u0088\u00d0\u00f3\u00d7\u00f4\u00db\u00c9\u008eH\u00b9\u0096\u00d6y\u00f3\u000e\u00e5\u00e5=\u00fe_\u00cc\u001d]\u00bc?\u00d7L\u00ef\u00c99\u0012\u00e3\u008eB7FiW\u00fa\u00fb\u00e4(\u00e6C\u00e7(j\u0011\u00fd\u0097\u00a3(\u0086wG\t\u00b4\u0097\u00cd\u00c7\u00df~P\u0082o\u00cc\u00db\u00bbw\u00e7\u009d\u00ea]N\u00abE\u0010\u00ef\u008dR\u00e5\u00a0\u000b\u00dch\u00e3I\u00ef\u00b7Fm\u00ef\u00ca\u0017\u00b7p\u00b0\u0017\u00fc\u0011\u009a{z\u00d3\u00be\u00a3\u0003\u00d8\u00d1\u001c\u00d1\u00e2\u0098/\u00f5`\u00a7\u00df^?\u00a9\u00df\u00e2\u00dc]\u00cd\u00f3\u00e9]\u00fa\u0007h\u00f7G\u00a9\u00ef\u00eaw \u00d8\u00e97bp\u00e1 kA\u00e3\u00c5u\u00df<\u0081Erh\u00b9\u00d8=\r\b\u00f4\u00ae}\b\u00bd\u00de\u00f5?A>\u00e9\u007f\u0012\u0095\u0083\u0094\u00a5t#\u008a\u00d8\u00cf ~\u00d0\u007fc\u008e\u00f9.\u00ff\u00c3\u00db\u00fc\u00cf\u00a9\u007f\u00bd\u00ae\u00dd(\u0011\u00de\u00e5_q\u00f7\u00bdw\u00e4\u00fc\u0085\u00f7.\n_\u00bfYvo\u00caG\u00e2\u00e7-v\u009b<\u00dd~\u009b\u0085U\u00cb\u0006NO\u0086\u00dd\u00dd\u00b4q\u00ab\u00a4\u00a3\u00de\u00f4\u00e6\u00ef\u00af8\u00bf\u00eb\u007fz\u00bf\u0011\u0003\u00ec\u00a426\u00ff\u0099\u00d8vR@\u0091\u00a0\u0085\u00bb\u0011U\"\u00fa\u009c.\u0010\u00d2!\u001a$\u0082~\u00bc\u00c6\u00cdC\u00a6\u00e8n\u00cdH/\u00e4+<I\u00ef\u00dd\u008cx\u00cf\u0005\"\u008e7=%\u00a3\u0006\u009ey\u00e2\u00cc`-7\u0010\u00dar$\u00f3\u009d\u000feb\u00a9\u00a4\u00f7d\u0085H\u00f5@3\u0087tq\u00bd\u00fc\u00fd\u00c8{\u00dd>7\u00b7\u00fcX\u0001\u00c8?:\u00e0\u00cd\u00bf\u0099A\u008f\u009c:\u00a0\u00a2\u0000\u00d9\u00ea\u00a3\u00f1\u00dbE\u0088\u000e\\\u00e4\u00e0\u0000GT\u00e1\u0002\u0002\u0099\u00e6\u00cd,=\u0092P\u00a0\u0099u+D\u00b6\u0016\u00a3\u00a6\u00d15\u00d8\u009dI\u00a9\u009c&\u0082e9=\u00d8\u00b5\u009f\u0088'\u00c2\u00c0\r\u00c4\u0081\u00032\u009elR\u001dq\u00bd\u00a5\u0092m\u00b48\u0010\u0001\u0080\u00c95\u00fbE\u0010Ar@q6\u00fa\u00b8\u00bbp\u0003{\u00dfz\u001d\u00e8K\u000eN\u00fc\u00e4\u00e9B\u0014Fog\u00ccaC\u001d\u0016\u009d\u00c7\u00ecr\u001f\u00ff\u001b\u008c\u00034|ip\u00c1\u00d9\u0015\u00d3\u00c4+l4\u00c9\u0091\u0006\u00ca0\u00de\u00e5\u0081}X\u00eces\u0004\u00b5y\u00d8/\u0007\u00d1~9\u00b3Z\u00a8\u00c1\u00fa/&(\u0002\u00cc6J\u00cbg\u000f\u00ff\u008c\u00f4\u00a0\u001brR\u00e0\u00e0\u00df\u0014\u0006\u00f6=\u00d7B\u00e2v\u00eb\u0002\u0088\u00e2\u001c/\u00d9-\u0094m\u000ek\u00c5\u0015\u00caz.\u00cdg\u00ec\t\u0005{\u00e2\u0019\u001b1\u00ec\u00dd\u0099\u0006\u00f5\u008a\u0006\u00a7\u0091\u009e\u00e8\u0095.zm\u00e7^\u0003\u00ae^\u008b\u00c9\u0087\u00e3\b\u008ady\u00e3s#\u00b8\u00bb#\f\u00baD\u008al\u00922d\u00b3\u0094`\u00ff\u00ff\u00c2hr\u008fJ\u00c3\u001aM\u00ae\u00f8\b&\u00bb\u00e3\u00b7\u00c5\u00f5fw\u00a5\u000f\u009e\u008e\u00b5\u00aa\u0005\u0088&\u0087K\u0096\u00b3\u00d1a\u00ca\u00a3\u00ef\u00a1\u00a4\u001aE\u0083\u00cf)P\u00a1\u00d2\u0004\u009aw\u00ddg/N\u009d4A\u00f4\u0085\u0093\u00e4V\u0002\n\u0016\u00f0\u00a4\u00d5\u00dcv\f\u0090\u0082j\u00c0\u009dNTG\u00a6\u0003C\u000b\u00b4m\u00b1v-%\f\u00ae\u00bav\u00d6\u0095\u00d1\u00ee\u0083l\u0088\u009b\u000em\u0099\u00f5*\u00bb\u00a2\u0010v\u0018 S5z\u0087\u0088\u001c\u009f\u00a0b\u00ba\u00a0\"\u001ey6i\u0016\u00e3yV\u00cf\u00e8\u00d66\u00bfa\u00e3\u0096w\u0098\u00b8\u00d1\u00b4<\u00e2\u0086=B\u00f2\u00ccs\u00c5G\u00cb\u0010\u00f9\u00c4\u0091E\u008f\u00da^\u009b\u0089\u00bd\u00db\u00cb\u00ab\u0016B\u0011\u00da\u00a8\u00cbl9|\u0087P\u00d8\u00c7\u0004\u00af\u00fem\u0094\u0019\u001e\u0091\u00a6O\u0018-n\"\u00bb\u00be\u00bb\u00ee\u00bd6E%-*\u009c\b\u0094\u0015\u00b5\u00d8\u0095'\u0002\u008d\u009e\t\u00b4i\u00f7\u008e\u00c0;\r*\u0004:\u00df\u0012ot^}E\u00d8\u00e7\u00b2\u00ea\u0086O\u00aeO\u00db\u000e\u0084\u000e\u00f0\u009d4\u00b0+\u00f3\u00c5;\u001a\u0088\u0090c&\u0086\u00b1\u00fe\u00a2]Y\u00f3Xm?\u00af\u00d9\u00a7\u00b1\u00deN\u00a0\u00a8N\u009d'\u0015\u00cf\u009e\u00cdV\u00df\u00a3\u00c1XU\ft\u00ce\u00bd\u0003\"\u000e\u00cb\u00de\u00bd\u00ff\u00bf\u00b1ZE\u00ad\u00da\u00bdh3Nk\u00f7\u00ba$\u0080\u0086<\u00a06e\u0095GWk\u00d1\u0004C\u00e0\u00b3\u00fdy\u00c3\u0087|\u00e5\u0099z&\u00b3\u00b6\u00a6\u00d5O\u00f7\u00cfw\u00fa\u0017\u0005\bs\u0094&\u00c7Q\u00c6\u001d\u0099\u00de\u00f9\u008d\u0011\u00db\u00e5\u008a\u00a6\u009f\u00b7@r\u00c4\u0007\u009f\u00ed]\u00ce\u0091\u00f5\u008c\u00fe\u00e2S\b\u00a1y\u00dc\u0088\u00be+Io5\u0006/5\u00d5\u0014\u00d4q\u00b7\u00907\u0007\u000e\u00a9A.>\u00d4\u0098\u00d0\u0085\u0084\u00a1\u00b5\u00e6Z\u00c3\u00e8c\u00ef\u00d0\u00b9Ku\u00e4\u00e3\u0015\u00d6\u0095\u00e8du\u0001d\u008b\u00baNQ\u0090?DD+\u00d2CHu\u001f\u00e9\u009d\u00fd\u00d7\u00b4\u00f7\u00f6D~\u00c9~\u00db\u00ec&*\u00b7\u00aai<|\u0003D^\u00b4D\u0093\u00fb\u008d\u00d2d\u00d7ez\u001f\u008b\u00ab\u00b7h\u00e0BV\u00d6\n\u001e\u008f7\u00119o\u00f1&\"\u00f1;\u00f1&\u00a2s\u0017\u00f1\u00a6_\u00f1\u00a6\u0099\u001f|\u00d5\u00cb!j\u007f\u00dd\u00cb!v\u00fcG\u00f3rcU\u00d9\u00ac\u009e\"\u0005y\u0092.#\u00ff9\u00eap\u00bf\u008e\u009b\u0091\u00a8\u000e\u00dc\u00d8\u00acj\f\u00f1T\u008b\u009d\u00fc$~1~\u00b2w-\u00bf{\u0099\u009fT\u00e3?\u001a?\u009f\u00cb\u00a3\u0098\u00d1\r\u00fbM\u00fd\u0090\u00df=\u00c5\u0085\u00df\u00d8\u0087\u0000\u00e2\u00deE\u000e\u00cc<F8e\u009b\u00c3\u009e\u0016\u00b3.,C\u00a2\u00b6\u00c8\u00e4\u008dL\u00ec\u008b\u00dc\u00e8\u0015\u00ff<\u00ed\u00f0-mX\u00fery\u0089\u0097)\u00fc\u00c5\\\u0097\u001eq\u00ed\u00ccC\u008f\u00b3\u00a6\u00a5c\u0093fq\u00a0\u0017\u00e37\u009e2\u0098s\u009f'[\u00be\u00c3\u00b6\u00e6\u00f3\u00af\u00ce\u0092`\u0093\u00fd\u00abY:\u0086\u0097\u00b5\u00ddY\u00fe\u00f7\u00b2\u00b6\u00bb\u00fa\u00ad\u00f1\u00f9\u001fb\u00bdW\u00f4\u00e1\u00e6n\u0095\u0089\u0019\u00a0\u00f1\u0001\u009e\u0088\u00c3L&}\u000f\u00b9\u0001\u00f8X\u0084Q%\u00a2Cv\u00aeT\u00ec\u0015\u0092\u00eb\u0014\u001cF\u0017}\u008f\u009e(qM\u00a97\u00ce\u000e\u0083v\u00cd\u00ea\u00c47\u00e3=GH\u0016/\u00c8\u00ef\u00f4\u00feQ\u00fa\u00ae\u0088\u00ea\u00a4\u00f7\u008e\u0003\u00a1\u00c5\u0019\u0012W\u00ae\u00f99.\u0082\u001bX\u00de\u0086\u00eaQ@\u00e0\u0019O1\u009dQ\u0004\u008br\u0018\u00a9ZkD\u008e3W\u009f\u00d8\u00dc\u00c5\u00be\u009f\u00e7,\u00f1\u0085\u000fE\u00bc\u008a\u00b2\u00f6\u009a9hPWUs\u008d>l\u00e2{Vpl\u00c4\u00db\u00d9\u0004\u00f3\u00ed&\u00b1\u00db\u00f3\u00ef#\u00c0AMKP\u0083l\u0091g\u00c4i\u0013\u00c3\u00c0\u0002Q\u008d\u00b3\u009f^\u00c1\u00fb\u00f3^\u00f84\u001e\u00b8\u00c0\u00b6\u0006\u00d3xZ\u0098\u00f0\u00b0q\u00df\u00c8\u0089\u00c0\u0001&\u00cd\u00b6\u0098\u00fd8\u009f\u0095\u0089\r\u00d3\u00f1\u0095dX\u00db\u0007xh\u00f6(\u0087#-\u000eW\u0013\u001f@\u00bf\u00aa\u0016d\u00b1%\u00f0\u00fe\u0089\u0081\u00ee\u009b\u00e7\u00f6\u00ac\u00a6Q\u00b3\u0082\u00f3\u0014\u0006\u00ec\u009f\u0093\u00dd\u0000A\u0097\u00dc\u00c1\u00e4\u009c\u00d9R\u00f3R\u0082+_\u009a5\u0086\u0089\u008b\u00b2i\u00d9\u00d4\u00ffq\u0087\u0007wq\u008f\u00d3E\b~\u00c5N>\u008dJ\u00acY\b\u00c1\u00e86\u009aG>a\u00ffc7\u00a5\u001ci\u00e67:\u00e5\">\u00a0==\u00a8\u00b6\u00f1\u00car\u00b6\u0089\u00ef\u00e5\u00c9G\u00f4\u0013\u00d3~\u008aN\u00f2\u001c\u009dL\u00ceo\u00c8\u00f6\u0090\u00a6}%B\u0001\u00e9v,\u00f1^\u00fcp\u008d3\u00c4}\u00b6\u00fd\u00a2\u008f;\u00d7\u001e\u00f6\u00983\u0006\u001f\u00cf\u00bb\u0018\u000fU\u001a\u00f7\u00e7\u00ad\u0086]\u00e4\u00fd\u00bb\u00a8\u00d34\u00c38\u00f2\u009c}\u009b\u00e3\u00ac|02\u008f\u00aa\u00c6\u00f3\b\u00d8\u0097\b\u00db\u00a5</\u00ecc\u00a1]&MKg\u00f1\u0080Y\u00c5\u0098_\u00c0\u00ac~S'\u00da0\u00ab\u000b\u00da\u00b5\u00cf\u00d1n\u009b\u00b9ek\u00df6\u00cai\u0005\u0001\u007fGe\u008b\u00f6\u0006\u008d\u0017uG\u00b6/3\u000f\u0099\u00d8#&\u00f2{\u00ecxW\u00d3\u00d9\u00e3bi\u009f\u00ff\u00efq\u00b1\u001bu\u001d9\u00d4ux\u00b6\u00cdx\u00ec\u0084\u00a4%\u008b\u00b4\u007f\u0004I\u00abWH\u00da\u00a1fs[\u008f6D\u00183\u0096oG\u00d2\u00ddo\u0090t\u001e\u0018\u00f9\u0096\u0085\u0088\u00b6\r[\u00bf5\u00c2Cy\u0089q!\u001b\u0015\u00ce\u00fb\u00b2g|\u0084\u00d9F\u00be\u00ae(`v\u00e34\u0015fw\u00b8?*\u008d\u00969f\u0001\u0006\u00e6=6\u00ff\bu5-$|\u00d5P\u00bfz\u00e77\u0016\u00a4M?\u00e86i\u000f\u00b3\u00d7(\u00c7^'\u00be.\u00d7\u00a8oN\u00d7\u00f5\u00fd\u00e7+\u000bx;CX(\u00dbe\u0086\u0090\u00b7\u00bd?c\u000f\u00d6\u009b\u0095\u0086\u009f\u00c9\rP\u0083\u00dbG\u00b8[\u00ec!\u00f9\u00a2\u00d2\u00b9\u00c3\u0099\u00be@1\u00e0\u008c_<\u0081^\u0097\u0098N\u00e8u\u0019V\u00ebu\u00f4\u00ba$\u00be@\u00af\u00e39\u008f}\u00bfbn#T>\u009f\u00a5\u0019;\u008aV\u00eeJc-\u00cd$\u00b3\u00f0\u00c5\u00ae\u00ffy\u00d2\u0006\u00d0d7\u008aY\u00d3qu\u00b2oz\u00d8\u00a7\u00c4s\u00bf\u001bX\u0014r\u00da\u00bb4\u00e3eg9n\u009c\u00a7\u00edH!\u00c1\u008c<\u00d6\u00de\u00a6\u00f1\u0086\u00e5]\u00cd\u00056\u0013\u00e1s\u00af\u00c0U\u00a4\u00b9\u0098\u00c5ydj\u001cK\u00ef5\u00163\u00a8\u00a9\u00fa\u001c\u00ab+\u00c2\u00e05\u00a2#\u00a9(\u00a9\u00f6\u00b1\u00d3\u00cf\r\u009b\u00f5\u00b8\u00e4f\u0093\u00dc\u00b6\u00de[\u00d1\u008e\u00cd.\rt\u0006mfsM\u00b3%\u00d0X\u0091\u001cV\u0084\u0080n>\u00c3\u00a75\u00c9\\\u0013\u00c6q\u000e\u00e8\u00e5?\u00eb[Gos\u001c\u00a51\u000em\u00b3\u00b3\u00e8\u00cd\u00ee\u00ce\u0096q&\n\u0082^\u00ce.\u00d1x\u00c6L\u00ce\u00e0I\u00c4\u00e07.\u00cd}Kq\u00d7g\u00a1\u0091yCP\u00a1\r\u00a5Z\u0094B\u00c0F\u00f6\u00eex\u0092`>\u00b9\u00d1\u008ah^G\u00bb\u008e,\u0018)\u00ea\u00d8\u009b2v\u00a9X\u00dc92\u00a4\u00f1\u00ac\u00a3%+\u00fc\u00ae5hS\u000ei\u00f3,s\u00ed\u00c6\u0003I=\u00a1\u00cc\u00f8\u0016\u009bd\u00f1\\\u00a7\u009eq\u009b\u00bf\u00e6\u000e\u00b9\r\u008fy\u007f&#\u00a7\u001b9\u00cf\u0093\u00d6\u001a\u00b1\u008d\u00d3\u009f?\u0085S\u00e1\u0005N\u00c5f\u00ed\u0018?\u008aS]z!\u00baF\u00fbGF3\u00b3\u0014\u0014\t\u00e3T&\u009e\u00f6\n\u00fc\u0004%\u00a8^\"v\u00d2\u00ad\u00f5>%\u0082w\u00b4b\u0091\u00bea\u00c5\u007f\b\u00ef(\u0094\u00c7x7f\u009a\u0002\u0086|@\u00fd\u00d7.\u00ad\u00f3\u00de\u00c3}\\2\u00f3\u00dd\u00f3\u00a9*\u00ec\u00fd\u00e5\u00fa\u001b\u0001\u00beQ\u007f#\u0088\u007f\u00e2\u00fa\u00db\u00cfT\u00ceL\u001f\u00d1o8\u00fa\u0013\u0099\u0010^e\u00bax3Rv3g\u00da\u00a2\u00843^\u00f3x\u00fcE(\u00a7\u00f8\u008b\u00d0\u00bd\u0015\u007f\u0011\u00eae\u00fc\u0095\u0087e*\u0096A\u00db\u00fd\u00dc\u007fP\u00bb\u00e1R\u00bb\u00c5\u00b4\u001b\u001e\u00d1n\u00c2\u0012\u00bf\u00b76O\u00d8\u00f3em~Rj\u00ec\u00b5\u000fW\u00bb\u0088\u00ca\u00c8r\u00e0\u00fc\u00dcB\u00fa\u00de\u008e\u00f6N\u0015\u00caC\u00ae\u0001\u0010)\u00f0I\u00e2\u001c\u00c1\t\u007f]\u0019\u00f7\u00e6uf\u0094\u00b0\u00cf\u0084\u00b6\u00b3\u00b8\u00eb\u0084!\u0012\u00e9\u00cb\u00fb#\u00c9l\u00f2\u00eb\u0096\u008e\u00e1\u00cf\u00bc?r\u00c4C\u00c4>\u00fd`\u0014\u00a0\u0097Q@k\u00d6\u00fa\u0080\u00d6\u00edj\u00aaOi\u009bC\u008dt\u00c6\u00a6?UU\u009d\u001a\u00bc\u00ab\u00ab>yBv}\u00b9\u00e0&f\u00fd(\u00c5\u00b7\u00fe\u00a6\u0095?\u00fb\u0094i]\u00af\u0010\u00f5\u0085\u0094XZ\u00b0G\u00d7\u00f78\u00cc\u00b3;!\u0086=Cr?Y\u00ff%w\u0019W\u009b\u00f5&\u00f7\u00d1\u00b8zp\u0089\u0004~R?.\u00eb\u00da40\u00c2\u00cf\u00d6\u00b5a\u00abl\u009e\u0090\u00e4\u00afc\b\u0017\u00fc\u00a8\u00b89\u00a1\u00e8f$\u0011\u00a6m\u0017\u0093\u00b2\u0081:\f\u00d47\u00a2\u00d1&\u0014\u00c9\r\u009b\u00b4\u00dc\u008a\u00af\u0092+\u00ba\u00ee\u00d1\u0091\u00af\u00d8\u0082\u00eb\\+0\u00ba\u0002\u00ddg[P\u0093L\u0000\u00a9\u0084\u00e2\u000b\u00e7H2\u00ab\u007f\u00e7\u00bc2\u00f11F6\u008f;\u00f3\u0000\u001a\u00df6\u00fafl\u00b6\u00ed\u00ed\u00b6\u0098\u0095V\u0015W\u0015\u00cd*\u009b\u00e5\u00f6\u00ecE\u00c9;O\u008a\u00ca\u00dei\u00d4\u00ae\u00ed\u00bc\u00d7YU\u008bYnx\b\u009b\u00b5\u00fc\u001d8\u00eeV;N{\u00f4\u00dd9\u009dU1\u001e\u0095[\n\u0014\u009cI\u008eZ\u00baW\u00c4\u00f7&\u0019\u00c6wu\u0006\u00ae\u00f8s\u0012{\u0095%\u00e5j\u00ad\u000fY\u00f4\u0081|\u00e1XC\u00e5o\u00e7h\u00ba\u00c7Qu\u001a\u00bd\u009a\u000f>\u00f1\u0092|<\u00ef\u00d5\u00df\u008fp\u009f\u00a3\u0001\u0003O\u00fe\u00d4\u0013\u007f.\u00cf\u0086\u0090\u00b6\u001e8L\u00f4\u00bc\u00f0\u0093\u00d9\u00c0Y\u0093\u00bf\u008c%W\u00bd)\u00c8e\u00a5\u008f<\u00b5H3\u0097\u00b0X\u00ecj\u0007\u00e8Y\n-\u00b4rK\u00eb|-?%WF\u00b9a_\u000e_\u00f4\u00d9#\u00aa\u00b7\u00be9D~\u00d4Wo|s\u0088\u00fca\u00957\u00bf9D\u00be\u00b4\u000f\u007fs\u00a8n\u00a3^\u00ea\u00f9\u0088\u0014O\u00f3?k\u00ef7jB\u00be\u00ab\t\u00e3L\u008a\u00c6\u00df[\u00b5G5\u00e1i\u009f\u001b\u00ea\u00f7\u00db\u00f7\u00df\u009db\u00a9\u001a\u00e7\u00b9\u0095O\u009e\u00d9\u00a1\u00d0\u00a6\u00d7\u009d\u00da\u00de`wR\u00d3\u00eev\u00be\u00ca\u00eaH\u009e8S|\u0089\f\\\u00ef\u00f64-'}\u00f7\u009cK\u00c0s\u00ff\u0097\u0011C\u0084\u00e8D\u0006>>#\u0083\u0089Ns\u00c4H\u00be\u00d7\u00daI(U\u00cc\u008dJ\u0088Yc\u00a1\f\u001aza\u001fjJQ('\u00dfQ\u00b9\u008c\u00cfMR\u00e8\"\u00c9\u00d5.\u00c4\u0099[\u00bf\u0011!\u008cj\u00e5S'\u00fc\u00f8\u00b9Lq\u00c3\u00b6)\u0016\u00d9\u00fcq0\u00a3\u0098\u00a7\u00ad\u00a0\u00e7\u00f6\u00c71\u00eax/\u00c5\u00f2\u00ec{\u008fW\u001b\u00ed)\u001b\u0003\u00fbVo\u00a4\u00e4\u009f=}\u00fb\u00e4>\u00a5\u000f\u00d4\u001b\u00fdo\u00eb\u008d\u00b0\u00c5B\u0094B\n4O\u00c4\u00ce\u00bceV\u00b1)\u00c5\u0010\u00f4tV\u00b5\u00cd\u00af\u0001m\u00c8\u00ebs\u00ba\u00f4\u0012o\u00e9\u0015\u001e\u00cd\u00f3+c]\u00d9=\u0089\u0082\u00fc\u0001\u00fbE\u001f\u00e5Q\u0096\u00b2x\u00b4l\u00cd\u00dai\u00d0k\u00b7\u0098\u00e4\u00c8\u00a3\u00cf\"h\u00a7\u00ef\u00bd!\u00e5\u00d8\u0082{\u00e9<\u0082l\u0095\u0095S\u009et\u0015]\u00fd\u001e\u000f~\u00d4?\u00a1\u0086\u0018t\u00ca\u0083e\u00f0\u0011E\u0086\u001fqQ\u0004,f\u001cw\u00c9wFv-$jZ\u00a3\u00b7\u0018.\u00f9&\u000e\u0010[\u0092\u00f9mM\u008cZ\u00abt\u00c8\u00c9U\u00d7z\u0094\u0000\u00dcB\u00e3^H|\u008ff5\u008d\u00ea\u0085\u00f2\u00c8 \u00ae#\u00bfA%\u00f7\u00f4y\u0088\u0085\u0002\u0094\u0084?\u0098{\u00c8%\n\u00c0\u00fe\u00bc\u00eb\u00e8\u00a3(@\u0085\u00fa\u0083\u00eb\u00e2K\u0094,\u0014k}\b\u009b\u00ae\u0018N\u0019\u00c5\u0016c U\u00b5\\\u00f1\u00d6\u00de-=\u009e\u00c9g\u00dd0\u00b9'\u00e8\u00a4w\u00cf\u009a\u001cv`=\u00a5\u00efr\u00bb\u00ef\u00a9\u0087\u00db\u00ce\u00a082\u00a2\u00b0\u00aa\u001d\u00b6\u00ee\u00d8^\u008ew\u00aep\u0092}\u00c4\u00b3a!\u00a7\u0098\u0007N1\u00cf\u00f8\u0092\u00cc\u00d0Z?\u00b5\u00f6\u00fd\u00b8g\u00ffe\u009a\u0003.\u0082\u00d4\u0010N\u00fc\u00f6\u00cfb\u00e8Kk\u00b7o\u00c0\u00f9A\u00b3\u00e6&\u00c5\u001a\u00a7\u000b\u008cp\u00d1p\u00cb\u0007\u00e9[\u00d1\u00f3\u00e1\u00cd\u00e2\u00d7Q\u00bacE\u000f\u001eT\u00d4m(\u00ba\u00b7w\u00c5\u0007e\u0015k\u00b7\u007f\u00c7\u0011\u001e\u00dd!G\u00ad\u00a2\u00e3[\u00da\u00c2\u00fd\u00a0-\u0098\u00ba\u00b5\r\u00ddD\u0086XO\u009e\u00ce\u00d6\u00e4\u008e{\u00f0W\u001ci+y\u00ee\u00eb*?\u001f\u0089\u00c5\u00afO\u0085\f\u0014n\u00a0\u0006\u00e8V\u00fc\u00dbS}*F\u00faC\u00d6\u00f2u\u00c42v\u00e3\u0088\u00f1\u00cd\u00e9~W\u00d6\u00dc\u00835\u00ac\u00f1\u00fe\u00b4\u0082\u00bb\u00dc\u0085\u001a\u0086\u00ady\u00fe\u00cb%\u009b\u001d\u0019\u001fT'\u00eb\u0085 \u00e4q\u001a\u0082\u0084\u00cemQ\u0004\u0083Z<c\u00f7^\u00a7\u00c4\u00a6\u0001\u0013\u00f3A\u001f\u00bcH\u00a4\u0089kD\u001d;\u008d\u00e4\u001c\u00b3\u00ce\u00bd\u00ecfSg\u0084\u0013)\u0084Y\u00c9[u\u0086\u00d1G<~\t\u00c0\u00ed\u00bf\u009b\u0012\u00dc\u00d8'\u0085O\u00d5j\u00c2\u00b2\u0096\u00adPN\u00a5V\u00ea Ybm\u00ecj\u008aY\u0088k\u00ef!7GM\u001a\u0087\u00160\u0094@\u00bdf\u00c8\u00a9y\u00ef8\u00f8\u00e4\u00c9f{\u00b6\u0095t\u00bd\u00d7\"\u00a0\u00e9\u00fb\u00c9\u00ea\u008c\u00da3\u00e3\u00e7\u00fd\u00fb\u00be\u000e\u0018\u00d6\u00d7\u00b3\u00875s\u00a7oi\u00c3\u00fc\u0096\u00b6\u00d9\u00a5\u0095\u00d3\u00ae=m{t+\u00f03\u00b8\u0096e\u00da\u00fb\u00d3 {y\u00de\u00bee\u0003\u00b0\u009d\u00a3!8\u00d9C\u00ed\u00cd\u00f9\u0013\u00ca\u00d3\u00b6/t\u0088\u001bU/\u00d1\u00c6\u0089\u0093z\u0015\u00ef\u0004<i\u00d4\u00eeIT\u00bbw*\u009e\u0087\u0015\u00de\u00ea\u0096\u00d1\u009e\u001ax\u00aa\u008c\u00bb4\u0011\u0015\u00b3\u00c8\u000f\u008ca\u00aaXT\u00d4\u000f<J\u001c\u00f9(\u00acQ\u00fd\u0018#j\u00f3:j\u00a6Q\u00dd\u001cs\u00f6r\u00c4p\u0016.\u00df<\u00eb\u00fa\u00f2\u00c8cX\u00ce\u00fd\u00f9I\u00f7\u00de\u00d6?\u00e6\u00c6\u00d6\u009b\u00b2f\u000f\u00da'j4fI\u00bb/\u00a14/Z\u0095V\u0085w\u00e7\u00a1<\u00130\u00f3\u00fc*J\u00f4\u00ce\u00f3\u0017\u00f5\u00e1\u00a6\u00e2\u00fd\u00be\u0006\u00bcU\u0089\u00ef\u00ae\u00e4\u0088i\r\u007fi\u00cf\u00d9\u00ea\u001e\u00a6\u00c6\u001d\u009a^|\u00e5\u00e5bm\u00c7o\u00bd\\al8(\u0083Z\u00dc\u00c2\u00db\u00ec=\u00025\u00ea\u00ca\u00e4\u00fd\u00e2\u009b\u0019\u00bf\u00f6\u00f5;\u00ce\u00e4\u00a0\u001a\u00f5\u00de\u0095\u00ac\u0081\u00fa\u000f\u00ea{\u00e7\u00ad\u0017\u0099+\u00f2Fo\u009b\u0091\u00fb\u0012)\u00ad^\u00b4x\u00a7\u00d1\u00c3\u0090I\u001e\u00f7n\u00a0\u00a6o\u00d2s\u00ee\u00140I\u00d8h\u00faam\u00ba\u00a6\u00c1\u00dd\u0019\u00ab\u00c9\u008d\u00d6w\u00e5\u00f1\u00e5~l}\u00bc$\u0086\u0097\u0004]\u00d1i\u00c8\u00a2\u00cc\u00b6s\u00cf\u0089t\u00f2M=K B[\u008f\u0083\u00e82\u0007\n\u0019\u0093e\u00d9DM\u009d\u00cbD]\u00d9\u00c2t\u00d2\u008e\u00129P\u00a1Z3zhI\u0092\u000b\u00d2\u009cB)\u00dd8\u00a5]\u008b\u00b2\u00e3\u0011r\u0016\u0000\u00e6_\u00ff\u00f3\u00ff\u00fe7\u0000\u0000\u00ff\u00ff_\u0018a1\u00ddg\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "GET",
                "uri": "https://ctrver.t.hmny.io/fetchContractCode?contractAddress=0xEa589E93Ff18b1a1F1e9BaC7EF3E86Ab62addc79&shard=0",
                "body": null,
                "headers": {
                    "User-Agent": [
                        "python-requests/2.28.1"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Access-Control-Allow-Headers": [
                        "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range"
                    ],
                    "Access-Control-Expose-Headers": [
                        "Content-Length,Content-Range"
                    ],
                    "Access-Control-Allow-Methods": [
                        "GET, POST, OPTIONS"
                    ],
                    "Content-Length": [
                        "52960"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Access-Control-Allow-Origin": [
                        "*"
                    ],
                    "ETag": [
                        "W/\"cee0-6QD9qR/FKZxMVMuq/px2YFebIfw\""
                    ],
                    "Server": [
                        "nginx/1.18.0 (Ubuntu)"
                    ],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:54 GMT"
                    ],
                    "Content-Type": [
                        "application/json; charset=utf-8"
                    ],
                    "X-Powered-By": [
                        "Express"
                    ],
                    "Set-Cookie": []
                },
                "body": {
                    "string": "{\"contractName\":\"GovernanceToken\",\"abi\":[{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"_name\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\",\"internalType\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cap_\",\"type\":\"uint256\"},{\"name\":\"_manualMintLimit\",\"internalType\":\"uint256\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockFromBlock\",\"type\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"_lockToBlock\",\"internalType\":\"uint256\"}]},{\"name\":\"Approval\",\"inputs\":[{\"type\":\"address\",\"name\":\"owner\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\"},{\"internalType\":\"uint256\",\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"anonymous\":false,\"type\":\"event\"},{\"anonymous\":false,\"type\":\"event\",\"name\":\"DelegateChanged\",\"inputs\":[{\"type\":\"address\",\"indexed\":true,\"name\":\"delegator\",\"internalType\":\"address\"},{\"type\":\"address\",\"internalType\":\"address\",\"name\":\"fromDelegate\",\"indexed\":true},{\"name\":\"toDelegate\",\"indexed\":true,\"type\":\"address\",\"internalType\":\"address\"}]},{\"name\":\"DelegateVotesChanged\",\"inputs\":[{\"internalType\":\"address\",\"indexed\":true,\"type\":\"address\",\"name\":\"delegate\"},{\"internalType\":\"uint256\",\"type\":\"uint256\",\"name\":\"previousBalance\",\"indexed\":false},{\"internalType\":\"uint256\",\"indexed\":false,\"type\":\"uint256\",\"name\":\"newBalance\"}],\"anonymous\":false,\"type\":\"event\"},{\"anonymous\":false,\"type\":\"event\",\"name\":\"Lock\",\"inputs\":[{\"internalType\":\"address\",\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"internalType\":\"uint256\",\"type\":\"uint256\",\"indexed\":false}]},{\"name\":\"OwnershipTransferred\",\"type\":\"event\",\"anonymous\":false,\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"internalType\":\"address\",\"indexed\":true,\"name\":\"newOwner\"}]},{\"name\":\"Transfer\",\"type\":\"event\",\"anonymous\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"indexed\":true,\"type\":\"address\"},{\"type\":\"address\",\"internalType\":\"address\",\"name\":\"to\",\"indexed\":true},{\"name\":\"value\",\"internalType\":\"uint256\",\"type\":\"uint256\",\"indexed\":false}]},{\"stateMutability\":\"view\",\"name\":\"DELEGATION_TYPEHASH\",\"type\":\"function\",\"inputs\":[],\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}]},{\"name\":\"DOMAIN_TYPEHASH\",\"stateMutability\":\"view\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"type\":\"function\"},{\"inputs\":[{\"type\":\"address\",\"internalType\":\"address\",\"name\":\"_toAdd\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"addAuthorized\"},{\"stateMutability\":\"view\",\"type\":\"function\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"allowance\",\"inputs\":[{\"type\":\"address\",\"name\":\"owner\",\"internalType\":\"address\"},{\"type\":\"address\",\"internalType\":\"address\",\"name\":\"spender\"}]},{\"name\":\"approve\",\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\",\"internalType\":\"bool\"}],\"inputs\":[{\"type\":\"address\",\"internalType\":\"address\",\"name\":\"spender\"},{\"type\":\"uint256\",\"internalType\":\"uint256\",\"name\":\"amount\"}]},{\"type\":\"function\",\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"bool\",\"internalType\":\"bool\",\"name\":\"\"}],\"name\":\"authorized\"},{\"inputs\":[{\"type\":\"address\",\"name\":\"account\",\"internalType\":\"address\"}],\"type\":\"function\",\"outputs\":[{\"name\":\"\",\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"stateMutability\":\"view\"},{\"name\":\"checkpoints\",\"outputs\":[{\"name\":\"fromBlock\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"votes\",\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"type\":\"function\",\"stateMutability\":\"view\",\"inputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}]},{\"type\":\"function\",\"inputs\":[],\"outputs\":[{\"type\":\"uint8\",\"internalType\":\"uint8\",\"name\":\"\"}],\"name\":\"decimals\",\"stateMutability\":\"view\"},{\"inputs\":[{\"name\":\"spender\",\"type\":\"address\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"subtractedValue\",\"internalType\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"type\":\"function\",\"outputs\":[{\"type\":\"bool\",\"internalType\":\"bool\",\"name\":\"\"}],\"stateMutability\":\"nonpayable\"},{\"stateMutability\":\"nonpayable\",\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"name\":\"increaseAllowance\",\"type\":\"function\"},{\"type\":\"function\",\"inputs\":[],\"stateMutability\":\"view\",\"name\":\"lockFromBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\",\"name\":\"\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"name\":\"lockToBlock\",\"inputs\":[],\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"manualMintLimit\",\"stateMutability\":\"view\",\"inputs\":[]},{\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"inputs\":[],\"name\":\"manualMinted\",\"type\":\"function\"},{\"type\":\"function\",\"stateMutability\":\"view\",\"inputs\":[],\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"name\"},{\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"type\":\"uint256\",\"internalType\":\"uint256\",\"name\":\"\"}],\"type\":\"function\",\"stateMutability\":\"view\",\"name\":\"nonces\"},{\"name\":\"numCheckpoints\",\"inputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"owner\",\"type\":\"function\",\"stateMutability\":\"view\",\"inputs\":[],\"outputs\":[{\"internalType\":\"address\",\"type\":\"address\",\"name\":\"\"}]},{\"inputs\":[{\"type\":\"address\",\"name\":\"_toRemove\",\"internalType\":\"address\"}],\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"removeAuthorized\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"stateMutability\":\"view\",\"inputs\":[],\"name\":\"symbol\",\"type\":\"function\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}]},{\"stateMutability\":\"view\",\"name\":\"totalSupply\",\"type\":\"function\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"inputs\":[]},{\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\",\"internalType\":\"bool\"}],\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\",\"internalType\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"type\":\"function\"},{\"name\":\"transferFrom\",\"type\":\"function\",\"inputs\":[{\"name\":\"sender\",\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"type\":\"uint256\",\"name\":\"amount\"}],\"stateMutability\":\"nonpayable\",\"outputs\":[{\"type\":\"bool\",\"name\":\"\",\"internalType\":\"bool\"}]},{\"outputs\":[],\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"internalType\":\"address\",\"type\":\"address\"}]},{\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"type\":\"function\",\"stateMutability\":\"view\",\"inputs\":[],\"name\":\"cap\"},{\"name\":\"capUpdate\",\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"_newCap\",\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"outputs\":[]},{\"type\":\"function\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"uint256\",\"internalType\":\"uint256\",\"name\":\"_newLockFrom\"}],\"name\":\"lockFromUpdate\"},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"name\":\"lockToUpdate\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_newLockTo\",\"internalType\":\"uint256\"}],\"outputs\":[]},{\"inputs\":[],\"name\":\"unlockedSupply\",\"outputs\":[{\"type\":\"uint256\",\"internalType\":\"uint256\",\"name\":\"\"}],\"type\":\"function\",\"stateMutability\":\"view\"},{\"name\":\"lockedSupply\",\"type\":\"function\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"inputs\":[],\"stateMutability\":\"view\"},{\"name\":\"circulatingSupply\",\"inputs\":[],\"type\":\"function\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"name\":\"totalLock\",\"outputs\":[{\"name\":\"\",\"internalType\":\"uint256\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"inputs\":[]},{\"name\":\"mint\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"internalType\":\"address\",\"name\":\"_to\"},{\"type\":\"uint256\",\"name\":\"_amount\",\"internalType\":\"uint256\"}],\"outputs\":[],\"type\":\"function\"},{\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"internalType\":\"address\",\"name\":\"_to\"},{\"type\":\"uint256\",\"internalType\":\"uint256\",\"name\":\"_amount\"}],\"outputs\":[],\"name\":\"manualMint\",\"type\":\"function\"},{\"inputs\":[{\"type\":\"address\",\"name\":\"_holder\",\"internalType\":\"address\"}],\"name\":\"totalBalanceOf\",\"type\":\"function\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\"},{\"name\":\"lockOf\",\"inputs\":[{\"type\":\"address\",\"name\":\"_holder\",\"internalType\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"outputs\":[{\"type\":\"uint256\",\"internalType\":\"uint256\",\"name\":\"\"}],\"name\":\"lastUnlockBlock\",\"stateMutability\":\"view\",\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\",\"internalType\":\"address\"}],\"type\":\"function\"},{\"name\":\"lock\",\"outputs\":[],\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"name\":\"_holder\",\"internalType\":\"address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"canUnlockAmount\",\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"name\":\"\",\"internalType\":\"uint256\",\"type\":\"uint256\"}]},{\"name\":\"unlock\",\"outputs\":[],\"type\":\"function\",\"inputs\":[],\"stateMutability\":\"nonpayable\"},{\"inputs\":[{\"name\":\"_to\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"type\":\"function\",\"name\":\"transferAll\",\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"stateMutability\":\"view\",\"inputs\":[{\"type\":\"address\",\"internalType\":\"address\",\"name\":\"delegator\"}],\"name\":\"delegates\",\"outputs\":[{\"name\":\"\",\"internalType\":\"address\",\"type\":\"address\"}]},{\"type\":\"function\",\"name\":\"delegate\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"internalType\":\"address\",\"name\":\"delegatee\"}],\"outputs\":[]},{\"stateMutability\":\"nonpayable\",\"name\":\"delegateBySig\",\"outputs\":[],\"type\":\"function\",\"inputs\":[{\"name\":\"delegatee\",\"type\":\"address\",\"internalType\":\"address\"},{\"type\":\"uint256\",\"name\":\"nonce\",\"internalType\":\"uint256\"},{\"name\":\"expiry\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"internalType\":\"uint8\",\"type\":\"uint8\",\"name\":\"v\"},{\"name\":\"r\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"s\",\"internalType\":\"bytes32\",\"type\":\"bytes32\"}]},{\"type\":\"function\",\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\",\"name\":\"\"}],\"name\":\"getCurrentVotes\",\"stateMutability\":\"view\"},{\"name\":\"getPriorVotes\",\"stateMutability\":\"view\",\"inputs\":[{\"type\":\"address\",\"internalType\":\"address\",\"name\":\"account\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"outputs\":[{\"internalType\":\"uint256\",\"type\":\"uint256\",\"name\":\"\"}],\"type\":\"function\"}],\"sourceCode\":\"// File: @openzeppelin/contracts/utils/Context.sol\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\\n// File: @openzeppelin/contracts/math/SafeMath.sol\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n\\n\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20 {\\n    using SafeMath for uint256;\\n\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n    uint8 private _decimals;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\\n     * a default value of 18.\\n     *\\n     * To select a different value for {decimals}, use {_setupDecimals}.\\n     *\\n     * All three of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) public {\\n        _name = name_;\\n        _symbol = symbol_;\\n        _decimals = 18;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\\n     * called.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \\\"ERC20: transfer amount exceeds allowance\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \\\"ERC20: decreased allowance below zero\\\"));\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        _balances[sender] = _balances[sender].sub(amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[recipient] = _balances[recipient].add(amount);\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply = _totalSupply.add(amount);\\n        _balances[account] = _balances[account].add(amount);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        _balances[account] = _balances[account].sub(amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _totalSupply = _totalSupply.sub(amount);\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Sets {decimals} to a value other than the default one of 18.\\n     *\\n     * WARNING: This function should only be called from the constructor. Most\\n     * applications that interact with token contracts will not expect\\n     * {decimals} to ever change, and may work incorrectly if it does.\\n     */\\n    function _setupDecimals(uint8 decimals_) internal virtual {\\n        _decimals = decimals_;\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\\n// File: @openzeppelin/contracts/access/Ownable.sol\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\\n// File: contracts/Authorizable.sol\\n\\npragma solidity 0.6.12;\\n\\n\\ncontract Authorizable is Ownable {\\n    mapping(address => bool) public authorized;\\n\\n    modifier onlyAuthorized() {\\n        require(authorized[msg.sender] || owner() == msg.sender);\\n        _;\\n    }\\n\\n    function addAuthorized(address _toAdd) public onlyOwner {\\n        authorized[_toAdd] = true;\\n    }\\n\\n    function removeAuthorized(address _toRemove) public onlyOwner {\\n        require(_toRemove != msg.sender);\\n        authorized[_toRemove] = false;\\n    }\\n}\\n\\n// File: contracts/GovernanceToken.sol\\n\\npragma solidity 0.6.12;\\n\\n\\n\\n\\n// The GovernanceToken\\ncontract GovernanceToken is ERC20, Ownable, Authorizable {\\n    uint256 private _cap;\\n    uint256 private _totalLock;\\n    uint256 public lockFromBlock;\\n    uint256 public lockToBlock;\\n    uint256 public manualMintLimit;\\n    uint256 public manualMinted = 0;\\n\\n    mapping(address => uint256) private _locks;\\n    mapping(address => uint256) private _lastUnlockBlock;\\n\\n    event Lock(address indexed to, uint256 value);\\n\\n    constructor(\\n      string memory _name,\\n      string memory _symbol,\\n      uint256 cap_,\\n      uint256 _manualMintLimit,\\n      uint256 _lockFromBlock,\\n      uint256 _lockToBlock\\n    ) public ERC20(_name, _symbol) {\\n        _cap = cap_;\\n        manualMintLimit = _manualMintLimit;\\n        lockFromBlock = _lockFromBlock;\\n        lockToBlock = _lockToBlock;\\n    }\\n\\n    /**\\n     * @dev Returns the cap on the token's total supply.\\n     */\\n    function cap() public view returns (uint256) {\\n        return _cap;\\n    }\\n\\n    // Update the total cap - can go up or down but wont destroy previous tokens.\\n    function capUpdate(uint256 _newCap) public onlyAuthorized {\\n        _cap = _newCap;\\n    }\\n\\n    // Update the lockFromBlock\\n    function lockFromUpdate(uint256 _newLockFrom) public onlyAuthorized {\\n        lockFromBlock = _newLockFrom;\\n    }\\n\\n    // Update the lockToBlock\\n    function lockToUpdate(uint256 _newLockTo) public onlyAuthorized {\\n        lockToBlock = _newLockTo;\\n    }\\n\\n    function unlockedSupply() public view returns (uint256) {\\n        return totalSupply().sub(_totalLock);\\n    }\\n\\n    function lockedSupply() public view returns (uint256) {\\n        return totalLock();\\n    }\\n\\n    function circulatingSupply() public view returns (uint256) {\\n        return totalSupply();\\n    }\\n\\n    function totalLock() public view returns (uint256) {\\n        return _totalLock;\\n    }\\n\\n    /**\\n     * @dev See {ERC20-_beforeTokenTransfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - minted tokens must not cause the total supply to go over the cap.\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, amount);\\n\\n        if (from == address(0)) {\\n            // When minting tokens\\n            require(\\n                totalSupply().add(amount) <= _cap,\\n                \\\"ERC20Capped: cap exceeded\\\"\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual override {\\n        super._transfer(sender, recipient, amount);\\n        _moveDelegates(_delegates[sender], _delegates[recipient], amount);\\n    }\\n\\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterBreeder).\\n    function mint(address _to, uint256 _amount) public onlyOwner {\\n        _mint(_to, _amount);\\n        _moveDelegates(address(0), _delegates[_to], _amount);\\n    }\\n\\n    function manualMint(address _to, uint256 _amount) public onlyAuthorized {\\n        require(manualMinted < manualMintLimit, \\\"ERC20: manualMinted greater than manualMintLimit\\\");\\n        _mint(_to, _amount);\\n        _moveDelegates(address(0), _delegates[_to], _amount);\\n        manualMinted = manualMinted.add(_amount);\\n    }\\n\\n    function totalBalanceOf(address _holder) public view returns (uint256) {\\n        return _locks[_holder].add(balanceOf(_holder));\\n    }\\n\\n    function lockOf(address _holder) public view returns (uint256) {\\n        return _locks[_holder];\\n    }\\n\\n    function lastUnlockBlock(address _holder) public view returns (uint256) {\\n        return _lastUnlockBlock[_holder];\\n    }\\n\\n    function lock(address _holder, uint256 _amount) public onlyOwner {\\n        require(_holder != address(0), \\\"ERC20: lock to the zero address\\\");\\n        require(\\n            _amount <= balanceOf(_holder),\\n            \\\"ERC20: lock amount over balance\\\"\\n        );\\n\\n        _transfer(_holder, address(this), _amount);\\n\\n        _locks[_holder] = _locks[_holder].add(_amount);\\n        _totalLock = _totalLock.add(_amount);\\n        if (_lastUnlockBlock[_holder] < lockFromBlock) {\\n            _lastUnlockBlock[_holder] = lockFromBlock;\\n        }\\n        emit Lock(_holder, _amount);\\n    }\\n\\n    function canUnlockAmount(address _holder) public view returns (uint256) {\\n        if (block.number < lockFromBlock) {\\n            return 0;\\n        } else if (block.number >= lockToBlock) {\\n            return _locks[_holder];\\n        } else {\\n            uint256 releaseBlock = block.number.sub(_lastUnlockBlock[_holder]);\\n            uint256 numberLockBlock =\\n                lockToBlock.sub(_lastUnlockBlock[_holder]);\\n            return _locks[_holder].mul(releaseBlock).div(numberLockBlock);\\n        }\\n    }\\n\\n    function unlock() public {\\n        require(_locks[msg.sender] > 0, \\\"ERC20: cannot unlock\\\");\\n\\n        uint256 amount = canUnlockAmount(msg.sender);\\n        // just for sure\\n        if (amount > balanceOf(address(this))) {\\n            amount = balanceOf(address(this));\\n        }\\n        _transfer(address(this), msg.sender, amount);\\n        _locks[msg.sender] = _locks[msg.sender].sub(amount);\\n        _lastUnlockBlock[msg.sender] = block.number;\\n        _totalLock = _totalLock.sub(amount);\\n    }\\n\\n    // This function is for dev address migrate all balance to a multi sig address\\n    function transferAll(address _to) public {\\n        _locks[_to] = _locks[_to].add(_locks[msg.sender]);\\n\\n        if (_lastUnlockBlock[_to] < lockFromBlock) {\\n            _lastUnlockBlock[_to] = lockFromBlock;\\n        }\\n\\n        if (_lastUnlockBlock[_to] < _lastUnlockBlock[msg.sender]) {\\n            _lastUnlockBlock[_to] = _lastUnlockBlock[msg.sender];\\n        }\\n\\n        _locks[msg.sender] = 0;\\n        _lastUnlockBlock[msg.sender] = 0;\\n\\n        _transfer(msg.sender, _to, balanceOf(msg.sender));\\n    }\\n\\n    // Copied and modified from YAM code:\\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernanceStorage.sol\\n    // https://github.com/yam-finance/yam-protocol/blob/master/contracts/token/YAMGovernance.sol\\n    // Which is copied and modified from COMPOUND:\\n    // https://github.com/compound-finance/compound-protocol/blob/master/contracts/Governance/Comp.sol\\n\\n    /// @dev A record of each accounts delegate\\n    mapping(address => address) internal _delegates;\\n\\n    /// @notice A checkpoint for marking number of votes from a given block\\n    struct Checkpoint {\\n        uint32 fromBlock;\\n        uint256 votes;\\n    }\\n\\n    /// @notice A record of votes checkpoints for each account, by index\\n    mapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\\n\\n    /// @notice The number of checkpoints for each account\\n    mapping(address => uint32) public numCheckpoints;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\n            \\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\"\\n        );\\n\\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\\n    bytes32 public constant DELEGATION_TYPEHASH =\\n        keccak256(\\\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\\\");\\n\\n    /// @notice A record of states for signing / validating signatures\\n    mapping(address => uint256) public nonces;\\n\\n    /// @notice An event thats emitted when an account changes its delegate\\n    event DelegateChanged(\\n        address indexed delegator,\\n        address indexed fromDelegate,\\n        address indexed toDelegate\\n    );\\n\\n    /// @notice An event thats emitted when a delegate account's vote balance changes\\n    event DelegateVotesChanged(\\n        address indexed delegate,\\n        uint256 previousBalance,\\n        uint256 newBalance\\n    );\\n\\n    /**\\n     * @notice Delegate votes from `msg.sender` to `delegatee`\\n     * @param delegator The address to get delegatee for\\n     */\\n    function delegates(address delegator) external view returns (address) {\\n        return _delegates[delegator];\\n    }\\n\\n    /**\\n     * @notice Delegate votes from `msg.sender` to `delegatee`\\n     * @param delegatee The address to delegate votes to\\n     */\\n    function delegate(address delegatee) external {\\n        return _delegate(msg.sender, delegatee);\\n    }\\n\\n    /**\\n     * @notice Delegates votes from signatory to `delegatee`\\n     * @param delegatee The address to delegate votes to\\n     * @param nonce The contract state required to match the signature\\n     * @param expiry The time at which to expire the signature\\n     * @param v The recovery byte of the signature\\n     * @param r Half of the ECDSA signature pair\\n     * @param s Half of the ECDSA signature pair\\n     */\\n    function delegateBySig(\\n        address delegatee,\\n        uint256 nonce,\\n        uint256 expiry,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external {\\n        bytes32 domainSeparator =\\n            keccak256(\\n                abi.encode(\\n                    DOMAIN_TYPEHASH,\\n                    keccak256(bytes(name())),\\n                    getChainId(),\\n                    address(this)\\n                )\\n            );\\n\\n        bytes32 structHash =\\n            keccak256(\\n                abi.encode(DELEGATION_TYPEHASH, delegatee, nonce, expiry)\\n            );\\n\\n        bytes32 digest =\\n            keccak256(\\n                abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\\n            );\\n\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(\\n            signatory != address(0),\\n            \\\"GovernanceToken::delegateBySig: invalid signature\\\"\\n        );\\n        require(\\n            nonce == nonces[signatory]++,\\n            \\\"GovernanceToken::delegateBySig: invalid nonce\\\"\\n        );\\n        require(now <= expiry, \\\"GovernanceToken::delegateBySig: signature expired\\\");\\n        return _delegate(signatory, delegatee);\\n    }\\n\\n    /**\\n     * @notice Gets the current votes balance for `account`\\n     * @param account The address to get votes balance\\n     * @return The number of current votes for `account`\\n     */\\n    function getCurrentVotes(address account) external view returns (uint256) {\\n        uint32 nCheckpoints = numCheckpoints[account];\\n        return\\n            nCheckpoints > 0 ? checkpoints[account][nCheckpoints - 1].votes : 0;\\n    }\\n\\n    /**\\n     * @notice Determine the prior number of votes for an account as of a block number\\n     * @dev Block number must be a finalized block or else this function will revert to prevent misinformation.\\n     * @param account The address of the account to check\\n     * @param blockNumber The block number to get the vote balance at\\n     * @return The number of votes the account had as of the given block\\n     */\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        require(\\n            blockNumber < block.number,\\n            \\\"GovernanceToken::getPriorVotes: not yet determined\\\"\\n        );\\n\\n        uint32 nCheckpoints = numCheckpoints[account];\\n        if (nCheckpoints == 0) {\\n            return 0;\\n        }\\n\\n        // First check most recent balance\\n        if (checkpoints[account][nCheckpoints - 1].fromBlock <= blockNumber) {\\n            return checkpoints[account][nCheckpoints - 1].votes;\\n        }\\n\\n        // Next check implicit zero balance\\n        if (checkpoints[account][0].fromBlock > blockNumber) {\\n            return 0;\\n        }\\n\\n        uint32 lower = 0;\\n        uint32 upper = nCheckpoints - 1;\\n        while (upper > lower) {\\n            uint32 center = upper - (upper - lower) / 2; // ceil, avoiding overflow\\n            Checkpoint memory cp = checkpoints[account][center];\\n            if (cp.fromBlock == blockNumber) {\\n                return cp.votes;\\n            } else if (cp.fromBlock < blockNumber) {\\n                lower = center;\\n            } else {\\n                upper = center - 1;\\n            }\\n        }\\n        return checkpoints[account][lower].votes;\\n    }\\n\\n    function _delegate(address delegator, address delegatee) internal {\\n        address currentDelegate = _delegates[delegator];\\n        uint256 delegatorBalance = balanceOf(delegator);\\n        _delegates[delegator] = delegatee;\\n\\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\\n\\n        _moveDelegates(currentDelegate, delegatee, delegatorBalance);\\n    }\\n\\n    function _moveDelegates(\\n        address srcRep,\\n        address dstRep,\\n        uint256 amount\\n    ) internal {\\n        if (srcRep != dstRep && amount > 0) {\\n            if (srcRep != address(0)) {\\n                // decrease old representative\\n                uint32 srcRepNum = numCheckpoints[srcRep];\\n                uint256 srcRepOld =\\n                    srcRepNum > 0\\n                        ? checkpoints[srcRep][srcRepNum - 1].votes\\n                        : 0;\\n                uint256 srcRepNew = srcRepOld.sub(amount);\\n                _writeCheckpoint(srcRep, srcRepNum, srcRepOld, srcRepNew);\\n            }\\n\\n            if (dstRep != address(0)) {\\n                // increase new representative\\n                uint32 dstRepNum = numCheckpoints[dstRep];\\n                uint256 dstRepOld =\\n                    dstRepNum > 0\\n                        ? checkpoints[dstRep][dstRepNum - 1].votes\\n                        : 0;\\n                uint256 dstRepNew = dstRepOld.add(amount);\\n                _writeCheckpoint(dstRep, dstRepNum, dstRepOld, dstRepNew);\\n            }\\n        }\\n    }\\n\\n    function _writeCheckpoint(\\n        address delegatee,\\n        uint32 nCheckpoints,\\n        uint256 oldVotes,\\n        uint256 newVotes\\n    ) internal {\\n        uint32 blockNumber =\\n            safe32(\\n                block.number,\\n                \\\"GovernanceToken::_writeCheckpoint: block number exceeds 32 bits\\\"\\n            );\\n\\n        if (\\n            nCheckpoints > 0 &&\\n            checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber\\n        ) {\\n            checkpoints[delegatee][nCheckpoints - 1].votes = newVotes;\\n        } else {\\n            checkpoints[delegatee][nCheckpoints] = Checkpoint(\\n                blockNumber,\\n                newVotes\\n            );\\n            numCheckpoints[delegatee] = nCheckpoints + 1;\\n        }\\n\\n        emit DelegateVotesChanged(delegatee, oldVotes, newVotes);\\n    }\\n\\n    function safe32(uint256 n, string memory errorMessage)\\n        internal\\n        pure\\n        returns (uint32)\\n    {\\n        require(n < 2**32, errorMessage);\\n        return uint32(n);\\n    }\\n\\n    function getChainId() internal pure returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n}\\n\",\"constructorArguments\":\"00000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000019d971e4fe8401e74000000000000000000000000000000000000000000000000000a968163f0a57b40000000000000000000000000000000000000000000000000000000000000015b74cf00000000000000000000000000000000000000000000000000000000024c0e8f0000000000000000000000000000000000000000000000000000000000000005566970657200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055649504552000000000000000000000000000000000000000000000000000000\",\"contractAddress\":\"0xea589e93ff18b1a1f1e9bac7ef3e86ab62addc79\",\"compiler\":\"0.6.12\",\"libraries\":[],\"cached\":{\"ttl\":1661058662311,\"cached\":true},\"proxyDetails\":null}"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getCode\", \"params\": [\"0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a\", \"latest\"], \"id\": 180}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "122"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "1256"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:54 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00dcV\u00dbn\u001cG\u000e}\u00df\u00cf\u0098gc\u00c1{\u0091\u00fe\u009b\u00ae\u001b\u00b0\u008b\u00c5\u00ee\u00c2N\u0080\u0000A\u00fe=`U\u008f43\u0092b)v^\"\u00d9P\u000f\u00a7\u009a<<$\u000f\u00eb\u00d7\u00cb\u00bf\u00bf\u00fe\u00ef\u00bf_\u00fe\u00df.\u009f/\u00f4O\u00b8|\u00ba\u00fc\u00ab_>\u00a3\u00c3\u00a7\u00cb\u0097\u00f1\u00f5\u00e7\u00ff\u00fct\u00f9|\u0081_\f\u001c\f\u0004\u0094\f@\u00d8\u0010\f\u0001\u001ah1\u0000`5\u0018\u0080\u00cd\u00c1\u0098\u0091\u00dbP+\u0088y\u00a2\u0088\u0096\u00b4\u001e\u0001\u001a\u00ad\u00d6m\u0095\u00f1`\u0015C\u00a0\u001e\u00db\u00daa0\u00f4\n\u00cb\u00ca8Ok7\u001a\u009d\u00c7\u00b6R\u00d1\u00b2\u0010L5\u00adwq\u0097/=}\u00158\u00c0\u0089q[\u00fdD\u0013\u00da=\u00aa\u009c\u00d6&\u008f\u00be\u00d0\u00d1\u00a0\u00f7\u00be\u00d1\u001e\u00ba\u00dfz\u00b2\u00e6[X}[\u0089\u00ab\u0017\u00baZ\u00fb\u0089\u0096\u0006\u001e\u00a5\u00cb\u00b6\u0012\u00cd\u00c7\b`\u00b3\u00f7\u0001\u00bc\u00be\u0087~\u00e2\u0082\u00d0q\u0094\u00ba\u00ad\u00a8\u00e3\u00f6-\u00b6\u00f3y\u00dbz\u00b2`\u00eb\u001b\u0000\u00adY\u0005\u0087\u00d9\u00b5\u00b28\u00a0\u00e6\u0099qVg\u00dbuUlD\u00beWG\u00be\u0097\u00f5tP4 ppRrVtt\u0006\u00dc\u00cf\u0081A\u00ceA\u0001i\u000bt\u0005\u008c<\u00cb\u00ce\u00e9Y\u00ab\u00b3#\u00eexH\u00ac\u00c5\u00d1\u00f3#:;\u00a5\u0097\u00f4\r\u00c9\"B\u00cd\u0098\n\u00fb7\u00d6\u00ff<\u001b`\u0080\u0013\u00edD\u008d\n\u00c9\u0085\u0013\u00f0\u00c6\u0006\u0098\u00b1\b\u0080\u0097\u0017\u0080\u0003\u0018\u0003\u00cd\u009f\u00bcG\u00beS\u0015\u0082\u00b6\u00ef\u00d5\u00a7\u00e8\u0010\b\u001c0\u00f9\u0086\u0013\u00b4\u00e3\u0005'xH\u00f6\u00b4\u0003[\u00fe\u0013x\u00ce\u00c8\u00f1\u00fet\u00e1\u00f9\u00ce\u001fGV\u00b4\u00cc-\u0011rz\u0013;nY\u000fDEM\u00d659\u00c5\u00c8\fw>\u000f\u0098W\u007f>`^\u00f5\u0097\u00de\u00ef=\u00be\u00c7\u00db\u00a8\u00dfb\u00c0\u009e\u0019 \u00a0\u00efa\u00c0\u0011-v\u007fa\u00b2\u0010\u0010\u00b8Y\u0091'V\u0006\u00ae\u00ee\u00be\u00e2#~\u0089/\u00bb\u00fd\u0006\u001f\u00dd\u00e0\u00d3\u0007|\u00cbg\u00f6\u00c6\u009dO\u00d3\u0017>\u00c9\u0086!\u0014\u00b4\u00fbI\u00983 \b\u00ed\u001dLR\u00bc\u009c/|\u001b\u00e9Q\u001e\u0091\u00be\u009fK\u00b4\u0085u\u00deg\u00d5\u00df\u009a\u00ef\u00c2\u000f\u00f9\u008f\u0097\u00f9\u00bf\u00dd\u00f54\u00db\u000f\u00ec\u00far\u00c4b\u00f8A\u00b3\u009e\u00b01\u00f3\u00b7X\u00bc\u00c1\u00c6r\u00fc\u0098~\u0084\u00854\u00f1\u00d55C\u00bc\u00f4,\u00d5km\u00b8U\u00bb\u00ac~~\u0012\u00c8\u00c9\u008a\u00a5\u0092*,W\u00dd\n\u00d4\u009c_\u00dc\u00e7\u0002\u0015\u00cb\u001c8\u00e7lM\u0082\u00b8\u0083T\u00d5\u0098\u00d2)\u000e\u00af\u00b3Y\u00eb\u0007\u00c8\u00a8Z\u00a1s\u0013\u0083\u00a2\u00d8H\u0080\u009a6m-\u0010\u00a2\u0005\u00ed\u008eK\u00ef\u0019\u00e3\u00a0\u00dd\u009f\u00b0b\u00df*\u00b6\u0001\u00d0RGE\u00db\u0093\r\u0000T\u00deK\u00c7\u009b?+3A\u008b\u00c4\u00c0 \u00a9\u00ce\u0099\u00afKdM\u0004(\u0095\u00dde\u009d\u00cb\u009d\u00b18\u000b\u008a\u00b57\u009c\u009c\u00ce\u00ca\u008a\u00d1\u00daj\u00a9\u00eeYU\u00e1\u00bd\u00b3\u0011\u00d6\u0006Q\u0081\u00f4\u00c5\u00c9\u00dcU\u00c7\u00cf\u00b7rGR~\u00ceN\u0002\u00d8:\u009fOY\u0013\u00ad\u008e*+f\u00da\u00ce\r\u0092\u00ef\u00a7\u00d7\u00b5\u00b1Erc\u00d3\u009e\u00dc\u00b5[\u0096\u00b7\u00e7\u00ed\u00a3p*\u00c4}\u00d5\u00e5\u00be\u00ea\u00e9\u008f>\u00d2a%\u00b7\u0098\u00ab\u00ae}\u00b9\u0098\u0011\u0002\u00b7\u0000U\u00cf\u009dh\u00d7>\t\u000eIv\u0093\u00c12\u00bdi\u001d8t\u00d4\u00d1J\u00d7\u00daQfA\u00a1\u00d2q\u00b8L\u00ee=\u00ef\t\rf\u00a9D\u0081C+\u0001\u001c\u00cd[i\\\u00834h\u00e7\u00ba\u00fa\u0085u\u00b1\u0092\u00f5X\u0099\u009aV)\u00b1\u00fe~ \u0013FKf\u00ae\\\u00ecy8YA\u0002\u0015'\u00c4Ue\u00c5\u00bb\u00f9\u00fd@\f\u00c1\u00bc\u00b4-\u001d\u0088\u00ec\u000f\u00f5\u00d0\u00f2\u00a1\u0089\u0096\u0007\u0094\u00af\u00d6\u008f\u00d9%+\u0012\u00abc\u0012\u00fb\u00f7\u00cf\b\n\u00aa\u00d6\u0095\u00bf\u00a5\u0090\u00ff\u00f5\u0098\u009f\u00f9n\u00f5\u00cf\u00f3\u00fd\u00f1\u00c8\u00a9:\u00ce[\u0091T?\u0014\u000fR\u0099\u00feHUw\u00c4\u0015\u00c1\u00af\u0011\u0082\u00cf)Z\u00ba\u0090\u009as\u009e(\u00d9\u00dd\u00aa\u00eb\u0086\u00ba\u00e7h\u00dfO\u00b9\u00cc\u00de')\u001d\u001d\u00eb\u00a0\u00e6Q-\u001aU0\u009f\u008d\u008b\u00f7\u00e3\b\u00a5z\u0094\u0089\u00c6M\u000eD#\u009f\u00aa\u0087\u00f4\u00a9\u00c4\u0095\u00c7\\\u00f7\u00db{\u00d5\u00bdN\u0011_\u00ef\u0094\u00cfj\u00f1\u00daL\u009c5\u00c2\u00b3F\u0016\u00fd\u00b6F\u00af\u00ed\u0096'\u0006\u00e8\u00ccO\u009f8F\u00e7\u00e5\u00c5g\u0083\u00cd\u00c1\u00da0\u00ebW\u00dd\u00dd'\u0006_u\f\u00f5T[\u00ebM\u000b\u00f7\u001d\u0095\u00c7~:7\u00ea\u00b95\u009c\u00b6j*2\u0007\u0096Yf\u009b\u00ca\u00d4P'\u001c\u00d6+\u00d4n\u001d\u0006\u00b0\u00d7q\u0014\u00ec\f\u00dd\u00c1[\u00e9\u00e1\u00adr\u009d\u0085\u00cc\u008f\u00d0:S>\u00abi\u00bc\u00b8\u001f\u001d\u00b4\u0099\u00ca\u00dd\u0094\u00db*o.[io\u00f3\u0086\u00db\u00cdz2w\u009e\u00c1\u00d7\u00b6\u009c\u008b\u00db\u00dfq\u00c7%\u0013\u00eb\u0006b9u.\u00cf\u00b7\u00e1\u00fb\u00be{\u009cU\u0080X>\u00cf\u000e\u0092\u00fcf\u00cfk\u00deZ\u009f\u0019\u009d\u00e3 \u0013\u008b\u0002f\u0085\u00d5\u0089\u0090\b\u0002\u00c7(\u0083U\u00a4B\u00e9C\u00b8`\u009d\u00da,\u00c2\u00c2\u00e7(Sf\u001c\u0088\u00a3\u00b4\u0006<\u00caq\f\u00a5\u00ce2\u001aSEk`R\u00d8\u00a65c\u00e1L K\u00c4|\u00f9\u00ed\u001f\u00bf\u0007\u0000\u0000\u00ff\u00ff\u0017\u00ed.\u00f6I\u0010\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getCode\", \"params\": [\"0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a\", \"latest\"], \"id\": 181}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "122"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "1256"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:54 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00dcV\u00dbn\u001cG\u000e}\u00df\u00cf\u0098gc\u00c1{\u0091\u00fe\u009b\u00ae\u001b\u00b0\u008b\u00c5\u00ee\u00c2N\u0080\u0000A\u00fe=`U\u008f43\u0092b)v^\"\u00d9P\u000f\u00a7\u009a<<$\u000f\u00eb\u00d7\u00cb\u00bf\u00bf\u00fe\u00ef\u00bf_\u00fe\u00df.\u009f/\u00f4O\u00b8|\u00ba\u00fc\u00ab_>\u00a3\u00e3\u00a7\u00cb\u0097\u00f1\u00f5\u00e7\u00ff\u00fct\u00f9|\u0081_\f\u001c\f\u0004\u0094\f@\u00d8\u0010\f\u0001\u001ah1\u0000`5\u0018\u0080\u00cd\u00c1\u0098\u0091\u00dbP+\u0088y\u00a2\u0088\u0096\u00b4\u001e\u0001\u001a\u00ad\u00d6m\u0095\u00f1`\u0015C\u00a0\u001e\u00db\u00daa0\u00f4\n\u00cb\u00ca8Ok7\u001a\u009d\u00c7\u00b6R\u00d1\u00b2\u0010L5\u00adwq\u0097/=}\u00158\u00c0\u0089q[\u00fdD\u0013\u00da=\u00aa\u009c\u00d6&\u008f\u00be\u00d0\u00d1\u00a0\u00f7\u00be\u00d1\u001e\u00ba\u00dfz\u00b2\u00e6[X}[\u0089\u00ab\u0017\u00baZ\u00fb\u0089\u0096\u0006\u001e\u00a5\u00cb\u00b6\u0012\u00cd\u00c7\b`\u00b3\u00f7\u0001\u00bc\u00be\u0087~\u00e2\u0082\u00d0q\u0094\u00ba\u00ad\u00a8\u00e3\u00f6-\u00b6\u00f3y\u00dbz\u00b2`\u00eb\u001b\u0000\u00adY\u0005\u0087\u00d9\u00b5\u00b28\u00a0\u00e6\u0099qVg\u00dbuUlD\u00beWG\u00be\u0097\u00f5tP4 ppRrVtt\u0006\u00dc\u00cf\u0081A\u00ceA\u0001i\u000bt\u0005\u008c<\u00cb\u00ce\u00e9Y\u00ab\u00b3#\u00eexH\u00ac\u00c5\u00d1\u00f3#:;\u00a5\u0097\u00f4\r\u00c9\"B\u00cd\u0098\n\u00fb7\u00d6\u00ff<\u001b`\u0080\u0013\u00edD\u008d\n\u00c9\u0085\u0013\u00f0\u00c6\u0006\u0098\u00b1\b\u0080\u0097\u0017\u0080\u0003\u0018\u0003\u00cd\u009f\u00bcG\u00beS\u0015\u0082\u00b6\u00ef\u00d5\u00a7\u00e8\u0010\b\u001c0\u00f9\u0086\u0013\u00b4\u00e3\u0005'xH\u00f6\u00b4\u0003[\u00fe\u0013x\u00ce\u00c8\u00f1\u00fet\u00e1\u00f9\u00ce\u001fGV\u00b4\u00cc-\u0011rz\u0013;nY\u000fDEM\u00d659\u00c5\u00c8\fw>\u000f\u0098W\u007f>`^\u00f5\u0097\u00de\u00ef=\u00be\u00c7\u00db\u00a8\u00dfb\u00c0\u009e\u0019 \u00a0\u00efa\u00c0\u0011-v\u007fa\u00b2\u0010\u0010\u00b8Y\u0091'V\u0006\u00ae\u00ee\u00be\u00e2#~\u0089/\u00bb\u00fd\u0006\u001f\u00dd\u00e0\u00d3\u0007|\u00cbg\u00f6\u00c6\u009dO\u00d3\u0017>\u00c9\u0086!\u0014\u00b4\u00fbI\u00983 \b\u00ed\u001dLR\u00bc\u009c/|\u001b\u00e9Q\u001e\u0091\u00be\u009fK\u00b4\u0085u\u00deg\u00d5\u00df\u009a\u00ef\u00c2\u000f\u00f9\u008f\u0097\u00f9\u00bf\u00dd\u00f54\u00db\u000f\u00ec\u00far\u00c4b\u00f8A\u00b3\u009e\u00b01\u00f3\u00b7X\u00bc\u00c1\u00c6r\u00fc\u0098~\u0084\u00854\u00f1\u00d55C\u00bc\u00f4,\u00d5km\u00b8U\u00bb\u00ac~~\u0012\u00c8\u00c9\u008a\u00a5\u0092*,W\u00dd\n\u00d4\u009c_\u00dc\u00e7\u0002\u0015\u00cb\u001c8\u00e7lM\u0082\u00b8\u0083T\u00d5\u0098\u00d2)\u000e\u00af\u00b3Y\u00eb\u0007\u00c8\u00a8Z\u00a1s\u0013\u0083\u00a2\u00d8H\u0080\u009a6m-\u0010\u00a2\u0005\u00ed\u008eK\u00ef\u0019\u00e3\u00a0\u00dd\u009f\u00b0b\u00df*\u00b6\u0001\u00d0RGE\u00db\u0093\r\u0000T\u00deK\u00c7\u009b?+3A\u008b\u00c4\u00c0 \u00a9\u00ce\u0099\u00afKdM\u0004(\u0095\u00dde\u009d\u00cb\u009d\u00b18\u000b\u008a\u00b57\u009c\u009c\u00ce\u00ca\u008a\u00d1\u00daj\u00a9\u00eeYU\u00e1\u00bd\u00b3\u0011\u00d6\u0006Q\u0081\u00f4\u00c5\u00c9\u00dcU\u00c7\u00cf\u00b7rGR~\u00ceN\u0002\u00d8:\u009fOY\u0013\u00ad\u008e*+f\u00da\u00ce\r\u0092\u00ef\u00a7\u00d7\u00b5\u00b1Erc\u00d3\u009e\u00dc\u00b5[\u0096\u00b7\u00e7\u00ed\u00a3p*\u00c4}\u00d5\u00e5\u00be\u00ea\u00e9\u008f>\u00d2a%\u00b7\u0098\u00ab\u00ae}\u00b9\u0098\u0011\u0002\u00b7\u0000U\u00cf\u009dh\u00d7>\t\u000eIv\u0093\u00c12\u00bdi\u001d8t\u00d4\u00d1J\u00d7\u00daQfA\u00a1\u00d2q\u00b8L\u00ee=\u00ef\t\rf\u00a9D\u0081C+\u0001\u001c\u00cd[i\\\u00834h\u00e7\u00ba\u00fa\u0085u\u00b1\u0092\u00f5X\u0099\u009aV)\u00b1\u00fe~ \u0013FKf\u00ae\\\u00ecy8YA\u0002\u0015'\u00c4Ue\u00c5\u00bb\u00f9\u00fd@\f\u00c1\u00bc\u00b4-\u001d\u0088\u00ec\u000f\u00f5\u00d0\u00f2\u00a1\u0089\u0096\u0007\u0094\u00af\u00d6\u008f\u00d9%+\u0012\u00abc\u0012\u00fb\u00f7\u00cf\b\n\u00aa\u00d6\u0095\u00bf\u00a5\u0090\u00ff\u00f5\u0098\u009f\u00f9n\u00f5\u00cf\u00f3\u00fd\u00f1\u00c8\u00a9:\u00ce[\u0091T?\u0014\u000fR\u0099\u00feHUw\u00c4\u0015\u00c1\u00af\u0011\u0082\u00cf)Z\u00ba\u0090\u009as\u009e(\u00d9\u00dd\u00aa\u00eb\u0086\u00ba\u00e7h\u00dfO\u00b9\u00cc\u00de')\u001d\u001d\u00eb\u00a0\u00e6Q-\u001aU0\u009f\u008d\u008b\u00f7\u00e3\b\u00a5z\u0094\u0089\u00c6M\u000eD#\u009f\u00aa\u0087\u00f4\u00a9\u00c4\u0095\u00c7\\\u00f7\u00db{\u00d5\u00bdN\u0011_\u00ef\u0094\u00cfj\u00f1\u00daL\u009c5\u00c2\u00b3F\u0016\u00fd\u00b6F\u00af\u00ed\u0096'\u0006\u00e8\u00ccO\u009f8F\u00e7\u00e5\u00c5g\u0083\u00cd\u00c1\u00da0\u00ebW\u00dd\u00dd'\u0006_u\f\u00f5T[\u00ebM\u000b\u00f7\u001d\u0095\u00c7~:7\u00ea\u00b95\u009c\u00b6j*2\u0007\u0096Yf\u009b\u00ca\u00d4P'\u001c\u00d6+\u00d4n\u001d\u0006\u00b0\u00d7q\u0014\u00ec\f\u00dd\u00c1[\u00e9\u00e1\u00adr\u009d\u0085\u00cc\u008f\u00d0:S>\u00abi\u00bc\u00b8\u001f\u001d\u00b4\u0099\u00ca\u00dd\u0094\u00db*o.[io\u00f3\u0086\u00db\u00cdz2w\u009e\u00c1\u00d7\u00b6\u009c\u008b\u00db\u00dfq\u00c7%\u0013\u00eb\u0006b9u.\u00cf\u00b7\u00e1\u00fb\u00be{\u009cU\u0080X>\u00cf\u000e\u0092\u00fcf\u00cfk\u00deZ\u009f\u0019\u009d\u00e3 \u0013\u008b\u0002f\u0085\u00d5\u0089\u0090\b\u0002\u00c7(\u0083U\u00a4B\u00e9C\u00b8`\u009d\u00da,\u00c2\u00c2\u00e7(Sf\u001c\u0088\u00a3\u00b4\u0006<\u00caq\f\u00a5\u00ce2\u001aSEk`R\u00d8\u00a65c\u00e1L K\u00c4|\u00f9\u00ed\u001f\u00bf\u0007\u0000\u0000\u00ff\u00ffOY\u00c6`I\u0010\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_chainId\", \"params\": [], \"id\": 182}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "68"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "73"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:54 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b22\u00b40\u00d2Q*J-.\u00cd)Q\u00b2R2\u00a803653I61P\u00aa\u00e5\u0002\u0004\u0000\u0000\u00ff\u00ff\u000f\u0014\u008cq1\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_call\", \"params\": [{\"to\": \"0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a\", \"data\": \"0x95d89b41\"}, \"latest\"], \"id\": 183}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "149"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "85"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:54 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b22\u00b40\u00d6Q*J-.\u00cd)Q\u00b2R2\u00a80\u00a0\b\u0018Q\u00a6\u00dd\u00c0\u00c0\u00c4\u00d4\u00dc$\u00cd$\u00d5\u00c4\u0094\\\u0003\u0094j\u00b9\u0000\u0001\u0000\u0000\u00ff\u00ff\u0097\u00fa\u0019\u00bc\u00e9\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_chainId\", \"params\": [], \"id\": 184}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "68"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "73"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:54 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b22\u00b40\u00d1Q*J-.\u00cd)Q\u00b2R2\u00a803653I61P\u00aa\u00e5\u0002\u0004\u0000\u0000\u00ff\u00ff\u00a9xW\u001a1\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_call\", \"params\": [{\"to\": \"0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a\", \"data\": \"0x313ce567\"}, \"latest\"], \"id\": 185}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "149"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "70"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:54 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b22\u00b40\u00d5Q*J-.\u00cd)Q\u00b2R2\u00a80\u00a0\b\u0018\u001a)\u00d5r\u0001\u0002\u0000\u0000\u00ff\u00ff\u00bca\u00ba1i\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_chainId\", \"params\": [], \"id\": 186}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "68"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "73"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:55 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b22\u00b40\u00d3Q*J-.\u00cd)Q\u00b2R2\u00a803653I61P\u00aa\u00e5\u0002\u0004\u0000\u0000\u00ff\u00ff\u00f4^1\u008a1\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_call\", \"params\": [{\"to\": \"0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a\", \"data\": \"0x06fdde03\"}, \"latest\"], \"id\": 187}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "149"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "99"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:55 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b22\u00b40\u00d7Q*J-.\u00cd)Q\u00b2R2\u00a80\u00a0\b\u0018Q\u00a6\u00dd\u00c0 \u00c9\u00d4\u00dc\u00dc\u00c8\u00cc\u00d0\u00dc\u00c0\u00dc\u00c0\u00cc\u00d4\u00cc\u00c4\u00c8\u00c0$\u00cd$\u00d5\u00c4\u0094x\u0003\u0094j\u00b9\u0000\u0001\u0000\u0000\u00ff\u00ffi\u00ae.x\u00e9\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getCode\", \"params\": [\"0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a\", \"latest\"], \"id\": 188}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "122"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "1256"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:55 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00dcV\u00dbn\u001cG\u000e}\u00df\u00cf\u0098gc\u00c1{\u0091\u00fe\u009b\u00ae\u001b\u00b0\u008b\u00c5\u00ee\u00c2N\u0080\u0000A\u00fe=`U\u008f43\u0092b)v^\"\u00d9P\u000f\u00a7\u009a<<$\u000f\u00eb\u00d7\u00cb\u00bf\u00bf\u00fe\u00ef\u00bf_\u00fe\u00df.\u009f/\u00f4O\u00b8|\u00ba\u00fc\u00ab_>\u00a3\u00fb\u00a7\u00cb\u0097\u00f1\u00f5\u00e7\u00ff\u00fct\u00f9|\u0081_\f\u001c\f\u0004\u0094\f@\u00d8\u0010\f\u0001\u001ah1\u0000`5\u0018\u0080\u00cd\u00c1\u0098\u0091\u00dbP+\u0088y\u00a2\u0088\u0096\u00b4\u001e\u0001\u001a\u00ad\u00d6m\u0095\u00f1`\u0015C\u00a0\u001e\u00db\u00daa0\u00f4\n\u00cb\u00ca8Ok7\u001a\u009d\u00c7\u00b6R\u00d1\u00b2\u0010L5\u00adwq\u0097/=}\u00158\u00c0\u0089q[\u00fdD\u0013\u00da=\u00aa\u009c\u00d6&\u008f\u00be\u00d0\u00d1\u00a0\u00f7\u00be\u00d1\u001e\u00ba\u00dfz\u00b2\u00e6[X}[\u0089\u00ab\u0017\u00baZ\u00fb\u0089\u0096\u0006\u001e\u00a5\u00cb\u00b6\u0012\u00cd\u00c7\b`\u00b3\u00f7\u0001\u00bc\u00be\u0087~\u00e2\u0082\u00d0q\u0094\u00ba\u00ad\u00a8\u00e3\u00f6-\u00b6\u00f3y\u00dbz\u00b2`\u00eb\u001b\u0000\u00adY\u0005\u0087\u00d9\u00b5\u00b28\u00a0\u00e6\u0099qVg\u00dbuUlD\u00beWG\u00be\u0097\u00f5tP4 ppRrVtt\u0006\u00dc\u00cf\u0081A\u00ceA\u0001i\u000bt\u0005\u008c<\u00cb\u00ce\u00e9Y\u00ab\u00b3#\u00eexH\u00ac\u00c5\u00d1\u00f3#:;\u00a5\u0097\u00f4\r\u00c9\"B\u00cd\u0098\n\u00fb7\u00d6\u00ff<\u001b`\u0080\u0013\u00edD\u008d\n\u00c9\u0085\u0013\u00f0\u00c6\u0006\u0098\u00b1\b\u0080\u0097\u0017\u0080\u0003\u0018\u0003\u00cd\u009f\u00bcG\u00beS\u0015\u0082\u00b6\u00ef\u00d5\u00a7\u00e8\u0010\b\u001c0\u00f9\u0086\u0013\u00b4\u00e3\u0005'xH\u00f6\u00b4\u0003[\u00fe\u0013x\u00ce\u00c8\u00f1\u00fet\u00e1\u00f9\u00ce\u001fGV\u00b4\u00cc-\u0011rz\u0013;nY\u000fDEM\u00d659\u00c5\u00c8\fw>\u000f\u0098W\u007f>`^\u00f5\u0097\u00de\u00ef=\u00be\u00c7\u00db\u00a8\u00dfb\u00c0\u009e\u0019 \u00a0\u00efa\u00c0\u0011-v\u007fa\u00b2\u0010\u0010\u00b8Y\u0091'V\u0006\u00ae\u00ee\u00be\u00e2#~\u0089/\u00bb\u00fd\u0006\u001f\u00dd\u00e0\u00d3\u0007|\u00cbg\u00f6\u00c6\u009dO\u00d3\u0017>\u00c9\u0086!\u0014\u00b4\u00fbI\u00983 \b\u00ed\u001dLR\u00bc\u009c/|\u001b\u00e9Q\u001e\u0091\u00be\u009fK\u00b4\u0085u\u00deg\u00d5\u00df\u009a\u00ef\u00c2\u000f\u00f9\u008f\u0097\u00f9\u00bf\u00dd\u00f54\u00db\u000f\u00ec\u00far\u00c4b\u00f8A\u00b3\u009e\u00b01\u00f3\u00b7X\u00bc\u00c1\u00c6r\u00fc\u0098~\u0084\u00854\u00f1\u00d55C\u00bc\u00f4,\u00d5km\u00b8U\u00bb\u00ac~~\u0012\u00c8\u00c9\u008a\u00a5\u0092*,W\u00dd\n\u00d4\u009c_\u00dc\u00e7\u0002\u0015\u00cb\u001c8\u00e7lM\u0082\u00b8\u0083T\u00d5\u0098\u00d2)\u000e\u00af\u00b3Y\u00eb\u0007\u00c8\u00a8Z\u00a1s\u0013\u0083\u00a2\u00d8H\u0080\u009a6m-\u0010\u00a2\u0005\u00ed\u008eK\u00ef\u0019\u00e3\u00a0\u00dd\u009f\u00b0b\u00df*\u00b6\u0001\u00d0RGE\u00db\u0093\r\u0000T\u00deK\u00c7\u009b?+3A\u008b\u00c4\u00c0 \u00a9\u00ce\u0099\u00afKdM\u0004(\u0095\u00dde\u009d\u00cb\u009d\u00b18\u000b\u008a\u00b57\u009c\u009c\u00ce\u00ca\u008a\u00d1\u00daj\u00a9\u00eeYU\u00e1\u00bd\u00b3\u0011\u00d6\u0006Q\u0081\u00f4\u00c5\u00c9\u00dcU\u00c7\u00cf\u00b7rGR~\u00ceN\u0002\u00d8:\u009fOY\u0013\u00ad\u008e*+f\u00da\u00ce\r\u0092\u00ef\u00a7\u00d7\u00b5\u00b1Erc\u00d3\u009e\u00dc\u00b5[\u0096\u00b7\u00e7\u00ed\u00a3p*\u00c4}\u00d5\u00e5\u00be\u00ea\u00e9\u008f>\u00d2a%\u00b7\u0098\u00ab\u00ae}\u00b9\u0098\u0011\u0002\u00b7\u0000U\u00cf\u009dh\u00d7>\t\u000eIv\u0093\u00c12\u00bdi\u001d8t\u00d4\u00d1J\u00d7\u00daQfA\u00a1\u00d2q\u00b8L\u00ee=\u00ef\t\rf\u00a9D\u0081C+\u0001\u001c\u00cd[i\\\u00834h\u00e7\u00ba\u00fa\u0085u\u00b1\u0092\u00f5X\u0099\u009aV)\u00b1\u00fe~ \u0013FKf\u00ae\\\u00ecy8YA\u0002\u0015'\u00c4Ue\u00c5\u00bb\u00f9\u00fd@\f\u00c1\u00bc\u00b4-\u001d\u0088\u00ec\u000f\u00f5\u00d0\u00f2\u00a1\u0089\u0096\u0007\u0094\u00af\u00d6\u008f\u00d9%+\u0012\u00abc\u0012\u00fb\u00f7\u00cf\b\n\u00aa\u00d6\u0095\u00bf\u00a5\u0090\u00ff\u00f5\u0098\u009f\u00f9n\u00f5\u00cf\u00f3\u00fd\u00f1\u00c8\u00a9:\u00ce[\u0091T?\u0014\u000fR\u0099\u00feHUw\u00c4\u0015\u00c1\u00af\u0011\u0082\u00cf)Z\u00ba\u0090\u009as\u009e(\u00d9\u00dd\u00aa\u00eb\u0086\u00ba\u00e7h\u00dfO\u00b9\u00cc\u00de')\u001d\u001d\u00eb\u00a0\u00e6Q-\u001aU0\u009f\u008d\u008b\u00f7\u00e3\b\u00a5z\u0094\u0089\u00c6M\u000eD#\u009f\u00aa\u0087\u00f4\u00a9\u00c4\u0095\u00c7\\\u00f7\u00db{\u00d5\u00bdN\u0011_\u00ef\u0094\u00cfj\u00f1\u00daL\u009c5\u00c2\u00b3F\u0016\u00fd\u00b6F\u00af\u00ed\u0096'\u0006\u00e8\u00ccO\u009f8F\u00e7\u00e5\u00c5g\u0083\u00cd\u00c1\u00da0\u00ebW\u00dd\u00dd'\u0006_u\f\u00f5T[\u00ebM\u000b\u00f7\u001d\u0095\u00c7~:7\u00ea\u00b95\u009c\u00b6j*2\u0007\u0096Yf\u009b\u00ca\u00d4P'\u001c\u00d6+\u00d4n\u001d\u0006\u00b0\u00d7q\u0014\u00ec\f\u00dd\u00c1[\u00e9\u00e1\u00adr\u009d\u0085\u00cc\u008f\u00d0:S>\u00abi\u00bc\u00b8\u001f\u001d\u00b4\u0099\u00ca\u00dd\u0094\u00db*o.[io\u00f3\u0086\u00db\u00cdz2w\u009e\u00c1\u00d7\u00b6\u009c\u008b\u00db\u00dfq\u00c7%\u0013\u00eb\u0006b9u.\u00cf\u00b7\u00e1\u00fb\u00be{\u009cU\u0080X>\u00cf\u000e\u0092\u00fcf\u00cfk\u00deZ\u009f\u0019\u009d\u00e3 \u0013\u008b\u0002f\u0085\u00d5\u0089\u0090\b\u0002\u00c7(\u0083U\u00a4B\u00e9C\u00b8`\u009d\u00da,\u00c2\u00c2\u00e7(Sf\u001c\u0088\u00a3\u00b4\u0006<\u00caq\f\u00a5\u00ce2\u001aSEk`R\u00d8\u00a65c\u00e1L K\u00c4|\u00f9\u00ed\u001f\u00bf\u0007\u0000\u0000\u00ff\u00ffQZM\u009aI\u0010\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getTransactionReceipt\", \"params\": [\"0x7fd33525c96258963fcfb0bba74ada0f2b52b40d01a746e9d184dda66df6b52f\"], \"id\": 189}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "150"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "514"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:55 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00bcT=o\u00db@\f\u00dd\u00fb38\u000b\u00c5\u0091\u00f7\u00ed\u00ad]\u00da.\u00dd:\u0015\u0019x\u00c7c\u00eaV\u00b6\u0002I\u000e\f\u0004\u00f9\u00ef\u0085\u00e2\u0006\t\u001a\u00db\u008d\u0087\u00e6m\"\u00a1\u00c7{\u00ef\u0011\u00bc\u0083\u009f\u00d3\u00b0\u001do*\u00ac\u0080\u00de\u001b\u00e8`-\u00b0\u00c2\u0094;\u0018\u00db\u00b4\u00ebgX\u00ddA\u00e9\u0087\u00fa\u00eb3O?`\u0005f\u001f\u00b1i\u0089\u00a9x\u0013\u0092\u00f7Hh(\u00aa5)&\u00a3\u00b9$RlX}M\u00d4\\(\u00d1;\u0093#jfM\u00b1\u0006\u00f16@w \u00fc\u00ba\u00db\u00946>Pb5\u00a1Z\u0084\u000e\u00ea\u00b0\u009dG\u00ae\u00f3\u0007\u0091\u00b1M\u0013\u00ac\u00b6\u00bb\u00be\u00ef\u00a0\u00ee6\u00bb\u009e\u00e7\u00f5m\u00fb\u00c4\u00d3\u00b7\u00a9\u00c9\u00c3o\u00a1\u00b0r\u0081\u000et\u001c6\u0087\u008a)d\u0082\u00a88\u00d6D\u00ca*\u0085=\u00ab\u00ad\u0001\u00b3\u0098\u00ea\u0012R.\u0096\u0097I\u00d7\u00cf\u0088\u00b2+\u008b\u00f4~\u00b8\u009e`\u00f5\u00fd\u000e\u00f8q:\u0098}c\u009fr\u00cbV\u0015SAF\u00c5\u0096\u000b\u00d7\u00d8\u00d4\u00b6\u0014\u00b8\u0004b\u0091\u001a\u00f3\u00a3\u00ac\u00b7\u00f1Ix\u00e6\u0087\u0092\u00b9\u0010\u00ce\u0007\u009b1\u0091s\u00ea\u0096\u00ef\u0083\u00ec/[i\u00fb\u00c3\u0088\u0006K\u00f4\u009b\u00e1v\u00f1F\u00b9\u009fZ\u0007\u00f3p\u00b3\u00ae\u008b5`\u00f6\"J\u009eX\u00b04\u00aa)\u0097\u0090+\u0015\u0013\u0092V\u001b\u00930gO\u0085\u00a3b\u00b0\u00d51b\u00a0\u00a4\u00de\u00b3\u0013\u00f5d\u008bm\n\u00dd\u0099W_\u0090\u00dfi\u0092\u00e4\u009b\u0013\u0016L\u0095\u0092\u0084\u00e6\u0088\u00d9\u0086\u00d6\u0088\u00902\u0099\u0080\u0012\u00bd\u00cf\u0016\u0015\u00ae:\u0098G\u00deN\\\u00e7\u00f5\u00b0}\nN\u00c5ZO\u00be\u00e6@>\u00e5`\u00b5j1\u00a5pt,l\u0094\u008a\u00a7\u00e2\u008c\u0018\u00e4\u00e8B\u00cb\u0082\u00c9\u0089p\b\u00a2\u00a1xZ\u0014>\u00a3}\u00b26\u00c0\u00fd\u00d5a\u00c9>\u00f6\u00c3\u009f\u0085=\u00f2|zQ\u00c1c9\u009eL8\u009d\u00ec\u00fc\u00d5\u007f9\u00e85\u001c\u00ff\u00a2\u007f\r\u008e\t\u00ba\u001c\u00a7-8\u00df;\u00823V\u00fc_@\u0007\u00d3\u00cc\u00f3\u00eepk\u0096\u00bd\u009e\u0087K\u00cf\u00ce\u001b\u00ef\u00f0\u00fd\u00bb\u00df\u0001\u0000\u0000\u00ff\u00ff\u00a8\u000b\u00e9\u00e65\u0006\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getTransactionReceipt\", \"params\": [\"0x7fd33525c96258963fcfb0bba74ada0f2b52b40d01a746e9d184dda66df6b52f\"], \"id\": 190}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "150"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "514"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:55 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00bcT=o\u00db@\f\u00dd\u00fb38\u000b\u00c5\u0091\u00f7\u00ed\u00ad]\u00da.\u00dd:\u0015\u0019x\u00c7c\u00eaV\u00b6\u0002I\u000e\f\u0004\u00f9\u00ef\u0085\u00e2\u0006\t\u001a\u00db\u008d\u0087\u00e6m\"\u00a1\u00c7{\u00ef\u0011\u00bc\u0083\u009f\u00d3\u00b0\u001do*\u00ac\u0080\u00de\u001b\u00e8`-\u00b0\u00c2l:\u0018\u00db\u00b4\u00ebgX\u00ddA\u00e9\u0087\u00fa\u00eb3O?`\u0005f\u001f\u00b1i\u0089\u00a9x\u0013\u0092\u00f7Hh(\u00aa5)&\u00a3\u00b9$RlX}M\u00d4\\(\u00d1;\u0093#jfM\u00b1\u0006\u00f16@w \u00fc\u00ba\u00db\u00946>Pb5\u00a1Z\u0084\u000e\u00ea\u00b0\u009dG\u00ae\u00f3\u0007\u0091\u00b1M\u0013\u00ac\u00b6\u00bb\u00be\u00ef\u00a0\u00ee6\u00bb\u009e\u00e7\u00f5m\u00fb\u00c4\u00d3\u00b7\u00a9\u00c9\u00c3o\u00a1\u00b0r\u0081\u000et\u001c6\u0087\u008a)d\u0082\u00a88\u00d6D\u00ca*\u0085=\u00ab\u00ad\u0001\u00b3\u0098\u00ea\u0012R.\u0096\u0097I\u00d7\u00cf\u0088\u00b2+\u008b\u00f4~\u00b8\u009e`\u00f5\u00fd\u000e\u00f8q:\u0098}c\u009fr\u00cbV\u0015SAF\u00c5\u0096\u000b\u00d7\u00d8\u00d4\u00b6\u0014\u00b8\u0004b\u0091\u001a\u00f3\u00a3\u00ac\u00b7\u00f1Ix\u00e6\u0087\u0092\u00b9\u0010\u00ce\u0007\u009b1\u0091s\u00ea\u0096\u00ef\u0083\u00ec/[i\u00fb\u00c3\u0088\u0006K\u00f4\u009b\u00e1v\u00f1F\u00b9\u009fZ\u0007\u00f3p\u00b3\u00ae\u008b5`\u00f6\"J\u009eX\u00b04\u00aa)\u0097\u0090+\u0015\u0013\u0092V\u001b\u00930gO\u0085\u00a3b\u00b0\u00d51b\u00a0\u00a4\u00de\u00b3\u0013\u00f5d\u008bm\n\u00dd\u0099W_\u0090\u00dfi\u0092\u00e4\u009b\u0013\u0016L\u0095\u0092\u0084\u00e6\u0088\u00d9\u0086\u00d6\u0088\u00902\u0099\u0080\u0012\u00bd\u00cf\u0016\u0015\u00ae:\u0098G\u00deN\\\u00e7\u00f5\u00b0}\nN\u00c5ZO\u00be\u00e6@>\u00e5`\u00b5j1\u00a5pt,l\u0094\u008a\u00a7\u00e2\u008c\u0018\u00e4\u00e8B\u00cb\u0082\u00c9\u0089p\b\u00a2\u00a1xZ\u0014>\u00a3}\u00b26\u00c0\u00fd\u00d5a\u00c9>\u00f6\u00c3\u009f\u0085=\u00f2|zQ\u00c1c9\u009eL8\u009d\u00ec\u00fc\u00d5\u007f9\u00e85\u001c\u00ff\u00a2\u007f\r\u008e\t\u00ba\u001c\u00a7-8\u00df;\u00823V\u00fc_@\u0007\u00d3\u00cc\u00f3\u00eepk\u0096\u00bd\u009e\u0087K\u00cf\u00ce\u001b\u00ef\u00f0\u00fd\u00bb\u00df\u0001\u0000\u0000\u00ff\u00ff\u0017\u0084\u00dc\u00f65\u0006\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getCode\", \"params\": [\"0xEa589E93Ff18b1a1F1e9BaC7EF3E86Ab62addc79\", \"latest\"], \"id\": 191}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "122"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Transfer-Encoding": [
                        "chunked"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:55 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00e4|\u00e9\u008e\u00ec\u00bcq\u00f6\u00ff\u00ef2\u00ceo\u00e3C-\u00ac\"\u00e9\u00bb\u00e1\n$\b\u0092\u00c0N\u0080\u0000A\u00ee=(\u0092\u00ea\u0096\u00ba\u00a7O\u00af3o\u00e0w\u00ecc\u00b7(\u0089K\u00ed\u00f5\u0014\u00a9\u00ff\u00fe\u00f5\u00cf\u007f\u00ff\u00b7\u007f\u00fd\u00db\u00bf\u0097_\u007f\u00fdE\u00ff\u001f~\u00fd\u00e5\u00d7?\u00d5_\u007f\u00c5\u0088\u007f\u00f9\u00f5\u00b7\u00f6\u00f7\u00ff\u00fc\u0097\u00ff\u00f8\u00f5\u00d7_\u00f0_\n\u0001\u0014\u001c\b\u00b1\u000b\u0080\u00a2\b\u0080 ^\u0001 @\u00af\u0092\u0005\u0014\u00c0\u00b1\"(\u0002\u00d3\u00ba\u00c7\u00a2\u00d0\u0000K\u0000e\u00dfJ\u00cb\r\u0000Q\u00110y\u00f1\u00d6Z8\bs\u00d1\u00d1\n\u00ad\u00cd\u00d6\u00a6\u0099zvi\u00b6\u00c6\u00f5l\u00a7^\u001b\u0087<[=^\u00b4:EH\u00d9\u00ad\u00d6 9\u00b8\u00e4fk\u00dbz\u00a8\\\u00c9\u00e7\u00b0Z\u00bb\u00f85[\u0095|\u0018w\u00dcw\u00b2f\u00e3\u0013\u0093\u00abe\u00b5\u00d6\u00d5\u0017\"\u00f9VW_\"\u0097}\u0095\u008e\u0085Q\u00d7\u001aJX\u00eb\u00ddZ\u00ed\u00ad\u0018\u00d7zkUj\u0095\u00dbl\u00adke\u00cd\u0015\u00e9\u00dd\u00e9\u001c\u0001\u00ca\u00d5\b\u001b\u00ed\u00c6[$\u001bEKMB0[\u001d\u00ad\u00d6$\u00c5\u00e7\u0088k\\\u00bd\u00ec+q\u00f2\u00cdw\u009e\u00dc\u0011\u0098o\u00a5\b\u0012K\u009e\u0014GJ\u0017\u00ad\u00d6W\b:[\u00b3\u00cb\u00d2\u0092\u00f8\u00d9\u009a\u00fbj\u008d\u0018Pq\u008e\u001b:\u00dd\u001cw\u00dc\u00c75\u00db\u00e4\u00c4\u0017\u00aa\u00ab\u00af\u008d\u000fIc\u00ed.\u00cbl\u00f5\u00ed\u00b2\u00af\u00d0\u0082\u0097\u0086\u0093\u00e2\u0018\u0016\u0015O\u00ad\u00f6\u0096\u00efk\r\u0091%DZR\u0013`\u008d\u001b\u00a5\u0086\u0098\u00dd\u009a-\u00a4\u00cb\u0011N2<\u00fa\ne\u008d\u0010\u0013\u0005\u00f5S>\u00fc\u00b6\u00f2P\u0093\u0094,y\u008d{\u00b5r\u0007\u00ec\u00b4\u00b88fK\u009a\u00e7[R0\u00a6(e\u00b6\u00e2\u0092f\u000f\t\u00021\u00ce\u0095mZrj\u001d#\u00e0\u00920\u008f\u0002\u0018\u00d2\u0094\n\u00efV\u00bf>P\u00d5\u00de\u00d6\u00b3\u00c2\u0097\u00b39\u008dk\u00f75.\u00da\u00a9\u00f6B\u00ec\u00e7\u001a\u00b4\u00ac\u00d9h/\u00bdw'\u00ab\u00f5J.]\u0086\u00d6\u0080&\u001fh\u00e3\u00de\u00a9\u00d5\u00de\u0092\u00b2\u00a8$\u00c1\u0097\u00dapJ\u00ben|\u0090\u00e4\u00b4\u00f2\u00e2\u00b4\u00ca\u0015\u00a7O\u00b4\u001b}\u00b9%\u0081\u000e\nB\u00c7\u00d5\u00aa\u00bcZ\u0083T_\u00e3\u00b4\u0004\u0012\u00affK\u009c\u0083\u00a7Z\u00e7l\u00cb\u00d2n\u0016!\u00ef\u00daZ\u00c3f\u00adN\u00ad\u00d6\u0097\u00eb\u00db\u00b3Q \u00b2L\u00da\n\u00ac\u00f5r\u00c2\u0094\u001a\u00cf5\b_\u00ad\u00e14\u00ee\u00e8k\u009b-\u0005\u00aa\u00dck\u009f\u00adi\u00ad\u008c\u0091K\u0013\u009d\u00fa\u00e0\u00ea\u0095\u00dd2\u001d\u0083\u00ba\u00ad\u00a1/\u00f98\u00b5\u008e\u00b7`\u00b5\u0012PF\u00afS\u0086\u001d\u0085\u00adUA\u00b3_\u00ad\u0092/G\u0000\u00ed\u00b56\u0098z\u00ca\u009b\u00ad\u0081(-\u00f9\u00bcZ\u00d3\u00e2\u001e\u0094LA\u001a\u00cdV\u00b3\u00b2\u0092\u00cf\u009eb\u00bc_\u00cd\u00a2uo\u00bd\u009b_\t \u00a8@\u0010 \u0090P`\u00c1\u0080\u0081\u0001\u00e7\u00ef\u0088\u0091\u0002G\u008a`m\u0011\u0083\u0000F{\u0096\u0003[\u00bf\u0092\u0003\u0007\u00c4\u00e9\u0097X\u008dW\u0018\u00ec\u0012\u0003\u0007\u00b2^\u00aco0\u00da\u00b0\u00eb6\u00a6\u00c0\u00fcO\u001c\u00ff\u00ec\u00d9\b\n\u00d8Q\u0097w\u00e38d=\u0010\u00f0\u009c\u001b\u00a0\u008dE\u0000\u00e6\u00e2\u0010\u0000\u00120F\u00d4p\u00ea=\u009a\u00d5\u00ccb\u0086x\u00f4=\u00fc%\u0006\u0088\u00d6\u001bt\u009e+\u00afF\t\u0017\u0080\u00d5\u00fe\u00eb\u00e0<\u00ef\u001c\u008e\u00fe\u00d4s\u007f\u00f0/ \u000b\u00aa\u00ad\u00c0\u00e6\u00c1\u00d6[NyO\u00db\u0088((F[1\u00caa\u00b4u\u00ccYo3sP\u00f63\u00a3\u00f3\u00cc\u009cI\u00f4~fs\u0084\u0012m\u0004\u00a3\u00be=\u0083\u00aa\b\u0005\u00f18\u00ea\u00efGD\u00bd5\u00e2\u00d0\u0096\u00c3\u0088\u008fSc\u00cdd\u00ca\u00d66\u00b3\u00bafv\u00c5\u0001\u00dd\u008d\u00ea\u00e3;\u001c\b\u0088\u001a\u00a7\u0014\u00a3q!\u0082\u0099\u00f68\u00e4`q\u00a5\u00b2l\u00b3:R{'\u0007.\u0097\u000f\u00caA\u00ad\u00ba\u008d\u00d8\u00bc\"B\u00c4\u00a3\u00ce\u00f5\u001e!\u0012\u00ea]N\u00d9\u00bb\u00e9k\u001a\u00eef/\u0098?7{\u000bz\u00f6\\D\u00e8\u00f9k\u00fa\u00eddG\u00a4\\K\u00eb\u00bcy\u0087\u00f2\u00f2\u001e\u00ff/\u00e6\u008e.\u00de\u009fk\u00a6\u00f7\u00e4\u001c\u0089qG\u00a1\u001b\u00a3\u00b4+\u00fd}r\u0014\u00f3\u00a1s\u0014\u00b5\u0088\u00fe\u00cbQ\u0014\u00c3\u00bb\u00a3\u0004\u00da\u00cb\u00e6\u00e3o?(\u00c17\u00e6\u00ed\u00dd\u00bb\u00f3N\u00f5.\u00a7\u00d5\"\u0088\u00f7F\u00a9r\u00d0\u0005n\u00b4\u00f1\u00a4\u00f7[\u00a3\u00b6w\u00e5\u008b[8\u00d8\u000b\u00fe\b\u00cd=\u00bdi\u00df\u00d1\u0001\u00ech\u008ehq\u00cc\u0097z\u00b0\u00d3o\u00af\u009f\u00d4oq\u00ee\u00ae\u00e6\u00f9\u00f4.\u00fd\u0003\u00b4\u00fb\u00a3\u00d4w\u00f5;\u0010\u00ec\u00f4\u001b1\u00b8p\u0090\u00b5\u00a0\u00f1\u00e2\u00bao\u009e\u00c0\"9\u00b4\\\u00ec\u009e\u0006\u0004z\u00d7>\u0084^\u00ef\u00fa\u009f \u009f\u00f4?\u0089\u00caA\u00caR\u00ba\u0011E\u00ecg\u0010?\u00e8\u00bf1\u00c7|\u0097\u00ff\u00e1m\u00fe\u00e7\u00d4\u00bf^\u00d7n\u0094\b\u00ef\u00f2\u00af\u00b8\u00fb\u00de;r\u00fe\u00c2{\u0017\u0085\u00af\u00df,\u00bb7\u00e5#\u00f1\u00f3\u0016\u00bbM\u009en\u00bf\u00cd\u00c2\u00aae\u0003\u00a7'\u00c3\u00een\u00da\u00b8U\u00d2Qoz\u00f3\u00f7W\u009c\u00df\u00f5?\u00bd\u00df\u0088\u0001vR\u0019\u009b\u00ffLl;)\u00a0H\u00d0\u00c2\u00dd\u0088*\u0011}N\u0017\b\u00e9\u0010\r\u0012A?^\u00e3\u00e6!St\u00b7f\u00a4\u0017\u00f2\u0015\u009e\u00a4\u00f7nF\u00bc\u00e7\u0002\u0011\u00c7\u009b\u009e\u0092Q\u0003\u00cf<qf\u00b0\u0096\u001b\bm9\u0092\u00f9\u00ce\u00872\u00b1T\u00d2{\u00b2B\u00a4z\u00a0\u0099C\u00ba\u00b8^\u00fe~\u00e4\u00bdn\u009f\u009b[~\u00ac\u0000\u00e4\u001f\u001d\u00f0\u00e6\u00df\u00cc\u00a0GN\u001dPQ\u0080l\u00f5\u00d1\u00f8\u00ed\"D\u0007.rp\u0080#\u00aap\u0001\u0081L\u00f3f\u0096\u001eI(\u00d0\u00cc\u00ba\u0015\"[\u008bQ\u00d3\u00e8\u001a\u00ec\u00ce\u00a4TN\u0013\u00c1\u00b2\u009c\u001e\u00ec\u00daO\u00c4\u0013a\u00e0\u0006\u00e2\u00c0\u0001\u0019O6\u00a9\u008e\u00b8\u00deR\u00c96Z\u001c\u0088\u0000\u00c0\u00e4\u009a\u00fd\"\u0088 9\u00a08\u001b}\u00dc]\u00b8\u0081\u00bdo\u00bd\u000e\u00f4%\u0007'~\u00f2t!\n\u00a3\u00b73\u00e6\u00b0\u00a1\u000e\u008b\u00cecv\u00b9\u008f\u00ff\r\u00c6\u0001\u001a\u00be4\u00b8\u00e0\u00ec\u008ai\u00e2\u00156\u009a\u00e4H\u0003e\u0018\u00ef\u00f2\u00c0>,\u00f6\u00b29\u0082\u00da<\u00ec\u0097\u0083h\u00bf\u009cY-\u00d4`\u00fd\u0017\u0013\u0014\u0001f\u001b\u00a5\u00e5\u00b3\u0087\u007fFz\u00d0\r9)p\u00f0o\n\u0003\u00fb\u009ek!q\u00bbu\u0001Dq\u008e\u0097\u00ec\u0016\u00ca6\u0087\u00b5\u00e2\ne=\u0097\u00e63\u00f6\u0084\u0082=\u00f1\u008c\u008d\u0018\u00f6\u00eeL\u0083zE\u0083\u00d3HO\u00f4J\u0017\u00bd\u00b6s\u00af\u0001W\u00af\u00c5\u00e4\u00c3q\u0004E\u00b2\u00bc\u00f1\u00b9\u0011\u00dc\u00dd\u0011\u0006]\"E6I\u0019\u00b2YJ\u00b0\u00ff\u007fa4\u00b9G\u00a5a\u008d&W|\u0004\u0093\u00dd\u00f1\u00db\u00e2z\u00b3\u00bb\u00d2\u0007O\u00c7Z\u00d5\u0002D\u0093\u00c3%\u00cb\u00d9\u00e80\u00e5\u00d1\u00f7PR\u008d\u00a2\u00c1\u00e7\u0014\u00a8Pi\u0002\u00cd\u00bb\u00ee\u00b3\u0017\u00a7N\u009a \u00fa\u00c2Ir+\u0001\u0005\u000bx\u00d2jn;\u0006HA5\u00e0N'\u00aa#\u00d3\u0081\u00a1\u0005\u00da\u00b6X\u00bb\u0096\u0012\u0006W];\u00eb\u00cah\u00f7A6\u00c4M\u0087\u00b6\u00ccz\u0095]Q\b;\f\u0090\u00a9\u001a\u00bdCD\u008eOP1]P\u0011\u008f<\u009b4\u008b\u00f1<\u00abgtk\u009b\u00df\u00b0q\u00cb;L\u00dchZ\u001eq\u00c3\u001e!y\u00e6\u00b9\u00e2\u00a3e\u0088|\u00e2\u00c8\u00a2Gm\u00af\u00cd\u00c4\u00de\u00ed\u00e5U\u000b\u00a1\bm\u00d4e\u00b6\u001c\u00beC(\u00ecc\u0082W\u00ff6\u00ca\f\u008fH\u00d3'\u008c\u00167\u0091]\u00df]\u00f7^\u009b\u00a2\u0092\u0016\u0015N\u0004\u00ca\u008aZ\u00ec\u00ca\u0013\u0081F\u00cf\u0004\u00da\u00b4{G\u00e0\u009d\u0006\u0015\u0002\u009do\u00897:\u00af\u00be\"\u00ecsYu\u00c3'\u00d7\u00a7m\u0007B\u0007\u00f8N\u001a\u00d8\u0095\u00f9\u00e2\u001d\rD\u00c81\u0013\u00c3X\u007f\u00d1\u00ae\u00acy\u00ac\u00b6\u009f\u00d7\u00ec\u00d3Xo'PT\u00a7\u00ce\u0093\u008ag\u00cff\u00ab\u00ef\u00d1`\u00ac*\u0006:\u00e7\u00de\u0001\u0011\u0087e\u00ef\u00de\u00ff\u00dfX\u00ad\u00a2V\u00ed^\u00b4\u0019\u00a7\u00b5{]\u0012@C\u001eP\u009b\u00b2\u00ca\u00a3\u00ab\u00b5h\u0082!\u00f0\u00d9\u00fe\u00bc\u00e1C\u00be\u00f2L=\u0093Y[\u00d3\u00ea\u00a7\u00fb\u00e7;\u00fd\u008b\u0002\u00849J\u0093\u00e3(\u00e3\u008eL\u00ef\u00fc\u00c6\u0088\u00edrE\u00d3\u00cf[ 9\u00e2\u0083\u00cf\u00f6.\u00e7\u00c8zF\u007f\u00f1)\u0084\u00d0<nD\u00df\u0095\u00a4\u00b7\u001a\u0083\u0097\u009aj\n\u00ea\u00b8[\u00c8\u009b\u0003\u0087\u00d4 \u0017\u001fjL\u00e8B\u00c2\u00d0Zs\u00ada\u00f4\u00b1w\u00e8\u00dc\u00a5:\u00f2\u00f1\n\u00ebJt\u00b2\u00ba\u0000\u00b2E]\u00a7(\u00c8\u001f\"\u00a2\u0015\u00e9!\u00a4\u00ba\u008f\u00f4\u00ce\u00fek\u00da{{\"\u00bfd\u00bfmv\u0013\u0095[\u00d54\u001e\u00be\u0001\"/Z\u00a2\u00c9\u00fdFi\u00b2\u00eb2\u00bd\u008f\u00c5\u00d5[4p!+k\u0005\u008f\u00c7\u009b\u0088\u009c\u00b7x\u0013\u0091\u00f8\u009dx\u0013\u00d1\u00b9\u008bx\u00d3\u00afx\u00d3\u00cc\u000f\u00be\u00ea\u00e5\u0010\u00b5\u00bf\u00ee\u00e5\u0010;\u00fe\u00a3y\u00b9\u00b1\u00aalVO\u0091\u0082<I\u0097\u0091\u00ff\u001cu\u00b8_\u00c7\u00cdHT\u0007nlV5\u0086x\u00aa\u00c5N~\u0012\u00bf\u0018?\u00d9\u00bb\u0096\u00df\u00bd\u00ccO\u00aa\u00f1\u001f\u008d\u009f\u00cf\u00e5Q\u00cc\u00e8\u0086\u00fd\u00a6~\u00c8\u00ef\u009e\u00e2\u00c2o\u00ecC\u0000q\u00ef\"\u0007f\u001e#\u009c\u00b2\u00cdaO\u008bY\u0017\u0096!Q[d\u00f2F&\u00f6En\u00f4\u008a\u007f\u009ev\u00f8\u00966,\u007f\u00b9\u00bc\u00c4\u00cb\u0014\u00feb\u00aeK\u008f\u00b8v\u00e6\u00a1\u00c7Y\u00d3\u00d2\u00b1I\u00b38\u00d0\u008b\u00f1\u001bO\u0019\u00cc\u00b9\u00cf\u0093-\u00dfa[\u00f3\u00f9WgI\u00b0\u00c9\u00fe\u00d5,\u001d\u00c3\u00cb\u00da\u00ee,\u00ff{Y\u00db]\u00fd\u00d6\u00f8\u00fc\u000f\u00b1\u00de+\u00faps\u00b7\u00ca\u00c4\f\u00d0\u00f8\u0000O\u00c4a&\u0093\u00be\u0087\u00dc\u0000|,\u00c2\u00a8\u0012\u00d1!;W*\u00f6\n\u00c9u\n\u000e\u00a3\u008b\u00beGO\u0094\u00b8\u00a6\u00d4\u001bg\u0087A\u00bbfu\u00e2\u009b\u00f1\u009e#$\u008b\u0017\u00e4wz\u00ff(}WDu\u00d2{\u00c7\u0081\u00d0\u00e2\f\u0089+\u00d7\u00fc\u001c\u0017\u00c1\r,oC\u00f5( \u00f0\u008c\u00a7\u0098\u00ce(\u0082E9\u008cT\u00ad5\"\u00c7\u0099\u00abOl\u00eeb\u00df\u00cfs\u0096\u00f8\u00c2\u0087\"^EY{\u00cd\u001c4\u00a8\u00ab\u00aa\u00b9F\u001f6\u00f1=+86\u00e2\u00edl\u0082\u00f9v\u0093\u00d8\u00ed\u00f9\u00f7\u0011\u00e0\u00a0\u00a6%\u00a8A\u00b6\u00c83\u00e2\u00b4\u0089a`\u0081\u00a8\u00c6\u00d9O\u00af\u00e0\u00fdy/|\u001a\u000f\\`[\u0083i<-Lx\u00d8\u00b8o\u00e4D\u00e0\u0000\u0093f[\u00cc~\u009c\u00cf\u00ca\u00c4\u0086\u00e9\u00f8J2\u00ac\u00ed\u0003<4{\u0094\u00c3\u0091\u0016\u0087\u00ab\u0089\u000f\u00a0_U\u000b\u00b2\u00d8\u0012x\u00ff\u00c4@\u00f7\u00cds{V\u00d3\u00a8Y\u00c1y\n\u0003\u00f6\u00cf\u00c9n\u0080\u00a0K\u00ee`r\u00cel\u00a9y)\u00c1\u0095/\u00cd\u001a\u00c3\u00c4E\u00d9\u00b4l\u00ea\u00ff\u00b8\u00c3\u0083\u00bb\u00b8\u00c7\u00e9\"\u0004\u00bfb'\u009fF%\u00d6,\u0084`t\u001b\u00cd#\u009f\u00b0\u00ff\u00b1\u009bR\u008e4\u00f3\u001b\u009dr\u0011\u001f\u00d0\u009e\u001eT\u00dbxe9\u00db\u00c4\u00f7\u00f2\u00e4#\u00fa\u0089i?E'y\u008eN&\u00e77d{H\u00d3\u00be\u0012\u00a1\u0080t;\u0096x/~\u00b8\u00c6\u0019\u00e2>\u00db~\u00d1\u00c7\u009dk\u000f{\u00cc\u0019\u0083\u008f\u00e7]\u008c\u0087*\u008d\u00fb\u00f3V\u00c3.\u00f2\u00fe]\u00d4i\u009aa\u001cy\u00ce\u00be\u00cdqV>\u0018\u0099GU\u00e3y\u0004\u00ecK\u0084\u00edR\u009e\u0017\u00f6\u00b1\u00d0.\u0093\u00a6\u00a5\u00b3x\u00c0\u00acb\u00cc/`V\u00bf\u00a9\u0013m\u0098\u00d5\u0005\u00ed\u00da\u00e7h\u00b7\u00cd\u00dc\u00b2\u00b5o\u001b\u00e5\u00b4\u0082\u0080\u00bf\u00a3\u00b2E{\u0083\u00c6\u008b\u00ba#\u00db\u0097\u0099\u0087L\u00ec\u0011\u0013\u00f9=v\u00bc\u00ab\u00e9\u00ecq\u00b1\u00b4\u00cf\u00ff\u00f7\u00b8\u00d8\u008d\u00ba\u008e\u001c\u00ea:<\u00dbf<vB\u00d2\u0092E\u00da?\u0082\u00a4\u00d5+$\u00edP\u00b3\u00b9\u00adG\u001b\"\u008c\u0019\u00cb\u00b7#\u00e9\u00ee7H:\u000f\u008c|\u00cbBD\u00db\u0086\u00ad\u00df\u001a\u00e1\u00a1\u00bc\u00c4\u00b8\u0090\u008d\n\u00e7}\u00d93>\u00c2l#_W\u00140\u00bbq\u009a\n\u00b3;\u00dc\u001f\u0095F\u00cb\u001c\u00b3\u0000\u0003\u00f3\u001e\u009b\u007f\u0084\u00ba\u009a\u0016\u0012\u00bej\u00a8_\u00bd\u00f3\u001b\u000b\u00d2\u00a6\u001ft\u009b\u00b4\u0087\u00d9k\u0094c\u00af\u0013_\u0097k\u00d47\u00a7\u00eb\u00fa\u00fe\u00f3\u0095\u0005\u00bc\u009d!,\u0094\u00ed2C\u00c8\u00db\u00de\u009f\u00b1\u0007\u00eb\u00cdJ\u00c3\u00cf\u00e4\u0006\u00a8\u00c1\u00ed#\u00dc-\u00f6\u0090|Q\u00e9\u00dc\u00e1L_\u00a0\u0018p\u00c6/\u009e@\u00afKL'\u00f4\u00ba\f\u00ab\u00f5:z]\u0012_\u00a0\u00d7\u00f1\u009c\u00c7\u00be_1\u00b7\u0011*\u009f\u00cf\u00d2\u008c\u001dE+w\u00a5\u00b1\u0096f\u0092Y\u00f8b\u00d7\u00ff<i\u0003h\u00b2\u001b\u00c5\u00ac\u00e9\u00b8:\u00d97=\u00ecS\u00e2\u00b9\u00df\r,\n9\u00ed]\u009a\u00f1\u00b2\u00b3\u001c7\u00ce\u00d3v\u00a4\u0090`F\u001eko\u00d3x\u00c3\u00f2\u00ae\u00e6\u0002\u009b\u0089\u00f0\u00b9W\u00e0*\u00d2\\\u00cc\u00e2<25\u008e\u00a5\u00f7\u001a\u008b\u0019\u00d4T}\u008e\u00d5\u0015a\u00f0\u001a\u00d1\u0091T\u0094T\u00fb\u00d8\u00e9\u00e7\u0086\u00cdz\\r\u00b3In[\u00ef\u00adh\u00c7f\u0097\u0006:\u00836\u00b3\u00b9\u00a6\u00d9\u0012h\u00acH\u000e+B@7\u009f\u00e1\u00d3\u009ad\u00ae\t\u00e38\u0007\u00f4\u00f2\u009f\u00f5\u00ad\u00a3\u00b79\u008e\u00d2\u0018\u0087\u00b6\u00d9Y\u00f4fwg\u00cb8\u0013\u0005A/g\u0097h<c&g\u00f0$b\u00f0\u001b\u0097\u00e6\u00be\u00a5\u00b8\u00eb\u00b3\u00d0\u00c8\u00bc!\u00a8\u00d0\u0086R-J!`#{w<I0\u009f\u00dchE4\u00af\u00a3]G\u0016\u008c\u0014u\u00ecM\u0019\u00bbT,\u00ee\u001c\u0019\u00d2x\u00d6\u00d1\u0092\u0015~\u00d7\u001a\u00b4)\u0087\u00b4y\u0096\u00b9v\u00e3\u0081\u00a4\u009ePf|\u008bM\u00b2x\u00aeS\u00cf\u00b8\u00cd_s\u0087\u00dc\u0086\u00c7\u00bc?\u0093\u0091\u00d3\u008d\u009c\u00e7Ik\u008d\u00d8\u00c6\u00e9\u00cf\u009f\u00c2\u00a9\u00f0\u0002\u00a7b\u00b3v\u008c\u001f\u00c5\u00a9.\u00bd\u0010]\u00a3\u00fd#\u00a3\u0099Y\n\u008a\u0084q*\u0013O{\u0005~\u0082\u0012T/\u0011;\u00e9\u00d6z\u009f\u0012\u00c1;Z\u00b1H\u00df\u00b0\u00e2?\u0084w\u0014\u00cac\u00bc\u001b3M\u0001C>\u00a0\u00fek\u0097\u00d6y\u00ef\u00e1>.\u0099\u00f9\u00ee\u00f9T\u0015\u00f6\u00fer\u00fd\u008d\u0000\u00df\u00a8\u00bf\u0011\u00c4?q\u00fd\u00edg*g\u00a6\u008f\u00e87\u001c\u00fd\u0089L\b\u00af2]\u00bc\u0019)\u00bb\u00993mQ\u00c2\u0019\u00afy<\u00fe\"\u0094S\u00fcE\u00e8\u00de\u008a\u00bf\b\u00f52\u00fe\u00ca\u00c32\u0015\u00cb\u00a0\u00ed~\u00ee?\u00a8\u00ddp\u00a9\u00ddb\u00da\r\u008fh7a\u0089\u00df[\u009b'\u00ec\u00f9\u00b26?)5\u00f6\u00da\u0087\u00ab]Ded9p~n!}oG{\u00a7\n\u00e5!\u00d7\u0000\u0088\u0014\u00f8$q\u008e\u00e0\u0084\u00bf\u00ae\u008c{\u00f3:3J\u00d8gB\u00dbY\u00dcu\u00c2\u0010\u0089\u00f4\u00e5\u00fd\u0091d6\u00f9uK\u00c7\u00f0g\u00de\u001f9\u00e2!b\u009f~0\n\u00d0\u00cb(\u00a05k}@\u00ebv5\u00d5\u00a7\u00b4\u00cd\u00a1F:c\u00d3\u009f\u00aa\u00aaN\r\u00de\u00d5U\u009f<!\u00bb\u00be\\p\u0013\u00b3~\u0094\u00e2[\u007f\u00d3\u00ca\u009f}\u00ca\u00b4\u00aeW\u0088\u00faBJ,-\u00d8\u00a3\u00eb{\u001c\u00e6\u00d9\u009d\u0010\u00c3\u009e!\u00b9\u009f\u00ac\u00ff\u0092\u00bb\u008c\u00ab\u00cdz\u0093\u00fbh\\=\u00b8D\u0002?\u00a9\u001f\u0097um\u001a\u0018\u00e1g\u00eb\u00da\u00b0U6OH\u00f2\u00d71\u0084\u000b~T\u00dc\u009cPt3\u0092\b\u00d3\u00b6\u008bI\u00d9@\u001d\u0006\u00ea\u001b\u00d1h\u0013\u008a\u00e4\u0086MZn\u00c5W\u00c9\u0015]\u00f7\u00e8\u00c8Wl\u00c1u\u00ae\u0015\u0018]\u0081\u00ee\u00b3-\u00a8I&\u0080TB\u00f1\u0085s$\u0099\u00d5\u00bfs^\u0099\u00f8\u0018#\u009b\u00c7\u009dy\u0000\u008do\u001b}36\u00db\u00f6v[\u00ccJ\u00ab\u008a\u00ab\u008af\u0095\u00cdr{\u00f6\u00a2\u00e4\u009d'Ee\u00ef4j\u00d7v\u00de\u00eb\u00ac\u00aa\u00c5,7<\u0084\u00cdZ\u00fe\u000e\u001cw\u00ab\u001d\u00a7=\u00fa\u00ee\u009c\u00ce\u00aa\u0018\u008f\u00ca-\u0005\n\u00ce$G-\u00dd+\u00e2{\u0093\f\u00e3\u00bb:\u0003W\u00fc9\u0089\u00bd\u00ca\u0092r\u00b5\u00d6\u0087,\u00fa@\u00bep\u00ac\u00a1\u00f2\u00b7s4\u00dd\u00e3\u00a8:\u008d^\u00cd\u0007\u009fxI>\u009e\u00f7\u00ea\u00efG\u00b8\u00cf\u00d1\u0080\u0081'\u007f\u00ea\u0089?\u0097gCH[\u000f\u001c&z^\u00f8\u00c9l\u00e0\u00ac\u00c9_\u00c6\u0092\u00ab\u00de\u0014\u00e4\u00b2\u00d2G\u009eZ\u00a4\u0099KX,v\u00b5\u0003\u00f4,\u0085\u0016Z\u00b9\u00a5u\u00be\u0096\u009f\u0092+\u00a3\u00dc\u00b0/\u0087/\u00fa\u00ec\u0011\u00d5[\u00df\u001c\"?\u00ea\u00ab7\u00be9D\u00fe\u00b0\u00ca\u009b\u00df\u001c\"_\u00da\u0087\u00bf9T\u00b7Q/\u00f5|D\u008a\u00a7\u00f9\u009f\u00b5\u00f7\u001b5!\u00df\u00d5\u0084q&E\u00e3\u00ef\u00ad\u00da\u00a3\u009a\u00f0\u00b4\u00cf\r\u00f5\u00fb\u00ed\u00fb\u00efN\u00b1T\u008d\u00f3\u00dc\u00ca'\u00cf\u00ecPh\u00d3\u00ebNmo\u00b0;\u00a9iw;_eu$O\u009c)\u00beD\u0006\u00aew{\u009a\u0096\u0093\u00be{\u00ce%\u00e0\u00b9\u00ff\u00cb\u0088!Bt\"\u0003\u001f\u009f\u0091\u00c1D\u00a79b$\u00dfk\u00ed$\u0094*\u00e6F%\u00c4\u00ac\u00b1P\u0006\r\u00bd\u00b0\u000f5\u00a5(\u0094\u0093\u00ef\u00a8\\\u00c6\u00e7&)t\u0091\u00e4j\u0017\u00e2\u00cc\u00ad\u00df\u0088\u0010F\u00b5\u00f2\u00a9\u0013~\u00fc\\\u00a6\u00b8a\u00db\u0014\u008bl\u00fe8\u0098Q\u00cc\u00d3V\u00d0s\u00fb\u00e3\u0018u\u00bc\u0097by\u00f6\u00bd\u00c7\u00ab\u008d\u00f6\u0094\u008d\u0081}\u00ab7R\u00f2\u00cf\u009e\u00be}r\u009f\u00d2\u0007\u00ea\u008d\u00fe\u00b7\u00f5F\u00d8b!J!\u0005\u009a'bg\u00de2\u00ab\u00d8\u0094b\bz:\u00ab\u00da\u00e6\u00d7\u00806\u00e4\u00f59]z\u0089\u00b7\u00f4\n\u008f\u00e6\u00f9\u0095\u00b1\u00ae\u00ec\u009eDA\u00fe\u0080\u00fd\u00a2\u008f\u00f2(KY<Z\u00b6f\u00ed4\u00e8\u00b5[Lr\u00e4\u00d1g\u0011\u00b4\u00d3\u00f7\u00de\u0090rl\u00c1\u00bdt\u001eA\u00b6\u00ca\u00ca)O\u00ba\u008a\u00ae~\u008f\u0007?\u00ea\u009fPC\f:\u00e5\u00c12\u00f8\u0088\"\u00c3\u008f\u00b8(\u0002\u00163\u008e\u00bb\u00e4;#\u00bb\u0016\u00125\u00ad\u00d1[\f\u0097|\u0013\u0007\u0088-\u00c9\u00fc\u00b6&F\u00adU:\u00e4\u00e4\u00aak=J\u0000n\u00a1q/$\u00beG\u00b3\u009aF\u00f5Byd\u0010\u00d7\u0091\u00df\u00a0\u0092{\u00fa<\u00c4B\u0001J\u00c2\u001f\u00cc=\u00e4\u0012\u0005`\u007f\u00deu\u00f4Q\u0014\u00a0B\u00fd\u00c1u\u00f1%J\u0016\u008a\u00b5>\u0084MW\f\u00a7\u008cb\u008b1\u0090\u00aaZ\u00aexk\u00ef\u0096\u001e\u00cf\u00e4\u00b3n\u0098\u00dc\u0013t\u00d2\u00bbgM\u000e;\u00b0\u009e\u00d2w\u00b9\u00dd\u00f7\u00d4\u00c3mgP\u001c\u0019QX\u00d5\u000e[wl/\u00c7;W8\u00c9>\u00e2\u00d9\u00b0\u0090S\u00cc\u0003\u00a7\u0098g|Ifh\u00ad\u009fZ\u00fb~\u00dc\u00b3\u00ff2\u00cd\u0001\u0017Aj\b'~\u00fbg1\u00f4\u00a5\u00b5\u00db7\u00e0\u00fc\u00a0Ys\u0093b\u008d\u00d3\u0005F\u00b8h\u00b8\u00e5\u0083\u00f4\u00ad\u00e8\u00f9\u00f0f\u00f1\u00eb(\u00dd\u00b1\u00a2\u0007\u000f*\u00ea6\u0014\u00dd\u00db\u00bb\u00e2\u0083\u00b2\u008a\u00b5\u00db\u00bf\u00e3\b\u008f\u00ee\u0090\u00a3V\u00d1\u00f1-m\u00e1~\u00d0\u0016L\u00dd\u00da\u0086n\"C\u00ac'Ogkr\u00c7=\u00f8+\u008e\u00b4\u0095<\u00f7u\u0095\u009f\u008f\u00c4\u00e2\u00d7\u00a7B\u0006\n7P\u0003t+\u00fe\u00ed\u00a9>\u0015#\u00fd!k\u00f9:b\u0019\u00bbq\u00c4\u00f8\u00e6t\u00bf+k\u00ee\u00c1\u001a\u00d6x\u007fZ\u00c1]\u00eeB\r\u00c3\u00d6<\u00ff\u00e5\u0092\u00cd\u008e\u008c\u000f\u00aa\u0093\u00f5B\u0010\u00f28\rAB\u00e7\u00b6(\u0082A-\u009e\u00b1{\u00afSb\u00d3\u0080\u0089\u00f9\u00a0\u000f^$\u00d2\u00c45\u00a2\u008e\u009dFr\u008eY\u00e7^v\u00b3\u00a93\u00c2\u0089\u0014\u00c2\u00ac\u00e4\u00ad:\u00c3\u00e8#\u001e\u00bf\u0004\u00e0\u00f6\u00dfM\tn\u00ec\u0093\u00c2\u00a7j5aY\u00cbV(\u00a7R+u\u0090,\u00b16v5\u00c5,\u00c4\u00b5\u00f7\u0090\u009b\u00a3&\u008dC\u000b\u0018J\u00a0^3\u00e4\u00d4\u00bcw\u001c|\u00f2d\u00b3=\u00dbJ\u00ba\u00dek\u0011\u00d0\u00f4\u00fdduF\u00ed\u0099\u00f1\u00f3\u00fe}_\u0007\f\u00eb\u00eb\u00d9\u00c3\u009a\u00b9\u00d3\u00b7\u00b4a~K\u00db\u00ec\u00d2\u00cai\u00d7\u009e\u00b6=\u00ba\u0015\u00f8\u0019\\\u00cb2\u00ed\u00fdi\u0090\u00bd<o\u00df\u00b2\u0001\u00d8\u00ce\u00d1\u0010\u009c\u00ec\u00a1\u00f6\u00e6\u00fc\t\u00e5i\u00db\u0017:\u00c4\u008d\u00aa\u0097h\u00e3\u00c4I\u00bd\u008aw\u0002\u009e4j\u00f7$\u00aa\u00dd;\u0015\u00cf\u00c3\nou\u00cbhO\r<U\u00c6]\u009a\u0088\u008aY\u00e4\u0007\u00c60U,*\u00ea\u0007\u001e%\u008e|\u0014\u00d6\u00a8~\u008c\u0011\u00b5y\u001d5\u00d3\u00a8n\u008e9{9b8\u000b\u0097o\u009eu}y\u00e41,\u00e7\u00fe\u00fc\u00a4{o\u00eb\u001fsc\u00ebMY\u00b3\u0007\u00ed\u00135\u001a\u00b3\u00a4\u00dd\u0097P\u009a\u0017\u00adJ\u00ab\u00c2\u00bb\u00f3P\u009e\t\u0098y~\u0015%z\u00e7\u00f9\u008b\u00fapS\u00f1~_\u0003\u00de\u00aa\u00c4wWr\u00c4\u00b4\u0086\u00bf\u00b4\u00e7lu\u000fS\u00e3\u000eM/\u00be\u00f2r\u00b1\u00b6\u00e3\u00b7^\u00ae06\u001c\u0094A-n\u00e1m\u00f6\u001e\u0081\u001aue\u00f2~\u00f1\u00cd\u008c_\u00fb\u00fa\u001dgrP\u008dz\u00efJ\u00d6@\u00fd\u0007\u00f5\u00bd\u00f3\u00d6\u008b\u00cc\u0015y\u00a3\u00b7\u00cd\u00c8}\u0089\u0094V/Z\u00bc\u00d3\u00e8a\u00c8$\u008f{7P\u00d37\u00e99w\n\u0098$l4\u00fd\u00b06]\u00d3\u00e0\u00ee\u008c\u00d5\u00e4F\u00eb\u00bb\u00f2\u00f8r?\u00b6>^\u0012\u00c3K\u0082\u00ae\u00e84dQf\u00db\u00b9\u00e7D:\u00f9\u00a6\u009e%\u0010\u00a1\u00ad\u00c7At\u0099\u0003\u0085\u008c\u00c9\u00b2l\u00a2\u00a6\u00cee\u00a2\u00aela:iG\u0089\u001c\u00a8P\u00ad\u0019=\u00b4$\u00c9\u0005iN\u00a1\u0094n\u009c\u00d2\u00aeE\u00d9\u00f1\b9\u000b\u0000\u00f3\u00af\u00ff\u00f9\u007f\u00ff\u001b\u0000\u0000\u00ff\u00ff\u00f72\u009a\u00f6\u00ddg\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getBlockByNumber\", \"params\": [\"0x1c06c31\", false], \"id\": 192}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "95"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "1159"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:55 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u0094\u0094\u00bd\u008e$\u00b9\r\u00c7s?F\u00c5\r\u0083\u00e2\u0097\u00c8\r\r\u0007\u000e\u001c\u0018\u0006.:\\@Q\u00d4m\u001b;\u00d3\u008b\u00e9^c\u00ec\u00c3\u00bd\u00bbQ]=s\u00b3\u009bYhT\u00ab(\u00e9\u00cf\u001f)\u00b2~\u00db\u00feu\u00bd<\u00bf|\u00cd\u00ed\u00d3\u0086\u007f\u0086\u00ed\u00b4\u009d\u00e7\u00f6\u00a99\u009e\u00b6\u0097\u00ba~\u00fbr\u00db>\u00fd\u00b6=\u007f{\u001a\u00f5\u00b2}\u00da\u00e0\u00b5%hR\u00dbN\u00db\u00e7\u00b8~\u00be\u009bz\u00ab5\u00ba\r\u00015\u0091\u0086\r\u00b0/\u0002\u00eb\u0006\u00cb\u0087\u00e1j\u00d5R\u00d2\u00b0XG\u0017\u0006\u00efmy,\u00eb\u00a9SH\u00b7\u00d3\u00f65^\u00ea\u00f9\u00f6\u00b77E\u00d6\u0098\u0003[Xj\u0017\r\u008f\u001e\u00e11{:M\\S1\u009a\u00e6p\u0092FJ\u00dd\u00fa\u00e2I\u00003WX\u0006M\u00daN\u00db\u00f3\u00e59\u00eb.\u0006?\u008c\u00ed\u00b4=\u009d_\u00df}\u00fd\u00b8\u00fc\u00ff\u008e\u00ed\u00b4]?\u0007\u00fd\u00f4\u009c_\u00eaz\u00a4hf\u00f2,\u009b\u0095]f\u008f\u0018&C\u00b4\u000f\u00cd\u009c\u00dcbRC\u00966\u009c-:7Z\u0010\u008dqM\u0086\u00c9N\u00dc\u00b7\u00d3\u00f6\u00e5\u00f2\u00eb\u00f5/_.\u0097\u00a7\u0007\"\u0002\u0080}\u00f4\u001a\n\u00d0b\u009f!\u00f0\u00dd\u00d2\u00f8\u00b1\u00d4\u001e\u007f\u0006\u00c0\u008f9#\u001c\u001aw\u0011\u00060\u0003=l\u00edn\u0006\u0002xl9\u008e\u00d8\u00fe3\u00c0\u00dd\u00d4\u00de\u0085x\u00b7\u00edO\u0000?6@\u00db\u00b5\r\u0018\u00f8;<\u0084\u00f6\u00ee\u001d\u0000\u00ef\u00ec8\u00e8\u0081\u0086\u000fP\u00dcQ\u00f0m\u00d3\u00fb\u00e3\rD\u00f7\u0000\u008d\u00ec\u001e\r\u001eK\t\u00ed\u00a3#\u00fa\u00f8\u0082G|\u00b6\u00c3\u00c1\u0001d\u00faA\u00b5\u00c1{\u001a\u00f7\u00e9\u00ee\u00fd\u00b1b\u00f7x\u000f\u00e0\u0086\u00ad\u00bd\u001d\u007f\u0093D\u00dd\t\u00be\u00bb\u0081\u00f7\u0017~\u00cbV\u00fb\u00c3\u008b\u00c5[F\u00f6\u00eb\u00b17f{?\u00e5?^(~`\u0093w\u00f7\u00c7\u00d8K\u00ec\u0016\u00b7\u00fa\u00e7\u00e5r{t\u009cwH\u00cd\u00e6\t\u00d6U\u009b#(*\u000ek5$\u00db\"C\u0089hTL\"\u00dd\u008ad%D\u009ac'Zuo\u0081\u00e7GGW\u000fF\u0098>\u009aA\u00c5\u001a\u00e03\u0084\u0090\u00b3V.\u00d6i\u00e2\u00c8\u0085\u00b6\u009d\u00b6y^\u00eb\u009c\u00df\u00be\u00dc\u00fes\u00d4\u00e5v\u00da\u00ea\u00f5\u00f6\u0012\u007f\u008d[\u00dc-;\u00e9\u00f9\u00bfG\u00df5\n\u00deN\u00db\u00afq\u00fd\u00fb\u00f9\u00e9|\u0080s\u00f2\u00e0{@\u00bf\u00c6\u00f5\u00a7k\u00cd#\u001c\u0090\u00f2}\u00ef\u00bf_\u00d6qt8S\u00ed=R\u00ea\u001d\u0089ff\u0007\u0096\u00ae9\u00ad\u00b0#\u00aba\u0088hSS*\u001f\u00d3\u00a49\u00b8\u0001\u008f\u00e6J\u0087\u00d4?^.\u0097Co\u00ec\u009d\u00c59\u0092\u00b9\u00b39\u00cf\u00b5\u00a0\u00a7\u008b,\u00c4\u008a\u0085\u0000\u00deQ\u00d3\u00c7\u00d2\u009a\u00baVI\u001f\u00a3Ph\u00f1\u008c\u001a]=%\u00b8lx\u0015\u00ca\u00d2QH\u00dd\u00d7^\u0094\u00ee\u00da\u001a$\u000f\\\u00b3\u0000\u008bl6\u0091j\u0093\u00cbW9\u00d2X\r!\u00ad[d\u00c8\u001alE\u00bd\u00a3L\u001c\u00e4\b\u00dd\u00b4/-\u00e5e\u009c\u00e1\u009e1\u0017\u00ac\u00d1\u00d6\u00e8\u00b3\u0094,1\u0013\u00f6xn\u00e7\u00a7\u00ba\u00de\u00e2\u00e9\u00eb= \u00c5\u00e2f\u00ba\u00f6\u0085\u0097x\u00beF\u00de\u00ce\u0097\u00e7\u00eb{\u0081\u0094HMi\u0088J(3\u00c0\u00b1'\u00e6,\u0093\u00c4\u00e4!\u00b6\u00dc%\u00cc\u0095i\u00ed\u00fe+\u00c1\u0098\u0010i\u00a4\u0088\u00e3\u00fe\tz\u00a9\u00ac\u00f3\u00d7\u00db\u001f\u009aI]\u00d6\u0010\u0096,Z\u0013\u00ad`\u0010B3&2\u00a1\u00b9GW>\u00b9\u0084\u0089F\u0095\u009ag\u00e9\u00e8\u00e6}\u008e\u00c6C\u00b6\u00d3\u00f6\u00ed\u00f1\u0091\u00fc\u00f9\u0097\u00ef\u00b9\u00b7O?o\u00f0\u008a\u0084R\u0000H\u00d9\u0098#\u0086g\u00d3\u0016\u00b6\\\u001bc\u0092\u00a4P\u00d3I\u009cC\u001d\u0016\u009b\u00d9^\u00f8\u00e4\u009c\u00ccL3\u00b6\u00d3\u0006\u00af\u00cb\u00c2c\u00c5\u00dc\u00af\u00ceaR\u00f4$\u00ce\u0010\u00e7b\u0082$\u00c59\u001b\u00a0\u00ceB\u00d3\u00ae\u00ad\u00a3\u00b2\b\u00d4\u00de\u001d\u00c5`w\u0091&\u00e6\u008b\u001c\u0084\u00d1x`C\u008eI\u00e4\u001dP%S\u00bcw\u0088\u00c8\u00d5\u00fa\"\"\u00d3\u0090\u00e9\u00a8Pf3\u00d3\u0006\u008d\u0083\u00a4/\\S\u00ac\u00cd>\u008cw\u00e6)N\u00de\u0007\u00ce\u00d6\u00c1p8\u001a\u0005y\u0017\u00d5\u00c94\u00b8\u00e1XLB0|\u00a8\u001c\"\u00a44aHHi'\u00c3\u00ce\u00cdQC\u00cb\u0017\u00c8\u00c2Z\u0093\u0087j\u00ecE<\u0097\u00f8j>\u001dI\u00bd-\u0019\u00dd\u0095\u008f\u009c\u0090\u000f\u00eeR\b5\u00b5lP'\u0012H\u00b0\u00e5`MF\u00cd\u0010\u001c\u00c06\u00a5\u00d1\u00c2B\u001f0\u00e6X\u000e\u00ceQ\u0081\u0007I_\u0093HP\u00d2\u0015\u00c5\\i\u00e5\u001a0Ft\u008e\u0019\u00b0p\b\u000e\u0086\t-:k\u00f9l\u00c6s\u0086\u00ea\\:\u0004\u00d7]\u0084\u0083\u00c7\u00dc[4F\u00b4HU\u00e9\u00b5\u0086d\u0018\u0011DgNK\u0093\u00d2Ih]eR\u00ac\u00b6\u00b7,\u00cf9Vdl\u00bf\u00fc\u00fe\u00fb\u009f\u00fe\u0017\u0000\u0000\u00ff\u00ff.s\u0013\u00db\u00b3\b\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getCode\", \"params\": [\"0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a\", \"latest\"], \"id\": 193}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "122"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "1256"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:55 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00dcV\u00dbn\u001cG\u000e}\u00df\u00cf\u0098gc\u00c1{\u0091\u00fe\u009b\u00ae\u001b\u00b0\u008b\u00c5\u00ee\u00c2N\u0080\u0000A\u00fe=`U\u008f43\u0092b)v^\"\u00d9P\u000f\u00a7\u009a<<$\u000f\u00eb\u00d7\u00cb\u00bf\u00bf\u00fe\u00ef\u00bf_\u00fe\u00df.\u009f/\u00f4O\u00b8|\u00ba\u00fc\u00ab_>c\u00f0\u00a7\u00cb\u0097\u00f1\u00f5\u00e7\u00ff\u00fct\u00f9|\u0081_\f\u001c\f\u0004\u0094\f@\u00d8\u0010\f\u0001\u001ah1\u0000`5\u0018\u0080\u00cd\u00c1\u0098\u0091\u00dbP+\u0088y\u00a2\u0088\u0096\u00b4\u001e\u0001\u001a\u00ad\u00d6m\u0095\u00f1`\u0015C\u00a0\u001e\u00db\u00daa0\u00f4\n\u00cb\u00ca8Ok7\u001a\u009d\u00c7\u00b6R\u00d1\u00b2\u0010L5\u00adwq\u0097/=}\u00158\u00c0\u0089q[\u00fdD\u0013\u00da=\u00aa\u009c\u00d6&\u008f\u00be\u00d0\u00d1\u00a0\u00f7\u00be\u00d1\u001e\u00ba\u00dfz\u00b2\u00e6[X}[\u0089\u00ab\u0017\u00baZ\u00fb\u0089\u0096\u0006\u001e\u00a5\u00cb\u00b6\u0012\u00cd\u00c7\b`\u00b3\u00f7\u0001\u00bc\u00be\u0087~\u00e2\u0082\u00d0q\u0094\u00ba\u00ad\u00a8\u00e3\u00f6-\u00b6\u00f3y\u00dbz\u00b2`\u00eb\u001b\u0000\u00adY\u0005\u0087\u00d9\u00b5\u00b28\u00a0\u00e6\u0099qVg\u00dbuUlD\u00beWG\u00be\u0097\u00f5tP4 ppRrVtt\u0006\u00dc\u00cf\u0081A\u00ceA\u0001i\u000bt\u0005\u008c<\u00cb\u00ce\u00e9Y\u00ab\u00b3#\u00eexH\u00ac\u00c5\u00d1\u00f3#:;\u00a5\u0097\u00f4\r\u00c9\"B\u00cd\u0098\n\u00fb7\u00d6\u00ff<\u001b`\u0080\u0013\u00edD\u008d\n\u00c9\u0085\u0013\u00f0\u00c6\u0006\u0098\u00b1\b\u0080\u0097\u0017\u0080\u0003\u0018\u0003\u00cd\u009f\u00bcG\u00beS\u0015\u0082\u00b6\u00ef\u00d5\u00a7\u00e8\u0010\b\u001c0\u00f9\u0086\u0013\u00b4\u00e3\u0005'xH\u00f6\u00b4\u0003[\u00fe\u0013x\u00ce\u00c8\u00f1\u00fet\u00e1\u00f9\u00ce\u001fGV\u00b4\u00cc-\u0011rz\u0013;nY\u000fDEM\u00d659\u00c5\u00c8\fw>\u000f\u0098W\u007f>`^\u00f5\u0097\u00de\u00ef=\u00be\u00c7\u00db\u00a8\u00dfb\u00c0\u009e\u0019 \u00a0\u00efa\u00c0\u0011-v\u007fa\u00b2\u0010\u0010\u00b8Y\u0091'V\u0006\u00ae\u00ee\u00be\u00e2#~\u0089/\u00bb\u00fd\u0006\u001f\u00dd\u00e0\u00d3\u0007|\u00cbg\u00f6\u00c6\u009dO\u00d3\u0017>\u00c9\u0086!\u0014\u00b4\u00fbI\u00983 \b\u00ed\u001dLR\u00bc\u009c/|\u001b\u00e9Q\u001e\u0091\u00be\u009fK\u00b4\u0085u\u00deg\u00d5\u00df\u009a\u00ef\u00c2\u000f\u00f9\u008f\u0097\u00f9\u00bf\u00dd\u00f54\u00db\u000f\u00ec\u00far\u00c4b\u00f8A\u00b3\u009e\u00b01\u00f3\u00b7X\u00bc\u00c1\u00c6r\u00fc\u0098~\u0084\u00854\u00f1\u00d55C\u00bc\u00f4,\u00d5km\u00b8U\u00bb\u00ac~~\u0012\u00c8\u00c9\u008a\u00a5\u0092*,W\u00dd\n\u00d4\u009c_\u00dc\u00e7\u0002\u0015\u00cb\u001c8\u00e7lM\u0082\u00b8\u0083T\u00d5\u0098\u00d2)\u000e\u00af\u00b3Y\u00eb\u0007\u00c8\u00a8Z\u00a1s\u0013\u0083\u00a2\u00d8H\u0080\u009a6m-\u0010\u00a2\u0005\u00ed\u008eK\u00ef\u0019\u00e3\u00a0\u00dd\u009f\u00b0b\u00df*\u00b6\u0001\u00d0RGE\u00db\u0093\r\u0000T\u00deK\u00c7\u009b?+3A\u008b\u00c4\u00c0 \u00a9\u00ce\u0099\u00afKdM\u0004(\u0095\u00dde\u009d\u00cb\u009d\u00b18\u000b\u008a\u00b57\u009c\u009c\u00ce\u00ca\u008a\u00d1\u00daj\u00a9\u00eeYU\u00e1\u00bd\u00b3\u0011\u00d6\u0006Q\u0081\u00f4\u00c5\u00c9\u00dcU\u00c7\u00cf\u00b7rGR~\u00ceN\u0002\u00d8:\u009fOY\u0013\u00ad\u008e*+f\u00da\u00ce\r\u0092\u00ef\u00a7\u00d7\u00b5\u00b1Erc\u00d3\u009e\u00dc\u00b5[\u0096\u00b7\u00e7\u00ed\u00a3p*\u00c4}\u00d5\u00e5\u00be\u00ea\u00e9\u008f>\u00d2a%\u00b7\u0098\u00ab\u00ae}\u00b9\u0098\u0011\u0002\u00b7\u0000U\u00cf\u009dh\u00d7>\t\u000eIv\u0093\u00c12\u00bdi\u001d8t\u00d4\u00d1J\u00d7\u00daQfA\u00a1\u00d2q\u00b8L\u00ee=\u00ef\t\rf\u00a9D\u0081C+\u0001\u001c\u00cd[i\\\u00834h\u00e7\u00ba\u00fa\u0085u\u00b1\u0092\u00f5X\u0099\u009aV)\u00b1\u00fe~ \u0013FKf\u00ae\\\u00ecy8YA\u0002\u0015'\u00c4Ue\u00c5\u00bb\u00f9\u00fd@\f\u00c1\u00bc\u00b4-\u001d\u0088\u00ec\u000f\u00f5\u00d0\u00f2\u00a1\u0089\u0096\u0007\u0094\u00af\u00d6\u008f\u00d9%+\u0012\u00abc\u0012\u00fb\u00f7\u00cf\b\n\u00aa\u00d6\u0095\u00bf\u00a5\u0090\u00ff\u00f5\u0098\u009f\u00f9n\u00f5\u00cf\u00f3\u00fd\u00f1\u00c8\u00a9:\u00ce[\u0091T?\u0014\u000fR\u0099\u00feHUw\u00c4\u0015\u00c1\u00af\u0011\u0082\u00cf)Z\u00ba\u0090\u009as\u009e(\u00d9\u00dd\u00aa\u00eb\u0086\u00ba\u00e7h\u00dfO\u00b9\u00cc\u00de')\u001d\u001d\u00eb\u00a0\u00e6Q-\u001aU0\u009f\u008d\u008b\u00f7\u00e3\b\u00a5z\u0094\u0089\u00c6M\u000eD#\u009f\u00aa\u0087\u00f4\u00a9\u00c4\u0095\u00c7\\\u00f7\u00db{\u00d5\u00bdN\u0011_\u00ef\u0094\u00cfj\u00f1\u00daL\u009c5\u00c2\u00b3F\u0016\u00fd\u00b6F\u00af\u00ed\u0096'\u0006\u00e8\u00ccO\u009f8F\u00e7\u00e5\u00c5g\u0083\u00cd\u00c1\u00da0\u00ebW\u00dd\u00dd'\u0006_u\f\u00f5T[\u00ebM\u000b\u00f7\u001d\u0095\u00c7~:7\u00ea\u00b95\u009c\u00b6j*2\u0007\u0096Yf\u009b\u00ca\u00d4P'\u001c\u00d6+\u00d4n\u001d\u0006\u00b0\u00d7q\u0014\u00ec\f\u00dd\u00c1[\u00e9\u00e1\u00adr\u009d\u0085\u00cc\u008f\u00d0:S>\u00abi\u00bc\u00b8\u001f\u001d\u00b4\u0099\u00ca\u00dd\u0094\u00db*o.[io\u00f3\u0086\u00db\u00cdz2w\u009e\u00c1\u00d7\u00b6\u009c\u008b\u00db\u00dfq\u00c7%\u0013\u00eb\u0006b9u.\u00cf\u00b7\u00e1\u00fb\u00be{\u009cU\u0080X>\u00cf\u000e\u0092\u00fcf\u00cfk\u00deZ\u009f\u0019\u009d\u00e3 \u0013\u008b\u0002f\u0085\u00d5\u0089\u0090\b\u0002\u00c7(\u0083U\u00a4B\u00e9C\u00b8`\u009d\u00da,\u00c2\u00c2\u00e7(Sf\u001c\u0088\u00a3\u00b4\u0006<\u00caq\f\u00a5\u00ce2\u001aSEk`R\u00d8\u00a65c\u00e1L K\u00c4|\u00f9\u00ed\u001f\u00bf\u0007\u0000\u0000\u00ff\u00ff\u00cc\u0006@\u00f3I\u0010\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getCode\", \"params\": [\"0x85E4DAd18c28d6e42aA36Ee221292061D755931f\", \"latest\"], \"id\": 194}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "122"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "65"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:55 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00aaV\u00ca*\u00ce\u00cf+*HV\u00b2R2\u00d23P\u00d2Q\u00caLQ\u00b22\u00b44\u00d1Q*J-.\u00cd)Q\u00b2R2\u00a8P\u00aa\u00e5\u0002\u0004\u0000\u0000\u00ff\u00ff\u00c40af)\u0000\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://a.api.s0.t.hmny.io/",
                "body": "{\"jsonrpc\": \"2.0\", \"method\": \"eth_getCode\", \"params\": [\"0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a\", \"latest\"], \"id\": 195}",
                "headers": {
                    "User-Agent": [
                        "Web3.py/5.30.0/<class 'web3.providers.rpc.HTTPProvider'>"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "Accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "Content-Length": [
                        "122"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Content-Length": [
                        "1256"
                    ],
                    "Vary": [
                        "Origin"
                    ],
                    "Content-Encoding": [
                        "gzip"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "Set-Cookie": [],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:55 GMT"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                },
                "body": {
                    "string": "bytes_\u001f\u008b\b\u0000\u0000\u0000\u0000\u0000\u0000\u00ff\u00dcV\u00dbn\u001cG\u000e}\u00df\u00cf\u0098gc\u00c1{\u0091\u00fe\u009b\u00ae\u001b\u00b0\u008b\u00c5\u00ee\u00c2N\u0080\u0000A\u00fe=`U\u008f43\u0092b)v^\"\u00d9P\u000f\u00a7\u009a<<$\u000f\u00eb\u00d7\u00cb\u00bf\u00bf\u00fe\u00ef\u00bf_\u00fe\u00df.\u009f/\u00f4O\u00b8|\u00ba\u00fc\u00ab_>c\u00e8\u00a7\u00cb\u0097\u00f1\u00f5\u00e7\u00ff\u00fct\u00f9|\u0081_\f\u001c\f\u0004\u0094\f@\u00d8\u0010\f\u0001\u001ah1\u0000`5\u0018\u0080\u00cd\u00c1\u0098\u0091\u00dbP+\u0088y\u00a2\u0088\u0096\u00b4\u001e\u0001\u001a\u00ad\u00d6m\u0095\u00f1`\u0015C\u00a0\u001e\u00db\u00daa0\u00f4\n\u00cb\u00ca8Ok7\u001a\u009d\u00c7\u00b6R\u00d1\u00b2\u0010L5\u00adwq\u0097/=}\u00158\u00c0\u0089q[\u00fdD\u0013\u00da=\u00aa\u009c\u00d6&\u008f\u00be\u00d0\u00d1\u00a0\u00f7\u00be\u00d1\u001e\u00ba\u00dfz\u00b2\u00e6[X}[\u0089\u00ab\u0017\u00baZ\u00fb\u0089\u0096\u0006\u001e\u00a5\u00cb\u00b6\u0012\u00cd\u00c7\b`\u00b3\u00f7\u0001\u00bc\u00be\u0087~\u00e2\u0082\u00d0q\u0094\u00ba\u00ad\u00a8\u00e3\u00f6-\u00b6\u00f3y\u00dbz\u00b2`\u00eb\u001b\u0000\u00adY\u0005\u0087\u00d9\u00b5\u00b28\u00a0\u00e6\u0099qVg\u00dbuUlD\u00beWG\u00be\u0097\u00f5tP4 ppRrVtt\u0006\u00dc\u00cf\u0081A\u00ceA\u0001i\u000bt\u0005\u008c<\u00cb\u00ce\u00e9Y\u00ab\u00b3#\u00eexH\u00ac\u00c5\u00d1\u00f3#:;\u00a5\u0097\u00f4\r\u00c9\"B\u00cd\u0098\n\u00fb7\u00d6\u00ff<\u001b`\u0080\u0013\u00edD\u008d\n\u00c9\u0085\u0013\u00f0\u00c6\u0006\u0098\u00b1\b\u0080\u0097\u0017\u0080\u0003\u0018\u0003\u00cd\u009f\u00bcG\u00beS\u0015\u0082\u00b6\u00ef\u00d5\u00a7\u00e8\u0010\b\u001c0\u00f9\u0086\u0013\u00b4\u00e3\u0005'xH\u00f6\u00b4\u0003[\u00fe\u0013x\u00ce\u00c8\u00f1\u00fet\u00e1\u00f9\u00ce\u001fGV\u00b4\u00cc-\u0011rz\u0013;nY\u000fDEM\u00d659\u00c5\u00c8\fw>\u000f\u0098W\u007f>`^\u00f5\u0097\u00de\u00ef=\u00be\u00c7\u00db\u00a8\u00dfb\u00c0\u009e\u0019 \u00a0\u00efa\u00c0\u0011-v\u007fa\u00b2\u0010\u0010\u00b8Y\u0091'V\u0006\u00ae\u00ee\u00be\u00e2#~\u0089/\u00bb\u00fd\u0006\u001f\u00dd\u00e0\u00d3\u0007|\u00cbg\u00f6\u00c6\u009dO\u00d3\u0017>\u00c9\u0086!\u0014\u00b4\u00fbI\u00983 \b\u00ed\u001dLR\u00bc\u009c/|\u001b\u00e9Q\u001e\u0091\u00be\u009fK\u00b4\u0085u\u00deg\u00d5\u00df\u009a\u00ef\u00c2\u000f\u00f9\u008f\u0097\u00f9\u00bf\u00dd\u00f54\u00db\u000f\u00ec\u00far\u00c4b\u00f8A\u00b3\u009e\u00b01\u00f3\u00b7X\u00bc\u00c1\u00c6r\u00fc\u0098~\u0084\u00854\u00f1\u00d55C\u00bc\u00f4,\u00d5km\u00b8U\u00bb\u00ac~~\u0012\u00c8\u00c9\u008a\u00a5\u0092*,W\u00dd\n\u00d4\u009c_\u00dc\u00e7\u0002\u0015\u00cb\u001c8\u00e7lM\u0082\u00b8\u0083T\u00d5\u0098\u00d2)\u000e\u00af\u00b3Y\u00eb\u0007\u00c8\u00a8Z\u00a1s\u0013\u0083\u00a2\u00d8H\u0080\u009a6m-\u0010\u00a2\u0005\u00ed\u008eK\u00ef\u0019\u00e3\u00a0\u00dd\u009f\u00b0b\u00df*\u00b6\u0001\u00d0RGE\u00db\u0093\r\u0000T\u00deK\u00c7\u009b?+3A\u008b\u00c4\u00c0 \u00a9\u00ce\u0099\u00afKdM\u0004(\u0095\u00dde\u009d\u00cb\u009d\u00b18\u000b\u008a\u00b57\u009c\u009c\u00ce\u00ca\u008a\u00d1\u00daj\u00a9\u00eeYU\u00e1\u00bd\u00b3\u0011\u00d6\u0006Q\u0081\u00f4\u00c5\u00c9\u00dcU\u00c7\u00cf\u00b7rGR~\u00ceN\u0002\u00d8:\u009fOY\u0013\u00ad\u008e*+f\u00da\u00ce\r\u0092\u00ef\u00a7\u00d7\u00b5\u00b1Erc\u00d3\u009e\u00dc\u00b5[\u0096\u00b7\u00e7\u00ed\u00a3p*\u00c4}\u00d5\u00e5\u00be\u00ea\u00e9\u008f>\u00d2a%\u00b7\u0098\u00ab\u00ae}\u00b9\u0098\u0011\u0002\u00b7\u0000U\u00cf\u009dh\u00d7>\t\u000eIv\u0093\u00c12\u00bdi\u001d8t\u00d4\u00d1J\u00d7\u00daQfA\u00a1\u00d2q\u00b8L\u00ee=\u00ef\t\rf\u00a9D\u0081C+\u0001\u001c\u00cd[i\\\u00834h\u00e7\u00ba\u00fa\u0085u\u00b1\u0092\u00f5X\u0099\u009aV)\u00b1\u00fe~ \u0013FKf\u00ae\\\u00ecy8YA\u0002\u0015'\u00c4Ue\u00c5\u00bb\u00f9\u00fd@\f\u00c1\u00bc\u00b4-\u001d\u0088\u00ec\u000f\u00f5\u00d0\u00f2\u00a1\u0089\u0096\u0007\u0094\u00af\u00d6\u008f\u00d9%+\u0012\u00abc\u0012\u00fb\u00f7\u00cf\b\n\u00aa\u00d6\u0095\u00bf\u00a5\u0090\u00ff\u00f5\u0098\u009f\u00f9n\u00f5\u00cf\u00f3\u00fd\u00f1\u00c8\u00a9:\u00ce[\u0091T?\u0014\u000fR\u0099\u00feHUw\u00c4\u0015\u00c1\u00af\u0011\u0082\u00cf)Z\u00ba\u0090\u009as\u009e(\u00d9\u00dd\u00aa\u00eb\u0086\u00ba\u00e7h\u00dfO\u00b9\u00cc\u00de')\u001d\u001d\u00eb\u00a0\u00e6Q-\u001aU0\u009f\u008d\u008b\u00f7\u00e3\b\u00a5z\u0094\u0089\u00c6M\u000eD#\u009f\u00aa\u0087\u00f4\u00a9\u00c4\u0095\u00c7\\\u00f7\u00db{\u00d5\u00bdN\u0011_\u00ef\u0094\u00cfj\u00f1\u00daL\u009c5\u00c2\u00b3F\u0016\u00fd\u00b6F\u00af\u00ed\u0096'\u0006\u00e8\u00ccO\u009f8F\u00e7\u00e5\u00c5g\u0083\u00cd\u00c1\u00da0\u00ebW\u00dd\u00dd'\u0006_u\f\u00f5T[\u00ebM\u000b\u00f7\u001d\u0095\u00c7~:7\u00ea\u00b95\u009c\u00b6j*2\u0007\u0096Yf\u009b\u00ca\u00d4P'\u001c\u00d6+\u00d4n\u001d\u0006\u00b0\u00d7q\u0014\u00ec\f\u00dd\u00c1[\u00e9\u00e1\u00adr\u009d\u0085\u00cc\u008f\u00d0:S>\u00abi\u00bc\u00b8\u001f\u001d\u00b4\u0099\u00ca\u00dd\u0094\u00db*o.[io\u00f3\u0086\u00db\u00cdz2w\u009e\u00c1\u00d7\u00b6\u009c\u008b\u00db\u00dfq\u00c7%\u0013\u00eb\u0006b9u.\u00cf\u00b7\u00e1\u00fb\u00be{\u009cU\u0080X>\u00cf\u000e\u0092\u00fcf\u00cfk\u00deZ\u009f\u0019\u009d\u00e3 \u0013\u008b\u0002f\u0085\u00d5\u0089\u0090\b\u0002\u00c7(\u0083U\u00a4B\u00e9C\u00b8`\u009d\u00da,\u00c2\u00c2\u00e7(Sf\u001c\u0088\u00a3\u00b4\u0006<\u00caq\f\u00a5\u00ce2\u001aSEk`R\u00d8\u00a65c\u00e1L K\u00c4|\u00f9\u00ed\u001f\u00bf\u0007\u0000\u0000\u00ff\u00ff\u009e\u00b3\u00d13I\u0010\u0000\u0000"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://graph.viper.exchange/subgraphs/name/venomprotocol/venomswap-v2",
                "body": "{\"operationName\": \"blocks\", \"variables\": {\"token_id\": \"0xea589e93ff18b1a1f1e9bac7ef3e86ab62addc79\"}, \"query\": \"query blocks($token_id: ID!) {\\n        t29387825: \\n            token(id: $token_id, block: {number: 29387825}) {\\n              __typename\\n              derivedETH\\n            }\\n        b29387825:\\n            bundle(id: \\\"1\\\", block: {number: 29387825}) {\\n              ethPrice\\n              __typename\\n            }\\n        }\"}",
                "headers": {
                    "user-agent": [
                        "Mozilla/5.0 (Macintosh; Intel Mac OS X 12_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.81 Safari/537.38"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "authority": [
                        "graph.viper.exchange"
                    ],
                    "pragma": [
                        "no-cache"
                    ],
                    "cache-control": [
                        "no-cache"
                    ],
                    "sec-ch-ua": [
                        "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"99\", \"Google Chrome\";v=\"99\""
                    ],
                    "dnt": [
                        "1"
                    ],
                    "sec-ch-ua-mobile": [
                        "?0"
                    ],
                    "sec-ch-ua-platform": [
                        "\"macOS\""
                    ],
                    "origin": [
                        "https://info.viper.exchange"
                    ],
                    "sec-fetch-site": [
                        "same-site"
                    ],
                    "sec-fetch-mode": [
                        "cors"
                    ],
                    "sec-fetch-dest": [
                        "empty"
                    ],
                    "referer": [
                        "https://info.viper.exchange"
                    ],
                    "accept-language": [
                        "en-US,en;q=0.9"
                    ],
                    "Content-Length": [
                        "450"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Strict-Transport-Security": [
                        "max-age=63072000; includeSubdomains; preload"
                    ],
                    "X-Content-Type-Options": [
                        "nosniff"
                    ],
                    "Content-Length": [
                        "184"
                    ],
                    "access-control-allow-methods": [
                        "GET, OPTIONS, POST"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "graph-attestable": [
                        "true"
                    ],
                    "Content-Security-Policy": [
                        "upgrade-insecure-requests"
                    ],
                    "access-control-allow-headers": [
                        "Content-Type, User-Agent"
                    ],
                    "Server": [
                        "nginx/1.21.4"
                    ],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:56 GMT"
                    ],
                    "X-Frame-Options": [
                        "DENY"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "access-control-allow-origin": [
                        "*"
                    ],
                    "Set-Cookie": []
                },
                "body": {
                    "string": "{\"data\":{\"b29387825\":{\"__typename\":\"Bundle\",\"ethPrice\":\"0.2193937228982400273770436531868526\"},\"t29387825\":{\"__typename\":\"Token\",\"derivedETH\":\"0.09756155833171828459348849194961854\"}}}"
                }
            }
        },
        {
            "request": {
                "method": "POST",
                "uri": "https://graph.viper.exchange/subgraphs/name/venomprotocol/venomswap-v2",
                "body": "{\"operationName\": \"blocks\", \"variables\": {\"token_id\": \"0xcf664087a5bb0237a0bad6742852ec6c8d69a27a\"}, \"query\": \"query blocks($token_id: ID!) {\\n        t29387825: \\n            token(id: $token_id, block: {number: 29387825}) {\\n              __typename\\n              derivedETH\\n            }\\n        b29387825:\\n            bundle(id: \\\"1\\\", block: {number: 29387825}) {\\n              ethPrice\\n              __typename\\n            }\\n        }\"}",
                "headers": {
                    "user-agent": [
                        "Mozilla/5.0 (Macintosh; Intel Mac OS X 12_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.81 Safari/537.38"
                    ],
                    "Accept-Encoding": [
                        "gzip, deflate"
                    ],
                    "accept": [
                        "*/*"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "authority": [
                        "graph.viper.exchange"
                    ],
                    "pragma": [
                        "no-cache"
                    ],
                    "cache-control": [
                        "no-cache"
                    ],
                    "sec-ch-ua": [
                        "\" Not A;Brand\";v=\"99\", \"Chromium\";v=\"99\", \"Google Chrome\";v=\"99\""
                    ],
                    "dnt": [
                        "1"
                    ],
                    "sec-ch-ua-mobile": [
                        "?0"
                    ],
                    "sec-ch-ua-platform": [
                        "\"macOS\""
                    ],
                    "origin": [
                        "https://info.viper.exchange"
                    ],
                    "sec-fetch-site": [
                        "same-site"
                    ],
                    "sec-fetch-mode": [
                        "cors"
                    ],
                    "sec-fetch-dest": [
                        "empty"
                    ],
                    "referer": [
                        "https://info.viper.exchange"
                    ],
                    "accept-language": [
                        "en-US,en;q=0.9"
                    ],
                    "Content-Length": [
                        "450"
                    ],
                    "Content-Type": [
                        "application/json"
                    ]
                }
            },
            "response": {
                "status": {
                    "code": 200,
                    "message": "OK"
                },
                "headers": {
                    "Strict-Transport-Security": [
                        "max-age=63072000; includeSubdomains; preload"
                    ],
                    "X-Content-Type-Options": [
                        "nosniff"
                    ],
                    "Content-Length": [
                        "148"
                    ],
                    "access-control-allow-methods": [
                        "GET, OPTIONS, POST"
                    ],
                    "Connection": [
                        "keep-alive"
                    ],
                    "graph-attestable": [
                        "true"
                    ],
                    "Content-Security-Policy": [
                        "upgrade-insecure-requests"
                    ],
                    "access-control-allow-headers": [
                        "Content-Type, User-Agent"
                    ],
                    "Server": [
                        "nginx/1.21.4"
                    ],
                    "Date": [
                        "Sat, 20 Aug 2022 22:04:56 GMT"
                    ],
                    "X-Frame-Options": [
                        "DENY"
                    ],
                    "Content-Type": [
                        "application/json"
                    ],
                    "access-control-allow-origin": [
                        "*"
                    ],
                    "Set-Cookie": []
                },
                "body": {
                    "string": "{\"data\":{\"b29387825\":{\"__typename\":\"Bundle\",\"ethPrice\":\"0.2193937228982400273770436531868526\"},\"t29387825\":{\"__typename\":\"Token\",\"derivedETH\":\"1\"}}}"
                }
            }
        }
    ]
}
